"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/neo4j-driver";
exports.ids = ["vendor-chunks/neo4j-driver"];
exports.modules = {

/***/ "(rsc)/./node_modules/neo4j-driver/lib/driver.js":
/*!*************************************************!*\
  !*** ./node_modules/neo4j-driver/lib/driver.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WRITE = exports.READ = exports.Driver = void 0;\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar session_rx_1 = __importDefault(__webpack_require__(/*! ./session-rx */ \"(rsc)/./node_modules/neo4j-driver/lib/session-rx.js\"));\nvar FETCH_ALL = neo4j_driver_core_1.internal.constants.FETCH_ALL;\nvar READ = neo4j_driver_core_1.driver.READ, WRITE = neo4j_driver_core_1.driver.WRITE;\nexports.READ = READ;\nexports.WRITE = WRITE;\n/**\n * A driver maintains one or more {@link Session}s with a remote\n * Neo4j instance. Through the {@link Session}s you can send queries\n * and retrieve results from the database.\n *\n * Drivers are reasonably expensive to create - you should strive to keep one\n * driver instance around per Neo4j Instance you connect to.\n *\n * @access public\n */\nvar Driver = /** @class */ (function (_super) {\n    __extends(Driver, _super);\n    function Driver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Acquire a reactive session to communicate with the database. The session will\n     * borrow connections from the underlying connection pool as required and\n     * should be considered lightweight and disposable.\n     *\n     * This comes with some responsibility - make sure you always call\n     * {@link close} when you are done using a session, and likewise,\n     * make sure you don't close your session before you are done using it. Once\n     * it is closed, the underlying connection will be released to the connection\n     * pool and made available for others to use.\n     *\n     * @public\n     * @param {SessionConfig} config\n     * @returns {RxSession} new reactive session.\n     */\n    Driver.prototype.rxSession = function (_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultAccessMode, defaultAccessMode = _c === void 0 ? WRITE : _c, bookmarks = _b.bookmarks, _d = _b.database, database = _d === void 0 ? '' : _d, fetchSize = _b.fetchSize, impersonatedUser = _b.impersonatedUser, bookmarkManager = _b.bookmarkManager, notificationFilter = _b.notificationFilter, auth = _b.auth;\n        return new session_rx_1.default({\n            session: this._newSession({\n                defaultAccessMode: defaultAccessMode,\n                bookmarkOrBookmarks: bookmarks,\n                database: database,\n                impersonatedUser: impersonatedUser,\n                auth: auth,\n                reactive: false,\n                fetchSize: validateFetchSizeValue(fetchSize, this._config.fetchSize),\n                bookmarkManager: bookmarkManager,\n                notificationFilter: notificationFilter,\n                log: this._log\n            }),\n            config: this._config,\n            log: this._log\n        });\n    };\n    return Driver;\n}(neo4j_driver_core_1.Driver));\nexports.Driver = Driver;\n/**\n * @private\n */\nfunction validateFetchSizeValue(rawValue, defaultWhenAbsent) {\n    var fetchSize = parseInt(rawValue, 10);\n    if (fetchSize > 0 || fetchSize === FETCH_ALL) {\n        return fetchSize;\n    }\n    else if (fetchSize === 0 || fetchSize < 0) {\n        throw new Error(\"The fetch size can only be a positive value or \".concat(FETCH_ALL, \" for ALL. However fetchSize = \").concat(fetchSize));\n    }\n    else {\n        return defaultWhenAbsent;\n    }\n}\nexports[\"default\"] = Driver;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver/lib/driver.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver/lib/index.js":
/*!************************************************!*\
  !*** ./node_modules/neo4j-driver/lib/index.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Path = exports.UnboundRelationship = exports.Relationship = exports.Node = exports.Record = exports.ServerInfo = exports.Notification = exports.QueryStatistics = exports.ProfiledPlan = exports.Plan = exports.ResultSummary = exports.RxResult = exports.RxManagedTransaction = exports.RxTransaction = exports.RxSession = exports.EagerResult = exports.Result = exports.ManagedTransaction = exports.Transaction = exports.Session = exports.Driver = exports.temporal = exports.spatial = exports.graph = exports.error = exports.routing = exports.session = exports.types = exports.logging = exports.auth = exports.isRetryableError = exports.Neo4jError = exports.integer = exports.isUnboundRelationship = exports.isRelationship = exports.isPathSegment = exports.isPath = exports.isNode = exports.isDateTime = exports.isLocalDateTime = exports.isDate = exports.isTime = exports.isLocalTime = exports.isDuration = exports.isPoint = exports.isInt = exports.int = exports.hasReachableServer = exports.driver = exports.authTokenManagers = void 0;\nexports.clientCertificateProviders = exports.notificationFilterMinimumSeverityLevel = exports.notificationFilterDisabledCategory = exports.notificationSeverityLevel = exports.notificationCategory = exports.resultTransformers = exports.bookmarkManager = exports.DateTime = exports.LocalDateTime = exports.Date = exports.Time = exports.LocalTime = exports.Duration = exports.Integer = exports.Point = exports.PathSegment = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar driver_1 = __webpack_require__(/*! ./driver */ \"(rsc)/./node_modules/neo4j-driver/lib/driver.js\");\nObject.defineProperty(exports, \"Driver\", ({ enumerable: true, get: function () { return driver_1.Driver; } }));\nvar version_1 = __importDefault(__webpack_require__(/*! ./version */ \"(rsc)/./node_modules/neo4j-driver/lib/version.js\"));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nObject.defineProperty(exports, \"authTokenManagers\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.authTokenManagers; } }));\nObject.defineProperty(exports, \"Neo4jError\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.Neo4jError; } }));\nObject.defineProperty(exports, \"isRetryableError\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.isRetryableError; } }));\nObject.defineProperty(exports, \"error\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.error; } }));\nObject.defineProperty(exports, \"Integer\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.Integer; } }));\nObject.defineProperty(exports, \"int\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.int; } }));\nObject.defineProperty(exports, \"isInt\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.isInt; } }));\nObject.defineProperty(exports, \"isPoint\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.isPoint; } }));\nObject.defineProperty(exports, \"Point\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.Point; } }));\nObject.defineProperty(exports, \"Date\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.Date; } }));\nObject.defineProperty(exports, \"DateTime\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.DateTime; } }));\nObject.defineProperty(exports, \"Duration\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.Duration; } }));\nObject.defineProperty(exports, \"isDate\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.isDate; } }));\nObject.defineProperty(exports, \"isDateTime\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.isDateTime; } }));\nObject.defineProperty(exports, \"isDuration\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.isDuration; } }));\nObject.defineProperty(exports, \"isLocalDateTime\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.isLocalDateTime; } }));\nObject.defineProperty(exports, \"isLocalTime\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.isLocalTime; } }));\nObject.defineProperty(exports, \"isNode\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.isNode; } }));\nObject.defineProperty(exports, \"isPath\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.isPath; } }));\nObject.defineProperty(exports, \"isPathSegment\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.isPathSegment; } }));\nObject.defineProperty(exports, \"isRelationship\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.isRelationship; } }));\nObject.defineProperty(exports, \"isTime\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.isTime; } }));\nObject.defineProperty(exports, \"isUnboundRelationship\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.isUnboundRelationship; } }));\nObject.defineProperty(exports, \"LocalDateTime\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.LocalDateTime; } }));\nObject.defineProperty(exports, \"LocalTime\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.LocalTime; } }));\nObject.defineProperty(exports, \"Time\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.Time; } }));\nObject.defineProperty(exports, \"Node\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.Node; } }));\nObject.defineProperty(exports, \"Path\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.Path; } }));\nObject.defineProperty(exports, \"PathSegment\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.PathSegment; } }));\nObject.defineProperty(exports, \"Relationship\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.Relationship; } }));\nObject.defineProperty(exports, \"UnboundRelationship\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.UnboundRelationship; } }));\nObject.defineProperty(exports, \"Record\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.Record; } }));\nObject.defineProperty(exports, \"ResultSummary\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.ResultSummary; } }));\nObject.defineProperty(exports, \"Plan\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.Plan; } }));\nObject.defineProperty(exports, \"ProfiledPlan\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.ProfiledPlan; } }));\nObject.defineProperty(exports, \"QueryStatistics\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.QueryStatistics; } }));\nObject.defineProperty(exports, \"Notification\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.Notification; } }));\nObject.defineProperty(exports, \"ServerInfo\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.ServerInfo; } }));\nObject.defineProperty(exports, \"Result\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.Result; } }));\nObject.defineProperty(exports, \"EagerResult\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.EagerResult; } }));\nObject.defineProperty(exports, \"auth\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.auth; } }));\nObject.defineProperty(exports, \"Session\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.Session; } }));\nObject.defineProperty(exports, \"Transaction\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.Transaction; } }));\nObject.defineProperty(exports, \"ManagedTransaction\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.ManagedTransaction; } }));\nObject.defineProperty(exports, \"bookmarkManager\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.bookmarkManager; } }));\nObject.defineProperty(exports, \"routing\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.routing; } }));\nObject.defineProperty(exports, \"resultTransformers\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.resultTransformers; } }));\nObject.defineProperty(exports, \"notificationCategory\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.notificationCategory; } }));\nObject.defineProperty(exports, \"notificationSeverityLevel\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.notificationSeverityLevel; } }));\nObject.defineProperty(exports, \"notificationFilterDisabledCategory\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.notificationFilterDisabledCategory; } }));\nObject.defineProperty(exports, \"notificationFilterMinimumSeverityLevel\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.notificationFilterMinimumSeverityLevel; } }));\nObject.defineProperty(exports, \"clientCertificateProviders\", ({ enumerable: true, get: function () { return neo4j_driver_core_1.clientCertificateProviders; } }));\nvar neo4j_driver_bolt_connection_1 = __webpack_require__(/*! neo4j-driver-bolt-connection */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/index.js\");\nvar session_rx_1 = __importDefault(__webpack_require__(/*! ./session-rx */ \"(rsc)/./node_modules/neo4j-driver/lib/session-rx.js\"));\nexports.RxSession = session_rx_1.default;\nvar transaction_rx_1 = __importDefault(__webpack_require__(/*! ./transaction-rx */ \"(rsc)/./node_modules/neo4j-driver/lib/transaction-rx.js\"));\nexports.RxTransaction = transaction_rx_1.default;\nvar transaction_managed_rx_1 = __importDefault(__webpack_require__(/*! ./transaction-managed-rx */ \"(rsc)/./node_modules/neo4j-driver/lib/transaction-managed-rx.js\"));\nexports.RxManagedTransaction = transaction_managed_rx_1.default;\nvar result_rx_1 = __importDefault(__webpack_require__(/*! ./result-rx */ \"(rsc)/./node_modules/neo4j-driver/lib/result-rx.js\"));\nexports.RxResult = result_rx_1.default;\nvar _a = neo4j_driver_core_1.internal.util, ENCRYPTION_ON = _a.ENCRYPTION_ON, assertString = _a.assertString, isEmptyObjectOrNull = _a.isEmptyObjectOrNull, ServerAddress = neo4j_driver_core_1.internal.serverAddress.ServerAddress, urlUtil = neo4j_driver_core_1.internal.urlUtil;\nvar USER_AGENT = 'neo4j-javascript/' + version_1.default;\nfunction isAuthTokenManager(value) {\n    return typeof value === 'object' &&\n        value != null &&\n        'getToken' in value &&\n        'handleSecurityException' in value &&\n        typeof value.getToken === 'function' &&\n        typeof value.handleSecurityException === 'function';\n}\nfunction createAuthManager(authTokenOrManager) {\n    if (isAuthTokenManager(authTokenOrManager)) {\n        return authTokenOrManager;\n    }\n    var authToken = authTokenOrManager;\n    // Sanitize authority token. Nicer error from server when a scheme is set.\n    authToken = authToken || {};\n    authToken.scheme = authToken.scheme || 'none';\n    return (0, neo4j_driver_core_1.staticAuthTokenManager)({ authToken: authToken });\n}\n/**\n * Construct a new Neo4j Driver. This is your main entry point for this\n * library.\n *\n * @param {string} url The URL for the Neo4j database, for instance \"neo4j://localhost\" and/or \"bolt://localhost\"\n * @param {Map<string,string>} authToken Authentication credentials. See {@link auth} for helpers.\n * @param {Config} config Configuration object.\n * @returns {Driver}\n */\nfunction driver(url, authToken, config) {\n    if (config === void 0) { config = {}; }\n    assertString(url, 'Bolt URL');\n    var parsedUrl = urlUtil.parseDatabaseUrl(url);\n    // Determine encryption/trust options from the URL.\n    var routing = false;\n    var encrypted = false;\n    var trust;\n    switch (parsedUrl.scheme) {\n        case 'bolt':\n            break;\n        case 'bolt+s':\n            encrypted = true;\n            trust = 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES';\n            break;\n        case 'bolt+ssc':\n            encrypted = true;\n            trust = 'TRUST_ALL_CERTIFICATES';\n            break;\n        case 'neo4j':\n            routing = true;\n            break;\n        case 'neo4j+s':\n            encrypted = true;\n            trust = 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES';\n            routing = true;\n            break;\n        case 'neo4j+ssc':\n            encrypted = true;\n            trust = 'TRUST_ALL_CERTIFICATES';\n            routing = true;\n            break;\n        default:\n            throw new Error(\"Unknown scheme: \".concat(parsedUrl.scheme));\n    }\n    // Encryption enabled on URL, propagate trust to the config.\n    if (encrypted) {\n        // Check for configuration conflict between URL and config.\n        if ('encrypted' in config || 'trust' in config) {\n            throw new Error('Encryption/trust can only be configured either through URL or config, not both');\n        }\n        config.encrypted = ENCRYPTION_ON;\n        config.trust = trust;\n        config.clientCertificate = (0, neo4j_driver_core_1.resolveCertificateProvider)(config.clientCertificate);\n    }\n    var authTokenManager = createAuthManager(authToken);\n    // Use default user agent or user agent specified by user.\n    config.userAgent = config.userAgent || USER_AGENT;\n    config.boltAgent = neo4j_driver_core_1.internal.boltAgent.fromVersion(version_1.default);\n    var address = ServerAddress.fromUrl(parsedUrl.hostAndPort);\n    var meta = {\n        address: address,\n        typename: routing ? 'Routing' : 'Direct',\n        routing: routing\n    };\n    return new driver_1.Driver(meta, config, createConnectionProviderFunction());\n    function createConnectionProviderFunction() {\n        if (routing) {\n            return function (id, config, log, hostNameResolver) {\n                return new neo4j_driver_bolt_connection_1.RoutingConnectionProvider({\n                    id: id,\n                    config: config,\n                    log: log,\n                    hostNameResolver: hostNameResolver,\n                    authTokenManager: authTokenManager,\n                    address: address,\n                    userAgent: config.userAgent,\n                    boltAgent: config.boltAgent,\n                    routingContext: parsedUrl.query\n                });\n            };\n        }\n        else {\n            if (!isEmptyObjectOrNull(parsedUrl.query)) {\n                throw new Error(\"Parameters are not supported with none routed scheme. Given URL: '\".concat(url, \"'\"));\n            }\n            return function (id, config, log) {\n                return new neo4j_driver_bolt_connection_1.DirectConnectionProvider({\n                    id: id,\n                    config: config,\n                    log: log,\n                    authTokenManager: authTokenManager,\n                    address: address,\n                    userAgent: config.userAgent,\n                    boltAgent: config.boltAgent\n                });\n            };\n        }\n    }\n}\nexports.driver = driver;\n/**\n * Verifies if the driver can reach a server at the given url.\n *\n * @experimental\n * @since 5.0.0\n * @param {string} url The URL for the Neo4j database, for instance \"neo4j://localhost\" and/or \"bolt://localhost\"\n * @param {object} config Configuration object. See the {@link driver}\n * @returns {true} When the server is reachable\n * @throws {Error} When the server is not reachable or the url is invalid\n */\nfunction hasReachableServer(url, config) {\n    return __awaiter(this, void 0, void 0, function () {\n        var nonLoggedDriver;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    nonLoggedDriver = driver(url, { scheme: 'none', principal: '', credentials: '' }, config);\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, , 3, 5]);\n                    return [4 /*yield*/, nonLoggedDriver.getNegotiatedProtocolVersion()];\n                case 2:\n                    _a.sent();\n                    return [2 /*return*/, true];\n                case 3: return [4 /*yield*/, nonLoggedDriver.close()];\n                case 4:\n                    _a.sent();\n                    return [7 /*endfinally*/];\n                case 5: return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.hasReachableServer = hasReachableServer;\n/**\n * Object containing predefined logging configurations. These are expected to be used as values of the driver config's `logging` property.\n * @property {function(level: ?string): object} console the function to create a logging config that prints all messages to `console.log` with\n * timestamp, level and message. It takes an optional `level` parameter which represents the maximum log level to be logged. Default value is 'info'.\n */\nvar logging = {\n    console: function (level) {\n        return {\n            level: level,\n            logger: function (level, message) {\n                return console.log(\"\".concat(global.Date.now(), \" \").concat(level.toUpperCase(), \" \").concat(message));\n            }\n        };\n    }\n};\nexports.logging = logging;\n/**\n * Object containing constructors for all neo4j types.\n */\nvar types = {\n    Node: neo4j_driver_core_1.Node,\n    Relationship: neo4j_driver_core_1.Relationship,\n    UnboundRelationship: neo4j_driver_core_1.UnboundRelationship,\n    PathSegment: neo4j_driver_core_1.PathSegment,\n    Path: neo4j_driver_core_1.Path,\n    Result: neo4j_driver_core_1.Result,\n    EagerResult: neo4j_driver_core_1.EagerResult,\n    ResultSummary: neo4j_driver_core_1.ResultSummary,\n    Record: neo4j_driver_core_1.Record,\n    Point: neo4j_driver_core_1.Point,\n    Date: neo4j_driver_core_1.Date,\n    DateTime: neo4j_driver_core_1.DateTime,\n    Duration: neo4j_driver_core_1.Duration,\n    LocalDateTime: neo4j_driver_core_1.LocalDateTime,\n    LocalTime: neo4j_driver_core_1.LocalTime,\n    Time: neo4j_driver_core_1.Time,\n    Integer: neo4j_driver_core_1.Integer\n};\nexports.types = types;\n/**\n * Object containing string constants representing session access modes.\n */\nvar session = {\n    READ: driver_1.READ,\n    WRITE: driver_1.WRITE\n};\nexports.session = session;\n/**\n * Object containing functions to work with {@link Integer} objects.\n */\nvar integer = {\n    toNumber: neo4j_driver_core_1.toNumber,\n    toString: neo4j_driver_core_1.toString,\n    inSafeRange: neo4j_driver_core_1.inSafeRange\n};\nexports.integer = integer;\n/**\n * Object containing functions to work with spatial types, like {@link Point}.\n */\nvar spatial = {\n    isPoint: neo4j_driver_core_1.isPoint\n};\nexports.spatial = spatial;\n/**\n * Object containing functions to work with temporal types, like {@link Time} or {@link Duration}.\n */\nvar temporal = {\n    isDuration: neo4j_driver_core_1.isDuration,\n    isLocalTime: neo4j_driver_core_1.isLocalTime,\n    isTime: neo4j_driver_core_1.isTime,\n    isDate: neo4j_driver_core_1.isDate,\n    isLocalDateTime: neo4j_driver_core_1.isLocalDateTime,\n    isDateTime: neo4j_driver_core_1.isDateTime\n};\nexports.temporal = temporal;\n/**\n * Object containing functions to work with graph types, like {@link Node} or {@link Relationship}.\n */\nvar graph = {\n    isNode: neo4j_driver_core_1.isNode,\n    isPath: neo4j_driver_core_1.isPath,\n    isPathSegment: neo4j_driver_core_1.isPathSegment,\n    isRelationship: neo4j_driver_core_1.isRelationship,\n    isUnboundRelationship: neo4j_driver_core_1.isUnboundRelationship\n};\nexports.graph = graph;\n/**\n * @private\n */\nvar forExport = {\n    authTokenManagers: neo4j_driver_core_1.authTokenManagers,\n    driver: driver,\n    hasReachableServer: hasReachableServer,\n    int: neo4j_driver_core_1.int,\n    isInt: neo4j_driver_core_1.isInt,\n    isPoint: neo4j_driver_core_1.isPoint,\n    isDuration: neo4j_driver_core_1.isDuration,\n    isLocalTime: neo4j_driver_core_1.isLocalTime,\n    isTime: neo4j_driver_core_1.isTime,\n    isDate: neo4j_driver_core_1.isDate,\n    isLocalDateTime: neo4j_driver_core_1.isLocalDateTime,\n    isDateTime: neo4j_driver_core_1.isDateTime,\n    isNode: neo4j_driver_core_1.isNode,\n    isPath: neo4j_driver_core_1.isPath,\n    isPathSegment: neo4j_driver_core_1.isPathSegment,\n    isRelationship: neo4j_driver_core_1.isRelationship,\n    isUnboundRelationship: neo4j_driver_core_1.isUnboundRelationship,\n    integer: integer,\n    Neo4jError: neo4j_driver_core_1.Neo4jError,\n    isRetryableError: neo4j_driver_core_1.isRetryableError,\n    auth: neo4j_driver_core_1.auth,\n    logging: logging,\n    types: types,\n    session: session,\n    routing: neo4j_driver_core_1.routing,\n    error: neo4j_driver_core_1.error,\n    graph: graph,\n    spatial: spatial,\n    temporal: temporal,\n    Driver: driver_1.Driver,\n    Session: neo4j_driver_core_1.Session,\n    Transaction: neo4j_driver_core_1.Transaction,\n    ManagedTransaction: neo4j_driver_core_1.ManagedTransaction,\n    Result: neo4j_driver_core_1.Result,\n    EagerResult: neo4j_driver_core_1.EagerResult,\n    RxSession: session_rx_1.default,\n    RxTransaction: transaction_rx_1.default,\n    RxManagedTransaction: transaction_managed_rx_1.default,\n    RxResult: result_rx_1.default,\n    ResultSummary: neo4j_driver_core_1.ResultSummary,\n    Plan: neo4j_driver_core_1.Plan,\n    ProfiledPlan: neo4j_driver_core_1.ProfiledPlan,\n    QueryStatistics: neo4j_driver_core_1.QueryStatistics,\n    Notification: neo4j_driver_core_1.Notification,\n    ServerInfo: neo4j_driver_core_1.ServerInfo,\n    Record: neo4j_driver_core_1.Record,\n    Node: neo4j_driver_core_1.Node,\n    Relationship: neo4j_driver_core_1.Relationship,\n    UnboundRelationship: neo4j_driver_core_1.UnboundRelationship,\n    Path: neo4j_driver_core_1.Path,\n    PathSegment: neo4j_driver_core_1.PathSegment,\n    Point: neo4j_driver_core_1.Point,\n    Integer: neo4j_driver_core_1.Integer,\n    Duration: neo4j_driver_core_1.Duration,\n    LocalTime: neo4j_driver_core_1.LocalTime,\n    Time: neo4j_driver_core_1.Time,\n    Date: neo4j_driver_core_1.Date,\n    LocalDateTime: neo4j_driver_core_1.LocalDateTime,\n    DateTime: neo4j_driver_core_1.DateTime,\n    bookmarkManager: neo4j_driver_core_1.bookmarkManager,\n    resultTransformers: neo4j_driver_core_1.resultTransformers,\n    notificationCategory: neo4j_driver_core_1.notificationCategory,\n    notificationSeverityLevel: neo4j_driver_core_1.notificationSeverityLevel,\n    notificationFilterDisabledCategory: neo4j_driver_core_1.notificationFilterDisabledCategory,\n    notificationFilterMinimumSeverityLevel: neo4j_driver_core_1.notificationFilterMinimumSeverityLevel,\n    clientCertificateProviders: neo4j_driver_core_1.clientCertificateProviders\n};\nexports[\"default\"] = forExport;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver/lib/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver/lib/internal/retry-logic-rx.js":
/*!******************************************************************!*\
  !*** ./node_modules/neo4j-driver/lib/internal/retry-logic-rx.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\n// eslint-disable-next-line no-unused-vars\nvar rxjs_1 = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/index.js\");\nvar operators_1 = __webpack_require__(/*! rxjs/operators */ \"(rsc)/./node_modules/rxjs/dist/cjs/operators/index.js\");\nvar \n// eslint-disable-next-line no-unused-vars\nLogger = neo4j_driver_core_1.internal.logger.Logger;\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE;\nvar DEFAULT_MAX_RETRY_TIME_MS = 30 * 1000; // 30 seconds\nvar DEFAULT_INITIAL_RETRY_DELAY_MS = 1000; // 1 seconds\nvar DEFAULT_RETRY_DELAY_MULTIPLIER = 2.0;\nvar DEFAULT_RETRY_DELAY_JITTER_FACTOR = 0.2;\nvar RxRetryLogic = /** @class */ (function () {\n    /**\n     *\n     * @param {Object} args\n     * @param {Logger} args.logger\n     */\n    function RxRetryLogic(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.maxRetryTimeout, maxRetryTimeout = _c === void 0 ? DEFAULT_MAX_RETRY_TIME_MS : _c, _d = _b.initialDelay, initialDelay = _d === void 0 ? DEFAULT_INITIAL_RETRY_DELAY_MS : _d, _e = _b.delayMultiplier, delayMultiplier = _e === void 0 ? DEFAULT_RETRY_DELAY_MULTIPLIER : _e, _f = _b.delayJitter, delayJitter = _f === void 0 ? DEFAULT_RETRY_DELAY_JITTER_FACTOR : _f, _g = _b.logger, logger = _g === void 0 ? null : _g;\n        this._maxRetryTimeout = valueOrDefault(maxRetryTimeout, DEFAULT_MAX_RETRY_TIME_MS);\n        this._initialDelay = valueOrDefault(initialDelay, DEFAULT_INITIAL_RETRY_DELAY_MS);\n        this._delayMultiplier = valueOrDefault(delayMultiplier, DEFAULT_RETRY_DELAY_MULTIPLIER);\n        this._delayJitter = valueOrDefault(delayJitter, DEFAULT_RETRY_DELAY_JITTER_FACTOR);\n        this._logger = logger;\n    }\n    /**\n     *\n     * @param {Observable<Any>} work\n     */\n    RxRetryLogic.prototype.retry = function (work) {\n        var _this = this;\n        return work.pipe((0, operators_1.retryWhen)(function (failedWork) {\n            var handledExceptions = [];\n            var startTime = Date.now();\n            var retryCount = 1;\n            var delayDuration = _this._initialDelay;\n            return failedWork.pipe((0, operators_1.mergeMap)(function (err) {\n                if (!(0, neo4j_driver_core_1.isRetriableError)(err)) {\n                    return (0, rxjs_1.throwError)(function () { return err; });\n                }\n                handledExceptions.push(err);\n                if (retryCount >= 2 &&\n                    Date.now() - startTime >= _this._maxRetryTimeout) {\n                    var error_1 = (0, neo4j_driver_core_1.newError)(\"Failed after retried for \".concat(retryCount, \" times in \").concat(_this._maxRetryTimeout, \" ms. Make sure that your database is online and retry again.\"), SERVICE_UNAVAILABLE);\n                    error_1.seenErrors = handledExceptions;\n                    return (0, rxjs_1.throwError)(function () { return error_1; });\n                }\n                var nextDelayDuration = _this._computeNextDelay(delayDuration);\n                delayDuration = delayDuration * _this._delayMultiplier;\n                retryCount++;\n                if (_this._logger) {\n                    _this._logger.warn(\"Transaction failed and will be retried in \".concat(nextDelayDuration));\n                }\n                return (0, rxjs_1.of)(1).pipe((0, operators_1.delay)(nextDelayDuration));\n            }));\n        }));\n    };\n    RxRetryLogic.prototype._computeNextDelay = function (delay) {\n        var jitter = delay * this._delayJitter;\n        return delay - jitter + 2 * jitter * Math.random();\n    };\n    return RxRetryLogic;\n}());\nexports[\"default\"] = RxRetryLogic;\nfunction valueOrDefault(value, defaultValue) {\n    if (value || value === 0) {\n        return value;\n    }\n    return defaultValue;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyL2xpYi9pbnRlcm5hbC9yZXRyeS1sb2dpYy1yeC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQixtQkFBTyxDQUFDLDhFQUFtQjtBQUNyRDtBQUNBLGFBQWEsbUJBQU8sQ0FBQywwREFBTTtBQUMzQixrQkFBa0IsbUJBQU8sQ0FBQyw2RUFBZ0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkM7QUFDM0MsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaUJBQWlCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFLGFBQWE7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFLGlCQUFpQjtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXIvbGliL2ludGVybmFsL3JldHJ5LWxvZ2ljLXJ4LmpzPzJhNTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIENvcHlyaWdodCAoYykgXCJOZW80alwiXG4gKiBOZW80aiBTd2VkZW4gQUIgW2h0dHBzOi8vbmVvNGouY29tXVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIG5lbzRqX2RyaXZlcl9jb3JlXzEgPSByZXF1aXJlKFwibmVvNGotZHJpdmVyLWNvcmVcIik7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbnZhciByeGpzXzEgPSByZXF1aXJlKFwicnhqc1wiKTtcbnZhciBvcGVyYXRvcnNfMSA9IHJlcXVpcmUoXCJyeGpzL29wZXJhdG9yc1wiKTtcbnZhciBcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuTG9nZ2VyID0gbmVvNGpfZHJpdmVyX2NvcmVfMS5pbnRlcm5hbC5sb2dnZXIuTG9nZ2VyO1xudmFyIFNFUlZJQ0VfVU5BVkFJTEFCTEUgPSBuZW80al9kcml2ZXJfY29yZV8xLmVycm9yLlNFUlZJQ0VfVU5BVkFJTEFCTEU7XG52YXIgREVGQVVMVF9NQVhfUkVUUllfVElNRV9NUyA9IDMwICogMTAwMDsgLy8gMzAgc2Vjb25kc1xudmFyIERFRkFVTFRfSU5JVElBTF9SRVRSWV9ERUxBWV9NUyA9IDEwMDA7IC8vIDEgc2Vjb25kc1xudmFyIERFRkFVTFRfUkVUUllfREVMQVlfTVVMVElQTElFUiA9IDIuMDtcbnZhciBERUZBVUxUX1JFVFJZX0RFTEFZX0pJVFRFUl9GQUNUT1IgPSAwLjI7XG52YXIgUnhSZXRyeUxvZ2ljID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIHtPYmplY3R9IGFyZ3NcbiAgICAgKiBAcGFyYW0ge0xvZ2dlcn0gYXJncy5sb2dnZXJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBSeFJldHJ5TG9naWMoX2EpIHtcbiAgICAgICAgdmFyIF9iID0gX2EgPT09IHZvaWQgMCA/IHt9IDogX2EsIF9jID0gX2IubWF4UmV0cnlUaW1lb3V0LCBtYXhSZXRyeVRpbWVvdXQgPSBfYyA9PT0gdm9pZCAwID8gREVGQVVMVF9NQVhfUkVUUllfVElNRV9NUyA6IF9jLCBfZCA9IF9iLmluaXRpYWxEZWxheSwgaW5pdGlhbERlbGF5ID0gX2QgPT09IHZvaWQgMCA/IERFRkFVTFRfSU5JVElBTF9SRVRSWV9ERUxBWV9NUyA6IF9kLCBfZSA9IF9iLmRlbGF5TXVsdGlwbGllciwgZGVsYXlNdWx0aXBsaWVyID0gX2UgPT09IHZvaWQgMCA/IERFRkFVTFRfUkVUUllfREVMQVlfTVVMVElQTElFUiA6IF9lLCBfZiA9IF9iLmRlbGF5Sml0dGVyLCBkZWxheUppdHRlciA9IF9mID09PSB2b2lkIDAgPyBERUZBVUxUX1JFVFJZX0RFTEFZX0pJVFRFUl9GQUNUT1IgOiBfZiwgX2cgPSBfYi5sb2dnZXIsIGxvZ2dlciA9IF9nID09PSB2b2lkIDAgPyBudWxsIDogX2c7XG4gICAgICAgIHRoaXMuX21heFJldHJ5VGltZW91dCA9IHZhbHVlT3JEZWZhdWx0KG1heFJldHJ5VGltZW91dCwgREVGQVVMVF9NQVhfUkVUUllfVElNRV9NUyk7XG4gICAgICAgIHRoaXMuX2luaXRpYWxEZWxheSA9IHZhbHVlT3JEZWZhdWx0KGluaXRpYWxEZWxheSwgREVGQVVMVF9JTklUSUFMX1JFVFJZX0RFTEFZX01TKTtcbiAgICAgICAgdGhpcy5fZGVsYXlNdWx0aXBsaWVyID0gdmFsdWVPckRlZmF1bHQoZGVsYXlNdWx0aXBsaWVyLCBERUZBVUxUX1JFVFJZX0RFTEFZX01VTFRJUExJRVIpO1xuICAgICAgICB0aGlzLl9kZWxheUppdHRlciA9IHZhbHVlT3JEZWZhdWx0KGRlbGF5Sml0dGVyLCBERUZBVUxUX1JFVFJZX0RFTEFZX0pJVFRFUl9GQUNUT1IpO1xuICAgICAgICB0aGlzLl9sb2dnZXIgPSBsb2dnZXI7XG4gICAgfVxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIHtPYnNlcnZhYmxlPEFueT59IHdvcmtcbiAgICAgKi9cbiAgICBSeFJldHJ5TG9naWMucHJvdG90eXBlLnJldHJ5ID0gZnVuY3Rpb24gKHdvcmspIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgcmV0dXJuIHdvcmsucGlwZSgoMCwgb3BlcmF0b3JzXzEucmV0cnlXaGVuKShmdW5jdGlvbiAoZmFpbGVkV29yaykge1xuICAgICAgICAgICAgdmFyIGhhbmRsZWRFeGNlcHRpb25zID0gW107XG4gICAgICAgICAgICB2YXIgc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICAgICAgICAgIHZhciByZXRyeUNvdW50ID0gMTtcbiAgICAgICAgICAgIHZhciBkZWxheUR1cmF0aW9uID0gX3RoaXMuX2luaXRpYWxEZWxheTtcbiAgICAgICAgICAgIHJldHVybiBmYWlsZWRXb3JrLnBpcGUoKDAsIG9wZXJhdG9yc18xLm1lcmdlTWFwKShmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgaWYgKCEoMCwgbmVvNGpfZHJpdmVyX2NvcmVfMS5pc1JldHJpYWJsZUVycm9yKShlcnIpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoMCwgcnhqc18xLnRocm93RXJyb3IpKGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVycjsgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGhhbmRsZWRFeGNlcHRpb25zLnB1c2goZXJyKTtcbiAgICAgICAgICAgICAgICBpZiAocmV0cnlDb3VudCA+PSAyICYmXG4gICAgICAgICAgICAgICAgICAgIERhdGUubm93KCkgLSBzdGFydFRpbWUgPj0gX3RoaXMuX21heFJldHJ5VGltZW91dCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZXJyb3JfMSA9ICgwLCBuZW80al9kcml2ZXJfY29yZV8xLm5ld0Vycm9yKShcIkZhaWxlZCBhZnRlciByZXRyaWVkIGZvciBcIi5jb25jYXQocmV0cnlDb3VudCwgXCIgdGltZXMgaW4gXCIpLmNvbmNhdChfdGhpcy5fbWF4UmV0cnlUaW1lb3V0LCBcIiBtcy4gTWFrZSBzdXJlIHRoYXQgeW91ciBkYXRhYmFzZSBpcyBvbmxpbmUgYW5kIHJldHJ5IGFnYWluLlwiKSwgU0VSVklDRV9VTkFWQUlMQUJMRSk7XG4gICAgICAgICAgICAgICAgICAgIGVycm9yXzEuc2VlbkVycm9ycyA9IGhhbmRsZWRFeGNlcHRpb25zO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKDAsIHJ4anNfMS50aHJvd0Vycm9yKShmdW5jdGlvbiAoKSB7IHJldHVybiBlcnJvcl8xOyB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIG5leHREZWxheUR1cmF0aW9uID0gX3RoaXMuX2NvbXB1dGVOZXh0RGVsYXkoZGVsYXlEdXJhdGlvbik7XG4gICAgICAgICAgICAgICAgZGVsYXlEdXJhdGlvbiA9IGRlbGF5RHVyYXRpb24gKiBfdGhpcy5fZGVsYXlNdWx0aXBsaWVyO1xuICAgICAgICAgICAgICAgIHJldHJ5Q291bnQrKztcbiAgICAgICAgICAgICAgICBpZiAoX3RoaXMuX2xvZ2dlcikge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5fbG9nZ2VyLndhcm4oXCJUcmFuc2FjdGlvbiBmYWlsZWQgYW5kIHdpbGwgYmUgcmV0cmllZCBpbiBcIi5jb25jYXQobmV4dERlbGF5RHVyYXRpb24pKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuICgwLCByeGpzXzEub2YpKDEpLnBpcGUoKDAsIG9wZXJhdG9yc18xLmRlbGF5KShuZXh0RGVsYXlEdXJhdGlvbikpO1xuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9KSk7XG4gICAgfTtcbiAgICBSeFJldHJ5TG9naWMucHJvdG90eXBlLl9jb21wdXRlTmV4dERlbGF5ID0gZnVuY3Rpb24gKGRlbGF5KSB7XG4gICAgICAgIHZhciBqaXR0ZXIgPSBkZWxheSAqIHRoaXMuX2RlbGF5Sml0dGVyO1xuICAgICAgICByZXR1cm4gZGVsYXkgLSBqaXR0ZXIgKyAyICogaml0dGVyICogTWF0aC5yYW5kb20oKTtcbiAgICB9O1xuICAgIHJldHVybiBSeFJldHJ5TG9naWM7XG59KCkpO1xuZXhwb3J0cy5kZWZhdWx0ID0gUnhSZXRyeUxvZ2ljO1xuZnVuY3Rpb24gdmFsdWVPckRlZmF1bHQodmFsdWUsIGRlZmF1bHRWYWx1ZSkge1xuICAgIGlmICh2YWx1ZSB8fCB2YWx1ZSA9PT0gMCkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver/lib/internal/retry-logic-rx.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver/lib/result-rx.js":
/*!****************************************************!*\
  !*** ./node_modules/neo4j-driver/lib/result-rx.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable-next-line no-unused-vars */\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar rxjs_1 = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/index.js\");\nvar operators_1 = __webpack_require__(/*! rxjs/operators */ \"(rsc)/./node_modules/rxjs/dist/cjs/operators/index.js\");\nvar States = {\n    READY: 0,\n    STREAMING: 1,\n    COMPLETED: 2\n};\n/**\n * The reactive result interface.\n */\nvar RxResult = /** @class */ (function () {\n    /**\n     * @constructor\n     * @protected\n     * @param {Observable<Result>} result - An observable of single Result instance to relay requests.\n     * @param {number} state - The streaming state\n     */\n    function RxResult(result, state) {\n        var replayedResult = result.pipe((0, operators_1.publishReplay)(1), (0, operators_1.refCount)());\n        this._result = replayedResult;\n        this._keys = replayedResult.pipe((0, operators_1.mergeMap)(function (r) { return (0, rxjs_1.from)(r.keys()); }), (0, operators_1.publishReplay)(1), (0, operators_1.refCount)());\n        this._records = undefined;\n        this._controls = new StreamControl();\n        this._summary = new rxjs_1.ReplaySubject();\n        this._state = state || States.READY;\n    }\n    /**\n     * Returns an observable that exposes a single item containing field names\n     * returned by the executing query.\n     *\n     * Errors raised by actual query execution can surface on the returned\n     * observable stream.\n     *\n     * @public\n     * @returns {Observable<string[]>} - An observable stream (with exactly one element) of field names.\n     */\n    RxResult.prototype.keys = function () {\n        return this._keys;\n    };\n    /**\n     * Returns an observable that exposes each record returned by the executing query.\n     *\n     * Errors raised during the streaming phase can surface on the returned observable stream.\n     *\n     * @public\n     * @returns {Observable<Record>} - An observable stream of records.\n     */\n    RxResult.prototype.records = function () {\n        var _this = this;\n        var result = this._result.pipe((0, operators_1.mergeMap)(function (result) {\n            return new rxjs_1.Observable(function (recordsObserver) {\n                return _this._startStreaming({ result: result, recordsObserver: recordsObserver });\n            });\n        }));\n        result.push = function () { return _this._push(); };\n        return result;\n    };\n    /**\n     * Returns an observable that exposes a single item of {@link ResultSummary} that is generated by\n     * the server after the streaming of the executing query is completed.\n     *\n     * *Subscribing to this stream before subscribing to records() stream causes the results to be discarded on the server.*\n     *\n     * @public\n     * @returns {Observable<ResultSummary>} - An observable stream (with exactly one element) of result summary.\n     */\n    RxResult.prototype.consume = function () {\n        var _this = this;\n        return this._result.pipe((0, operators_1.mergeMap)(function (result) {\n            return new rxjs_1.Observable(function (summaryObserver) {\n                return _this._startStreaming({ result: result, summaryObserver: summaryObserver });\n            });\n        }));\n    };\n    /**\n     * Pauses the automatic streaming of records.\n     *\n     * This method provides a way of control the flow of records\n     *\n     * @experimental\n     */\n    RxResult.prototype.pause = function () {\n        this._controls.pause();\n    };\n    /**\n     * Resumes the automatic streaming of records.\n     *\n     * This method won't need to be called in normal stream operation. It only applies to the case when the stream is paused.\n     *\n     * This method is method won't start the consuming records if the ${@link records()} stream didn't get subscribed.\n     * @experimental\n     * @returns {Promise<void>} - A promise that resolves when the stream is resumed.\n     */\n    RxResult.prototype.resume = function () {\n        return this._controls.resume();\n    };\n    /**\n     * Pushes the next record to the stream.\n     *\n     * This method automatic pause the auto-streaming of records and then push next record to the stream.\n     *\n     * For returning the automatic streaming of records, use {@link resume} method.\n     *\n     * @experimental\n     * @returns {Promise<void>} - A promise that resolves when the push is completed.\n     */\n    RxResult.prototype.push = function () {\n        return this._controls.push();\n    };\n    RxResult.prototype._startStreaming = function (_a) {\n        var _b = _a === void 0 ? {} : _a, result = _b.result, _c = _b.recordsObserver, recordsObserver = _c === void 0 ? null : _c, _d = _b.summaryObserver, summaryObserver = _d === void 0 ? null : _d;\n        var subscriptions = [];\n        if (summaryObserver) {\n            subscriptions.push(this._summary.subscribe(summaryObserver));\n        }\n        if (this._state < States.STREAMING) {\n            this._state = States.STREAMING;\n            this._setupRecordsStream(result);\n            if (recordsObserver) {\n                subscriptions.push(this._records.subscribe(recordsObserver));\n            }\n            else {\n                result._cancel();\n            }\n            subscriptions.push({\n                unsubscribe: function () {\n                    if (result._cancel) {\n                        result._cancel();\n                    }\n                }\n            });\n        }\n        else if (recordsObserver) {\n            recordsObserver.error((0, neo4j_driver_core_1.newError)('Streaming has already started/consumed with a previous records or summary subscription.'));\n        }\n        return function () {\n            subscriptions.forEach(function (s) { return s.unsubscribe(); });\n        };\n    };\n    /**\n     * Create a {@link Observable} for the current {@link RxResult}\n     *\n     *\n     * @package\n     * @experimental\n     * @since 5.0\n     * @return {Observable<RxResult>}\n     */\n    RxResult.prototype._toObservable = function () {\n        var _this = this;\n        function wrap(result) {\n            return new rxjs_1.Observable(function (observer) {\n                observer.next(result);\n                observer.complete();\n            });\n        }\n        return new rxjs_1.Observable(function (observer) {\n            _this._result.subscribe({\n                complete: function () { return observer.complete(); },\n                next: function (result) { return observer.next(new RxResult(wrap(result)), _this._state); },\n                error: function (e) { return observer.error(e); }\n            });\n        });\n    };\n    RxResult.prototype._setupRecordsStream = function (result) {\n        var _this = this;\n        if (this._records) {\n            return this._records;\n        }\n        this._records = createFullyControlledSubject(result[Symbol.asyncIterator](), {\n            complete: function () { return __awaiter(_this, void 0, void 0, function () {\n                var _a, _b;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            this._state = States.COMPLETED;\n                            _b = (_a = this._summary).next;\n                            return [4 /*yield*/, result.summary()];\n                        case 1:\n                            _b.apply(_a, [_c.sent()]);\n                            this._summary.complete();\n                            return [2 /*return*/];\n                    }\n                });\n            }); },\n            error: function (error) {\n                _this._state = States.COMPLETED;\n                _this._summary.error(error);\n            }\n        }, this._controls);\n        return this._records;\n    };\n    return RxResult;\n}());\nexports[\"default\"] = RxResult;\nfunction createFullyControlledSubject(iterator, completeObserver, streamControl) {\n    var _this = this;\n    if (streamControl === void 0) { streamControl = new StreamControl(); }\n    var subject = new rxjs_1.Subject();\n    var pushNextValue = function (result) { return __awaiter(_this, void 0, void 0, function () {\n        var _a, done, value, error_1;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _b.trys.push([0, 2, 3, 4]);\n                    streamControl.pushing = true;\n                    return [4 /*yield*/, result];\n                case 1:\n                    _a = _b.sent(), done = _a.done, value = _a.value;\n                    if (done) {\n                        subject.complete();\n                        completeObserver.complete();\n                    }\n                    else {\n                        subject.next(value);\n                        if (!streamControl.paused) {\n                            pushNextValue(iterator.next())\n                                .catch(function () { });\n                        }\n                    }\n                    return [3 /*break*/, 4];\n                case 2:\n                    error_1 = _b.sent();\n                    subject.error(error_1);\n                    completeObserver.error(error_1);\n                    return [3 /*break*/, 4];\n                case 3:\n                    streamControl.pushing = false;\n                    return [7 /*endfinally*/];\n                case 4: return [2 /*return*/];\n            }\n        });\n    }); };\n    function push(value) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, pushNextValue(iterator.next(value))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    }\n    streamControl.pusher = push;\n    push();\n    return subject;\n}\nvar StreamControl = /** @class */ (function () {\n    function StreamControl(push) {\n        if (push === void 0) { push = function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n            return [2 /*return*/];\n        }); }); }; }\n        var _this = this;\n        this._paused = false;\n        this._pushing = false;\n        this._push = push;\n    }\n    StreamControl.prototype.pause = function () {\n        this._paused = true;\n    };\n    Object.defineProperty(StreamControl.prototype, \"paused\", {\n        get: function () {\n            return this._paused;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StreamControl.prototype, \"pushing\", {\n        get: function () {\n            return this._pushing;\n        },\n        set: function (pushing) {\n            this._pushing = pushing;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    StreamControl.prototype.resume = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var wasPaused;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        wasPaused = this._paused;\n                        this._paused = false;\n                        if (!(wasPaused && !this._pushing)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this._push()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    StreamControl.prototype.push = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.pause();\n                        return [4 /*yield*/, this._push()];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    Object.defineProperty(StreamControl.prototype, \"pusher\", {\n        get: function () {\n            return this._push;\n        },\n        set: function (push) {\n            this._push = push;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return StreamControl;\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver/lib/result-rx.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver/lib/session-rx.js":
/*!*****************************************************!*\
  !*** ./node_modules/neo4j-driver/lib/session-rx.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar rxjs_1 = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/index.js\");\nvar operators_1 = __webpack_require__(/*! rxjs/operators */ \"(rsc)/./node_modules/rxjs/dist/cjs/operators/index.js\");\nvar result_rx_1 = __importDefault(__webpack_require__(/*! ./result-rx */ \"(rsc)/./node_modules/neo4j-driver/lib/result-rx.js\"));\n// eslint-disable-next-line no-unused-vars\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar transaction_rx_1 = __importDefault(__webpack_require__(/*! ./transaction-rx */ \"(rsc)/./node_modules/neo4j-driver/lib/transaction-rx.js\"));\nvar transaction_managed_rx_1 = __importDefault(__webpack_require__(/*! ./transaction-managed-rx */ \"(rsc)/./node_modules/neo4j-driver/lib/transaction-managed-rx.js\"));\nvar retry_logic_rx_1 = __importDefault(__webpack_require__(/*! ./internal/retry-logic-rx */ \"(rsc)/./node_modules/neo4j-driver/lib/internal/retry-logic-rx.js\"));\nvar _a = neo4j_driver_core_1.internal.constants, ACCESS_MODE_READ = _a.ACCESS_MODE_READ, ACCESS_MODE_WRITE = _a.ACCESS_MODE_WRITE, TELEMETRY_APIS = _a.TELEMETRY_APIS, TxConfig = neo4j_driver_core_1.internal.txConfig.TxConfig;\n/**\n * A Reactive session, which provides the same functionality as {@link Session} but through a Reactive API.\n */\nvar RxSession = /** @class */ (function () {\n    /**\n     * Constructs a reactive session with given default session instance and provided driver configuration.\n     *\n     * @protected\n     * @param {Object} param - Object parameter\n     * @param {Session} param.session - The underlying session instance to relay requests\n     */\n    function RxSession(_a) {\n        var _b = _a === void 0 ? {} : _a, session = _b.session, config = _b.config, log = _b.log;\n        this._session = session;\n        this._retryLogic = _createRetryLogic(config);\n        this._log = log;\n    }\n    /**\n     * Creates a reactive result that will execute the  query with the provided parameters and the provided\n     * transaction configuration that applies to the underlying auto-commit transaction.\n     *\n     * @public\n     * @param {string} query - Query to be executed.\n     * @param {Object} parameters - Parameter values to use in query execution.\n     * @param {TransactionConfig} transactionConfig - Configuration for the new auto-commit transaction.\n     * @returns {RxResult} - A reactive result\n     */\n    RxSession.prototype.run = function (query, parameters, transactionConfig) {\n        var _this = this;\n        return new result_rx_1.default(new rxjs_1.Observable(function (observer) {\n            try {\n                observer.next(_this._session.run(query, parameters, transactionConfig));\n                observer.complete();\n            }\n            catch (err) {\n                observer.error(err);\n            }\n            return function () { };\n        }));\n    };\n    /**\n     * Starts a new explicit transaction with the provided transaction configuration.\n     *\n     * @public\n     * @param {TransactionConfig} transactionConfig - Configuration for the new transaction.\n     * @returns {Observable<RxTransaction>} - A reactive stream that will generate at most **one** RxTransaction instance.\n     */\n    RxSession.prototype.beginTransaction = function (transactionConfig) {\n        return this._beginTransaction(this._session._mode, transactionConfig, { api: TELEMETRY_APIS.UNMANAGED_TRANSACTION });\n    };\n    /**\n     * Executes the provided unit of work in a {@link READ} reactive transaction which is created with the provided\n     * transaction configuration.\n     * @public\n     * @deprecated This method will be removed in version 6.0. Please, use {@link RxSession#executeRead} instead.\n     * @param {function(txc: RxTransaction): Observable} work - A unit of work to be executed.\n     * @param {TransactionConfig} transactionConfig - Configuration for the enclosing transaction created by the driver.\n     * @returns {Observable} - A reactive stream returned by the unit of work.\n     */\n    RxSession.prototype.readTransaction = function (work, transactionConfig) {\n        return this._runTransaction(ACCESS_MODE_READ, work, transactionConfig);\n    };\n    /**\n     * Executes the provided unit of work in a {@link WRITE} reactive transaction which is created with the provided\n     * transaction configuration.\n     * @public\n     * @deprecated This method will be removed in version 6.0. Please, use {@link RxSession#executeWrite} instead.\n     * @param {function(txc: RxTransaction): Observable} work - A unit of work to be executed.\n     * @param {TransactionConfig} transactionConfig - Configuration for the enclosing transaction created by the driver.\n     * @returns {Observable} - A reactive stream returned by the unit of work.\n     */\n    RxSession.prototype.writeTransaction = function (work, transactionConfig) {\n        return this._runTransaction(ACCESS_MODE_WRITE, work, transactionConfig);\n    };\n    /**\n     * Executes the provided unit of work in a {@link READ} reactive transaction which is created with the provided\n     * transaction configuration.\n     * @public\n     * @param {function(txc: RxManagedTransaction): Observable} work - A unit of work to be executed.\n     * @param {TransactionConfig} transactionConfig - Configuration for the enclosing transaction created by the driver.\n     * @returns {Observable} - A reactive stream returned by the unit of work.\n     */\n    RxSession.prototype.executeRead = function (work, transactionConfig) {\n        return this._executeInTransaction(ACCESS_MODE_READ, work, transactionConfig);\n    };\n    /**\n     * Executes the provided unit of work in a {@link WRITE} reactive transaction which is created with the provided\n     * transaction configuration.\n     * @public\n     * @param {function(txc: RxManagedTransaction): Observable} work - A unit of work to be executed.\n     * @param {TransactionConfig} transactionConfig - Configuration for the enclosing transaction created by the driver.\n     * @returns {Observable} - A reactive stream returned by the unit of work.\n     */\n    RxSession.prototype.executeWrite = function (work, transactionConfig) {\n        return this._executeInTransaction(ACCESS_MODE_WRITE, work, transactionConfig);\n    };\n    /**\n     * @private\n     * @param {function(txc: RxManagedTransaction): Observable} work\n     * @param {TransactionConfig} transactionConfig\n     * @returns {Observable}\n     */\n    RxSession.prototype._executeInTransaction = function (accessMode, work, transactionConfig) {\n        var wrapper = function (txc) { return new transaction_managed_rx_1.default({\n            run: txc.run.bind(txc)\n        }); };\n        return this._runTransaction(accessMode, work, transactionConfig, wrapper);\n    };\n    /**\n     * Closes this reactive session.\n     *\n     * @public\n     * @returns {Observable} - An empty reactive stream\n     */\n    RxSession.prototype.close = function () {\n        var _this = this;\n        return new rxjs_1.Observable(function (observer) {\n            _this._session\n                .close()\n                .then(function () {\n                observer.complete();\n            })\n                .catch(function (err) { return observer.error(err); });\n        });\n    };\n    RxSession.prototype[Symbol.asyncDispose] = function () {\n        return this.close();\n    };\n    /**\n     * Returns the bookmarks received following the last successfully completed query, which is executed\n     * either in an {@link RxTransaction} obtained from this session instance or directly through one of\n     * the {@link RxSession#run} method of this session instance.\n     *\n     * If no bookmarks were received or if this transaction was rolled back, the bookmarks value will not be\n     * changed.\n     *\n     * @deprecated This method will be removed in 6.0 version. Please, use {@link RxSession#lastBookmarks} instead.\n     *\n     * @public\n     * @returns {string[]}\n     */\n    RxSession.prototype.lastBookmark = function () {\n        return this.lastBookmarks();\n    };\n    /**\n     * Returns the bookmarks received following the last successfully completed query, which is executed\n     * either in an {@link RxTransaction} obtained from this session instance or directly through one of\n     * the {@link RxSession#run} method of this session instance.\n     *\n     * If no bookmarks were received or if this transaction was rolled back, the bookmarks value will not be\n     * changed.\n     *\n     * @public\n     * @returns {string[]}\n     */\n    RxSession.prototype.lastBookmarks = function () {\n        return this._session.lastBookmarks();\n    };\n    /**\n     * @private\n     */\n    RxSession.prototype._beginTransaction = function (accessMode, transactionConfig, apiTelemetryConfig) {\n        var _this = this;\n        var txConfig = TxConfig.empty();\n        if (transactionConfig) {\n            txConfig = new TxConfig(transactionConfig, this._log);\n        }\n        return new rxjs_1.Observable(function (observer) {\n            try {\n                _this._session._beginTransaction(accessMode, txConfig, apiTelemetryConfig)\n                    .then(function (tx) {\n                    observer.next(new transaction_rx_1.default(tx));\n                    observer.complete();\n                })\n                    .catch(function (err) { return observer.error(err); });\n            }\n            catch (err) {\n                observer.error(err);\n            }\n            return function () { };\n        });\n    };\n    /**\n     * @private\n     */\n    RxSession.prototype._runTransaction = function (accessMode, work, transactionConfig, transactionWrapper) {\n        var _this = this;\n        if (transactionWrapper === void 0) { transactionWrapper = function (tx) { return tx; }; }\n        var txConfig = TxConfig.empty();\n        if (transactionConfig) {\n            txConfig = new TxConfig(transactionConfig);\n        }\n        var context = {\n            apiTelemetryConfig: {\n                api: TELEMETRY_APIS.MANAGED_TRANSACTION,\n                onTelemetrySuccess: function () {\n                    context.apiTelemetryConfig = undefined;\n                }\n            }\n        };\n        return this._retryLogic.retry((0, rxjs_1.of)(1).pipe((0, operators_1.mergeMap)(function () { return _this._beginTransaction(accessMode, txConfig, context.apiTelemetryConfig); }), (0, operators_1.mergeMap)(function (txc) {\n            return (0, rxjs_1.defer)(function () {\n                try {\n                    return work(transactionWrapper(txc));\n                }\n                catch (err) {\n                    return (0, rxjs_1.throwError)(function () { return err; });\n                }\n            }).pipe((0, operators_1.catchError)(function (err) { return txc.rollback().pipe((0, operators_1.concatWith)((0, rxjs_1.throwError)(function () { return err; }))); }), (0, operators_1.concatWith)(txc.commit()));\n        })));\n    };\n    return RxSession;\n}());\nexports[\"default\"] = RxSession;\nfunction _createRetryLogic(config) {\n    var maxRetryTimeout = config && config.maxTransactionRetryTime\n        ? config.maxTransactionRetryTime\n        : null;\n    return new retry_logic_rx_1.default({ maxRetryTimeout: maxRetryTimeout });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver/lib/session-rx.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver/lib/transaction-managed-rx.js":
/*!*****************************************************************!*\
  !*** ./node_modules/neo4j-driver/lib/transaction-managed-rx.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line no-unused-vars\nvar result_rx_1 = __importDefault(__webpack_require__(/*! ./result-rx */ \"(rsc)/./node_modules/neo4j-driver/lib/result-rx.js\"));\n// eslint-disable-next-line no-unused-vars\nvar transaction_rx_1 = __importDefault(__webpack_require__(/*! ./transaction-rx */ \"(rsc)/./node_modules/neo4j-driver/lib/transaction-rx.js\"));\n/**\n * Represents a rx transaction that is managed by the transaction executor.\n *\n * @public\n */\nvar RxManagedTransaction = /** @class */ (function () {\n    /**\n     * @private\n     */\n    function RxManagedTransaction(_a) {\n        var run = _a.run;\n        this._run = run;\n    }\n    /**\n     * @private\n     * @param {RxTransaction} txc - The transaction to be wrapped\n     * @returns {RxManagedTransaction} The managed transaction\n     */\n    RxManagedTransaction.fromTransaction = function (txc) {\n        return new RxManagedTransaction({\n            run: txc.run.bind(txc)\n        });\n    };\n    /**\n     * Creates a reactive result that will execute the query in this transaction, with the provided parameters.\n     *\n     * @public\n     * @param {string} query - Query to be executed.\n     * @param {Object} parameters - Parameter values to use in query execution.\n     * @returns {RxResult} - A reactive result\n     */\n    RxManagedTransaction.prototype.run = function (query, parameters) {\n        return this._run(query, parameters);\n    };\n    return RxManagedTransaction;\n}());\nexports[\"default\"] = RxManagedTransaction;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyL2xpYi90cmFuc2FjdGlvbi1tYW5hZ2VkLXJ4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxtQkFBTyxDQUFDLHVFQUFhO0FBQ3ZEO0FBQ0EsdUNBQXVDLG1CQUFPLENBQUMsaUZBQWtCO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZUFBZTtBQUM5QixpQkFBaUIsc0JBQXNCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGlCQUFpQixVQUFVO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXIvbGliL3RyYW5zYWN0aW9uLW1hbmFnZWQtcnguanM/OTY3NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qKlxuICogQ29weXJpZ2h0IChjKSBcIk5lbzRqXCJcbiAqIE5lbzRqIFN3ZWRlbiBBQiBbaHR0cHM6Ly9uZW80ai5jb21dXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbnZhciByZXN1bHRfcnhfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9yZXN1bHQtcnhcIikpO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG52YXIgdHJhbnNhY3Rpb25fcnhfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi90cmFuc2FjdGlvbi1yeFwiKSk7XG4vKipcbiAqIFJlcHJlc2VudHMgYSByeCB0cmFuc2FjdGlvbiB0aGF0IGlzIG1hbmFnZWQgYnkgdGhlIHRyYW5zYWN0aW9uIGV4ZWN1dG9yLlxuICpcbiAqIEBwdWJsaWNcbiAqL1xudmFyIFJ4TWFuYWdlZFRyYW5zYWN0aW9uID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIC8qKlxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgZnVuY3Rpb24gUnhNYW5hZ2VkVHJhbnNhY3Rpb24oX2EpIHtcbiAgICAgICAgdmFyIHJ1biA9IF9hLnJ1bjtcbiAgICAgICAgdGhpcy5fcnVuID0gcnVuO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBwYXJhbSB7UnhUcmFuc2FjdGlvbn0gdHhjIC0gVGhlIHRyYW5zYWN0aW9uIHRvIGJlIHdyYXBwZWRcbiAgICAgKiBAcmV0dXJucyB7UnhNYW5hZ2VkVHJhbnNhY3Rpb259IFRoZSBtYW5hZ2VkIHRyYW5zYWN0aW9uXG4gICAgICovXG4gICAgUnhNYW5hZ2VkVHJhbnNhY3Rpb24uZnJvbVRyYW5zYWN0aW9uID0gZnVuY3Rpb24gKHR4Yykge1xuICAgICAgICByZXR1cm4gbmV3IFJ4TWFuYWdlZFRyYW5zYWN0aW9uKHtcbiAgICAgICAgICAgIHJ1bjogdHhjLnJ1bi5iaW5kKHR4YylcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgcmVhY3RpdmUgcmVzdWx0IHRoYXQgd2lsbCBleGVjdXRlIHRoZSBxdWVyeSBpbiB0aGlzIHRyYW5zYWN0aW9uLCB3aXRoIHRoZSBwcm92aWRlZCBwYXJhbWV0ZXJzLlxuICAgICAqXG4gICAgICogQHB1YmxpY1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBxdWVyeSAtIFF1ZXJ5IHRvIGJlIGV4ZWN1dGVkLlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbWV0ZXJzIC0gUGFyYW1ldGVyIHZhbHVlcyB0byB1c2UgaW4gcXVlcnkgZXhlY3V0aW9uLlxuICAgICAqIEByZXR1cm5zIHtSeFJlc3VsdH0gLSBBIHJlYWN0aXZlIHJlc3VsdFxuICAgICAqL1xuICAgIFJ4TWFuYWdlZFRyYW5zYWN0aW9uLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAocXVlcnksIHBhcmFtZXRlcnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3J1bihxdWVyeSwgcGFyYW1ldGVycyk7XG4gICAgfTtcbiAgICByZXR1cm4gUnhNYW5hZ2VkVHJhbnNhY3Rpb247XG59KCkpO1xuZXhwb3J0cy5kZWZhdWx0ID0gUnhNYW5hZ2VkVHJhbnNhY3Rpb247Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver/lib/transaction-managed-rx.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver/lib/transaction-rx.js":
/*!*********************************************************!*\
  !*** ./node_modules/neo4j-driver/lib/transaction-rx.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar rxjs_1 = __webpack_require__(/*! rxjs */ \"(rsc)/./node_modules/rxjs/dist/esm5/index.js\");\nvar result_rx_1 = __importDefault(__webpack_require__(/*! ./result-rx */ \"(rsc)/./node_modules/neo4j-driver/lib/result-rx.js\"));\n// eslint-disable-next-line no-unused-vars\nvar neo4j_driver_core_1 = __importDefault(__webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\"));\n/**\n * A reactive transaction, which provides the same functionality as {@link Transaction} but through a Reactive API.\n */\nvar RxTransaction = /** @class */ (function () {\n    /**\n     * @constructor\n     * @protected\n     * @param {Transaction} txc - The underlying transaction instance to relay requests\n     */\n    function RxTransaction(txc) {\n        this._txc = txc;\n    }\n    /**\n     * Creates a reactive result that will execute the query in this transaction, with the provided parameters.\n     *\n     * @public\n     * @param {string} query - Query to be executed.\n     * @param {Object} parameters - Parameter values to use in query execution.\n     * @returns {RxResult} - A reactive result\n     */\n    RxTransaction.prototype.run = function (query, parameters) {\n        var _this = this;\n        return new result_rx_1.default(new rxjs_1.Observable(function (observer) {\n            try {\n                observer.next(_this._txc.run(query, parameters));\n                observer.complete();\n            }\n            catch (err) {\n                observer.error(err);\n            }\n            return function () { };\n        }));\n    };\n    /**\n     *  Commits the transaction.\n     *\n     * @public\n     * @returns {Observable} - An empty observable\n     */\n    RxTransaction.prototype.commit = function () {\n        var _this = this;\n        return new rxjs_1.Observable(function (observer) {\n            _this._txc\n                .commit()\n                .then(function () {\n                observer.complete();\n            })\n                .catch(function (err) { return observer.error(err); });\n        });\n    };\n    /**\n     *  Rolls back the transaction.\n     *\n     * @public\n     * @returns {Observable} - An empty observable\n     */\n    RxTransaction.prototype.rollback = function () {\n        var _this = this;\n        return new rxjs_1.Observable(function (observer) {\n            _this._txc\n                .rollback()\n                .then(function () {\n                observer.complete();\n            })\n                .catch(function (err) { return observer.error(err); });\n        });\n    };\n    /**\n     * Check if this transaction is active, which means commit and rollback did not happen.\n     * @return {boolean} `true` when not committed and not rolled back, `false` otherwise.\n     */\n    RxTransaction.prototype.isOpen = function () {\n        return this._txc.isOpen();\n    };\n    /**\n     * Closes the transaction\n     *\n     * This method will roll back the transaction if it is not already committed or rolled back.\n     *\n     * @returns {Observable} - An empty observable\n     */\n    RxTransaction.prototype.close = function () {\n        var _this = this;\n        return new rxjs_1.Observable(function (observer) {\n            _this._txc\n                .close()\n                .then(function () {\n                observer.complete();\n            })\n                .catch(function (err) { return observer.error(err); });\n        });\n    };\n    return RxTransaction;\n}());\nexports[\"default\"] = RxTransaction;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyL2xpYi90cmFuc2FjdGlvbi1yeC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLDBEQUFNO0FBQzNCLGtDQUFrQyxtQkFBTyxDQUFDLHVFQUFhO0FBQ3ZEO0FBQ0EsMENBQTBDLG1CQUFPLENBQUMsOEVBQW1CO0FBQ3JFO0FBQ0EscUVBQXFFLG1CQUFtQjtBQUN4RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxhQUFhO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGlCQUFpQixVQUFVO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFlBQVk7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYix3Q0FBd0MsNkJBQTZCO0FBQ3JFLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFlBQVk7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYix3Q0FBd0MsNkJBQTZCO0FBQ3JFLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsU0FBUztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsWUFBWTtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLHdDQUF3Qyw2QkFBNkI7QUFDckUsU0FBUztBQUNUO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXIvbGliL3RyYW5zYWN0aW9uLXJ4LmpzPzRmNzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKipcbiAqIENvcHlyaWdodCAoYykgXCJOZW80alwiXG4gKiBOZW80aiBTd2VkZW4gQUIgW2h0dHBzOi8vbmVvNGouY29tXVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIHJ4anNfMSA9IHJlcXVpcmUoXCJyeGpzXCIpO1xudmFyIHJlc3VsdF9yeF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3Jlc3VsdC1yeFwiKSk7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbnZhciBuZW80al9kcml2ZXJfY29yZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJuZW80ai1kcml2ZXItY29yZVwiKSk7XG4vKipcbiAqIEEgcmVhY3RpdmUgdHJhbnNhY3Rpb24sIHdoaWNoIHByb3ZpZGVzIHRoZSBzYW1lIGZ1bmN0aW9uYWxpdHkgYXMge0BsaW5rIFRyYW5zYWN0aW9ufSBidXQgdGhyb3VnaCBhIFJlYWN0aXZlIEFQSS5cbiAqL1xudmFyIFJ4VHJhbnNhY3Rpb24gPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgLyoqXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHByb3RlY3RlZFxuICAgICAqIEBwYXJhbSB7VHJhbnNhY3Rpb259IHR4YyAtIFRoZSB1bmRlcmx5aW5nIHRyYW5zYWN0aW9uIGluc3RhbmNlIHRvIHJlbGF5IHJlcXVlc3RzXG4gICAgICovXG4gICAgZnVuY3Rpb24gUnhUcmFuc2FjdGlvbih0eGMpIHtcbiAgICAgICAgdGhpcy5fdHhjID0gdHhjO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgcmVhY3RpdmUgcmVzdWx0IHRoYXQgd2lsbCBleGVjdXRlIHRoZSBxdWVyeSBpbiB0aGlzIHRyYW5zYWN0aW9uLCB3aXRoIHRoZSBwcm92aWRlZCBwYXJhbWV0ZXJzLlxuICAgICAqXG4gICAgICogQHB1YmxpY1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBxdWVyeSAtIFF1ZXJ5IHRvIGJlIGV4ZWN1dGVkLlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbWV0ZXJzIC0gUGFyYW1ldGVyIHZhbHVlcyB0byB1c2UgaW4gcXVlcnkgZXhlY3V0aW9uLlxuICAgICAqIEByZXR1cm5zIHtSeFJlc3VsdH0gLSBBIHJlYWN0aXZlIHJlc3VsdFxuICAgICAqL1xuICAgIFJ4VHJhbnNhY3Rpb24ucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uIChxdWVyeSwgcGFyYW1ldGVycykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICByZXR1cm4gbmV3IHJlc3VsdF9yeF8xLmRlZmF1bHQobmV3IHJ4anNfMS5PYnNlcnZhYmxlKGZ1bmN0aW9uIChvYnNlcnZlcikge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBvYnNlcnZlci5uZXh0KF90aGlzLl90eGMucnVuKHF1ZXJ5LCBwYXJhbWV0ZXJzKSk7XG4gICAgICAgICAgICAgICAgb2JzZXJ2ZXIuY29tcGxldGUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICBvYnNlcnZlci5lcnJvcihlcnIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsgfTtcbiAgICAgICAgfSkpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogIENvbW1pdHMgdGhlIHRyYW5zYWN0aW9uLlxuICAgICAqXG4gICAgICogQHB1YmxpY1xuICAgICAqIEByZXR1cm5zIHtPYnNlcnZhYmxlfSAtIEFuIGVtcHR5IG9ic2VydmFibGVcbiAgICAgKi9cbiAgICBSeFRyYW5zYWN0aW9uLnByb3RvdHlwZS5jb21taXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHJldHVybiBuZXcgcnhqc18xLk9ic2VydmFibGUoZnVuY3Rpb24gKG9ic2VydmVyKSB7XG4gICAgICAgICAgICBfdGhpcy5fdHhjXG4gICAgICAgICAgICAgICAgLmNvbW1pdCgpXG4gICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIG9ic2VydmVyLmNvbXBsZXRlKCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyKSB7IHJldHVybiBvYnNlcnZlci5lcnJvcihlcnIpOyB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiAgUm9sbHMgYmFjayB0aGUgdHJhbnNhY3Rpb24uXG4gICAgICpcbiAgICAgKiBAcHVibGljXG4gICAgICogQHJldHVybnMge09ic2VydmFibGV9IC0gQW4gZW1wdHkgb2JzZXJ2YWJsZVxuICAgICAqL1xuICAgIFJ4VHJhbnNhY3Rpb24ucHJvdG90eXBlLnJvbGxiYWNrID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICByZXR1cm4gbmV3IHJ4anNfMS5PYnNlcnZhYmxlKGZ1bmN0aW9uIChvYnNlcnZlcikge1xuICAgICAgICAgICAgX3RoaXMuX3R4Y1xuICAgICAgICAgICAgICAgIC5yb2xsYmFjaygpXG4gICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIG9ic2VydmVyLmNvbXBsZXRlKCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyKSB7IHJldHVybiBvYnNlcnZlci5lcnJvcihlcnIpOyB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBDaGVjayBpZiB0aGlzIHRyYW5zYWN0aW9uIGlzIGFjdGl2ZSwgd2hpY2ggbWVhbnMgY29tbWl0IGFuZCByb2xsYmFjayBkaWQgbm90IGhhcHBlbi5cbiAgICAgKiBAcmV0dXJuIHtib29sZWFufSBgdHJ1ZWAgd2hlbiBub3QgY29tbWl0dGVkIGFuZCBub3Qgcm9sbGVkIGJhY2ssIGBmYWxzZWAgb3RoZXJ3aXNlLlxuICAgICAqL1xuICAgIFJ4VHJhbnNhY3Rpb24ucHJvdG90eXBlLmlzT3BlbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3R4Yy5pc09wZW4oKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIENsb3NlcyB0aGUgdHJhbnNhY3Rpb25cbiAgICAgKlxuICAgICAqIFRoaXMgbWV0aG9kIHdpbGwgcm9sbCBiYWNrIHRoZSB0cmFuc2FjdGlvbiBpZiBpdCBpcyBub3QgYWxyZWFkeSBjb21taXR0ZWQgb3Igcm9sbGVkIGJhY2suXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7T2JzZXJ2YWJsZX0gLSBBbiBlbXB0eSBvYnNlcnZhYmxlXG4gICAgICovXG4gICAgUnhUcmFuc2FjdGlvbi5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHJldHVybiBuZXcgcnhqc18xLk9ic2VydmFibGUoZnVuY3Rpb24gKG9ic2VydmVyKSB7XG4gICAgICAgICAgICBfdGhpcy5fdHhjXG4gICAgICAgICAgICAgICAgLmNsb3NlKClcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgb2JzZXJ2ZXIuY29tcGxldGUoKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsgcmV0dXJuIG9ic2VydmVyLmVycm9yKGVycik7IH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiBSeFRyYW5zYWN0aW9uO1xufSgpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IFJ4VHJhbnNhY3Rpb247Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver/lib/transaction-rx.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver/lib/version.js":
/*!**************************************************!*\
  !*** ./node_modules/neo4j-driver/lib/version.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n// DO NOT CHANGE THE VERSION BELOW HERE\n// This is set by the build system at release time, using\n//\n// gulp set --x <releaseversion>\n//\n// This is set up this way to keep the version in the code in\n// sync with the npm package version, and to allow the build\n// system to control version names at packaging time.\nexports[\"default\"] = '5.20.0';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyL2xpYi92ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmVvNGotbmV4dC1hcHAvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyL2xpYi92ZXJzaW9uLmpzP2FmZDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIENvcHlyaWdodCAoYykgXCJOZW80alwiXG4gKiBOZW80aiBTd2VkZW4gQUIgW2h0dHBzOi8vbmVvNGouY29tXVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8gRE8gTk9UIENIQU5HRSBUSEUgVkVSU0lPTiBCRUxPVyBIRVJFXG4vLyBUaGlzIGlzIHNldCBieSB0aGUgYnVpbGQgc3lzdGVtIGF0IHJlbGVhc2UgdGltZSwgdXNpbmdcbi8vXG4vLyBndWxwIHNldCAtLXggPHJlbGVhc2V2ZXJzaW9uPlxuLy9cbi8vIFRoaXMgaXMgc2V0IHVwIHRoaXMgd2F5IHRvIGtlZXAgdGhlIHZlcnNpb24gaW4gdGhlIGNvZGUgaW5cbi8vIHN5bmMgd2l0aCB0aGUgbnBtIHBhY2thZ2UgdmVyc2lvbiwgYW5kIHRvIGFsbG93IHRoZSBidWlsZFxuLy8gc3lzdGVtIHRvIGNvbnRyb2wgdmVyc2lvbiBuYW1lcyBhdCBwYWNrYWdpbmcgdGltZS5cbmV4cG9ydHMuZGVmYXVsdCA9ICc1LjIwLjAnOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver/lib/version.js\n");

/***/ })

};
;