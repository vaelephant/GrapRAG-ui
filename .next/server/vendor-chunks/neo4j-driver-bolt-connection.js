"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/neo4j-driver-bolt-connection";
exports.ids = ["vendor-chunks/neo4j-driver-bolt-connection"];
exports.modules = {

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-util.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-util.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.assertNotificationFilterIsEmpty = exports.assertImpersonatedUserIsEmpty = exports.assertTxConfigIsEmpty = exports.assertDatabaseIsEmpty = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\n// eslint-disable-next-line no-unused-vars\nvar stream_observers_1 = __webpack_require__(/*! ./stream-observers */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/stream-observers.js\");\n/**\n * @param {TxConfig} txConfig the auto-commit transaction configuration.\n * @param {function(error: string)} onProtocolError called when the txConfig is not empty.\n * @param {ResultStreamObserver} observer the response observer.\n */\nfunction assertTxConfigIsEmpty(txConfig, onProtocolError, observer) {\n    if (onProtocolError === void 0) { onProtocolError = function () { }; }\n    if (txConfig && !txConfig.isEmpty()) {\n        var error = (0, neo4j_driver_core_1.newError)('Driver is connected to the database that does not support transaction configuration. ' +\n            'Please upgrade to neo4j 3.5.0 or later in order to use this functionality');\n        // unsupported API was used, consider this a fatal error for the current connection\n        onProtocolError(error.message);\n        observer.onError(error);\n        throw error;\n    }\n}\nexports.assertTxConfigIsEmpty = assertTxConfigIsEmpty;\n/**\n * Asserts that the passed-in database name is empty.\n * @param {string} database\n * @param {fuction(err: String)} onProtocolError Called when it doesn't have database set\n */\nfunction assertDatabaseIsEmpty(database, onProtocolError, observer) {\n    if (onProtocolError === void 0) { onProtocolError = function () { }; }\n    if (database) {\n        var error = (0, neo4j_driver_core_1.newError)('Driver is connected to the database that does not support multiple databases. ' +\n            'Please upgrade to neo4j 4.0.0 or later in order to use this functionality');\n        // unsupported API was used, consider this a fatal error for the current connection\n        onProtocolError(error.message);\n        observer.onError(error);\n        throw error;\n    }\n}\nexports.assertDatabaseIsEmpty = assertDatabaseIsEmpty;\n/**\n * Asserts that the passed-in impersonated user is empty\n * @param {string} impersonatedUser\n * @param {function (err:Error)} onProtocolError Called when it does have impersonated user set\n * @param {any} observer\n */\nfunction assertImpersonatedUserIsEmpty(impersonatedUser, onProtocolError, observer) {\n    if (onProtocolError === void 0) { onProtocolError = function () { }; }\n    if (impersonatedUser) {\n        var error = (0, neo4j_driver_core_1.newError)('Driver is connected to the database that does not support user impersonation. ' +\n            'Please upgrade to neo4j 4.4.0 or later in order to use this functionality. ' +\n            \"Trying to impersonate \".concat(impersonatedUser, \".\"));\n        // unsupported API was used, consider this a fatal error for the current connection\n        onProtocolError(error.message);\n        observer.onError(error);\n        throw error;\n    }\n}\nexports.assertImpersonatedUserIsEmpty = assertImpersonatedUserIsEmpty;\n/**\n * Asserts that the passed-in notificationFilter is empty\n * @param {NotificationFilter} notificationFilter\n * @param {function (err:Error)} onProtocolError Called when it does have notificationFilter user set\n * @param {any} observer\n */\nfunction assertNotificationFilterIsEmpty(notificationFilter, onProtocolError, observer) {\n    if (onProtocolError === void 0) { onProtocolError = function () { }; }\n    if (notificationFilter !== undefined) {\n        var error = (0, neo4j_driver_core_1.newError)('Driver is connected to a database that does not support user notification filters. ' +\n            'Please upgrade to Neo4j 5.7.0 or later in order to use this functionality. ' +\n            \"Trying to set notifications to \".concat(neo4j_driver_core_1.json.stringify(notificationFilter), \".\"));\n        // unsupported API was used, consider this a fatal error for the current connection\n        onProtocolError(error.message);\n        observer.onError(error);\n        throw error;\n    }\n}\nexports.assertNotificationFilterIsEmpty = assertNotificationFilterIsEmpty;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9ib2x0LXByb3RvY29sLXV0aWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUNBQXVDLEdBQUcscUNBQXFDLEdBQUcsNkJBQTZCLEdBQUcsNkJBQTZCO0FBQy9JO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLG1CQUFPLENBQUMsOEVBQW1CO0FBQ3JEO0FBQ0EseUJBQXlCLG1CQUFPLENBQUMsMEdBQW9CO0FBQ3JEO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLFdBQVcseUJBQXlCO0FBQ3BDLFdBQVcsc0JBQXNCO0FBQ2pDO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxzQkFBc0I7QUFDakM7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLHNCQUFzQjtBQUNqQyxXQUFXLEtBQUs7QUFDaEI7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0EsV0FBVyxvQkFBb0I7QUFDL0IsV0FBVyxzQkFBc0I7QUFDakMsV0FBVyxLQUFLO0FBQ2hCO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9ib2x0L2JvbHQtcHJvdG9jb2wtdXRpbC5qcz8xZDlhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hc3NlcnROb3RpZmljYXRpb25GaWx0ZXJJc0VtcHR5ID0gZXhwb3J0cy5hc3NlcnRJbXBlcnNvbmF0ZWRVc2VySXNFbXB0eSA9IGV4cG9ydHMuYXNzZXJ0VHhDb25maWdJc0VtcHR5ID0gZXhwb3J0cy5hc3NlcnREYXRhYmFzZUlzRW1wdHkgPSB2b2lkIDA7XG4vKipcbiAqIENvcHlyaWdodCAoYykgXCJOZW80alwiXG4gKiBOZW80aiBTd2VkZW4gQUIgW2h0dHBzOi8vbmVvNGouY29tXVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIG5lbzRqX2RyaXZlcl9jb3JlXzEgPSByZXF1aXJlKFwibmVvNGotZHJpdmVyLWNvcmVcIik7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbnZhciBzdHJlYW1fb2JzZXJ2ZXJzXzEgPSByZXF1aXJlKFwiLi9zdHJlYW0tb2JzZXJ2ZXJzXCIpO1xuLyoqXG4gKiBAcGFyYW0ge1R4Q29uZmlnfSB0eENvbmZpZyB0aGUgYXV0by1jb21taXQgdHJhbnNhY3Rpb24gY29uZmlndXJhdGlvbi5cbiAqIEBwYXJhbSB7ZnVuY3Rpb24oZXJyb3I6IHN0cmluZyl9IG9uUHJvdG9jb2xFcnJvciBjYWxsZWQgd2hlbiB0aGUgdHhDb25maWcgaXMgbm90IGVtcHR5LlxuICogQHBhcmFtIHtSZXN1bHRTdHJlYW1PYnNlcnZlcn0gb2JzZXJ2ZXIgdGhlIHJlc3BvbnNlIG9ic2VydmVyLlxuICovXG5mdW5jdGlvbiBhc3NlcnRUeENvbmZpZ0lzRW1wdHkodHhDb25maWcsIG9uUHJvdG9jb2xFcnJvciwgb2JzZXJ2ZXIpIHtcbiAgICBpZiAob25Qcm90b2NvbEVycm9yID09PSB2b2lkIDApIHsgb25Qcm90b2NvbEVycm9yID0gZnVuY3Rpb24gKCkgeyB9OyB9XG4gICAgaWYgKHR4Q29uZmlnICYmICF0eENvbmZpZy5pc0VtcHR5KCkpIHtcbiAgICAgICAgdmFyIGVycm9yID0gKDAsIG5lbzRqX2RyaXZlcl9jb3JlXzEubmV3RXJyb3IpKCdEcml2ZXIgaXMgY29ubmVjdGVkIHRvIHRoZSBkYXRhYmFzZSB0aGF0IGRvZXMgbm90IHN1cHBvcnQgdHJhbnNhY3Rpb24gY29uZmlndXJhdGlvbi4gJyArXG4gICAgICAgICAgICAnUGxlYXNlIHVwZ3JhZGUgdG8gbmVvNGogMy41LjAgb3IgbGF0ZXIgaW4gb3JkZXIgdG8gdXNlIHRoaXMgZnVuY3Rpb25hbGl0eScpO1xuICAgICAgICAvLyB1bnN1cHBvcnRlZCBBUEkgd2FzIHVzZWQsIGNvbnNpZGVyIHRoaXMgYSBmYXRhbCBlcnJvciBmb3IgdGhlIGN1cnJlbnQgY29ubmVjdGlvblxuICAgICAgICBvblByb3RvY29sRXJyb3IoZXJyb3IubWVzc2FnZSk7XG4gICAgICAgIG9ic2VydmVyLm9uRXJyb3IoZXJyb3IpO1xuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG59XG5leHBvcnRzLmFzc2VydFR4Q29uZmlnSXNFbXB0eSA9IGFzc2VydFR4Q29uZmlnSXNFbXB0eTtcbi8qKlxuICogQXNzZXJ0cyB0aGF0IHRoZSBwYXNzZWQtaW4gZGF0YWJhc2UgbmFtZSBpcyBlbXB0eS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZVxuICogQHBhcmFtIHtmdWN0aW9uKGVycjogU3RyaW5nKX0gb25Qcm90b2NvbEVycm9yIENhbGxlZCB3aGVuIGl0IGRvZXNuJ3QgaGF2ZSBkYXRhYmFzZSBzZXRcbiAqL1xuZnVuY3Rpb24gYXNzZXJ0RGF0YWJhc2VJc0VtcHR5KGRhdGFiYXNlLCBvblByb3RvY29sRXJyb3IsIG9ic2VydmVyKSB7XG4gICAgaWYgKG9uUHJvdG9jb2xFcnJvciA9PT0gdm9pZCAwKSB7IG9uUHJvdG9jb2xFcnJvciA9IGZ1bmN0aW9uICgpIHsgfTsgfVxuICAgIGlmIChkYXRhYmFzZSkge1xuICAgICAgICB2YXIgZXJyb3IgPSAoMCwgbmVvNGpfZHJpdmVyX2NvcmVfMS5uZXdFcnJvcikoJ0RyaXZlciBpcyBjb25uZWN0ZWQgdG8gdGhlIGRhdGFiYXNlIHRoYXQgZG9lcyBub3Qgc3VwcG9ydCBtdWx0aXBsZSBkYXRhYmFzZXMuICcgK1xuICAgICAgICAgICAgJ1BsZWFzZSB1cGdyYWRlIHRvIG5lbzRqIDQuMC4wIG9yIGxhdGVyIGluIG9yZGVyIHRvIHVzZSB0aGlzIGZ1bmN0aW9uYWxpdHknKTtcbiAgICAgICAgLy8gdW5zdXBwb3J0ZWQgQVBJIHdhcyB1c2VkLCBjb25zaWRlciB0aGlzIGEgZmF0YWwgZXJyb3IgZm9yIHRoZSBjdXJyZW50IGNvbm5lY3Rpb25cbiAgICAgICAgb25Qcm90b2NvbEVycm9yKGVycm9yLm1lc3NhZ2UpO1xuICAgICAgICBvYnNlcnZlci5vbkVycm9yKGVycm9yKTtcbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxufVxuZXhwb3J0cy5hc3NlcnREYXRhYmFzZUlzRW1wdHkgPSBhc3NlcnREYXRhYmFzZUlzRW1wdHk7XG4vKipcbiAqIEFzc2VydHMgdGhhdCB0aGUgcGFzc2VkLWluIGltcGVyc29uYXRlZCB1c2VyIGlzIGVtcHR5XG4gKiBAcGFyYW0ge3N0cmluZ30gaW1wZXJzb25hdGVkVXNlclxuICogQHBhcmFtIHtmdW5jdGlvbiAoZXJyOkVycm9yKX0gb25Qcm90b2NvbEVycm9yIENhbGxlZCB3aGVuIGl0IGRvZXMgaGF2ZSBpbXBlcnNvbmF0ZWQgdXNlciBzZXRcbiAqIEBwYXJhbSB7YW55fSBvYnNlcnZlclxuICovXG5mdW5jdGlvbiBhc3NlcnRJbXBlcnNvbmF0ZWRVc2VySXNFbXB0eShpbXBlcnNvbmF0ZWRVc2VyLCBvblByb3RvY29sRXJyb3IsIG9ic2VydmVyKSB7XG4gICAgaWYgKG9uUHJvdG9jb2xFcnJvciA9PT0gdm9pZCAwKSB7IG9uUHJvdG9jb2xFcnJvciA9IGZ1bmN0aW9uICgpIHsgfTsgfVxuICAgIGlmIChpbXBlcnNvbmF0ZWRVc2VyKSB7XG4gICAgICAgIHZhciBlcnJvciA9ICgwLCBuZW80al9kcml2ZXJfY29yZV8xLm5ld0Vycm9yKSgnRHJpdmVyIGlzIGNvbm5lY3RlZCB0byB0aGUgZGF0YWJhc2UgdGhhdCBkb2VzIG5vdCBzdXBwb3J0IHVzZXIgaW1wZXJzb25hdGlvbi4gJyArXG4gICAgICAgICAgICAnUGxlYXNlIHVwZ3JhZGUgdG8gbmVvNGogNC40LjAgb3IgbGF0ZXIgaW4gb3JkZXIgdG8gdXNlIHRoaXMgZnVuY3Rpb25hbGl0eS4gJyArXG4gICAgICAgICAgICBcIlRyeWluZyB0byBpbXBlcnNvbmF0ZSBcIi5jb25jYXQoaW1wZXJzb25hdGVkVXNlciwgXCIuXCIpKTtcbiAgICAgICAgLy8gdW5zdXBwb3J0ZWQgQVBJIHdhcyB1c2VkLCBjb25zaWRlciB0aGlzIGEgZmF0YWwgZXJyb3IgZm9yIHRoZSBjdXJyZW50IGNvbm5lY3Rpb25cbiAgICAgICAgb25Qcm90b2NvbEVycm9yKGVycm9yLm1lc3NhZ2UpO1xuICAgICAgICBvYnNlcnZlci5vbkVycm9yKGVycm9yKTtcbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxufVxuZXhwb3J0cy5hc3NlcnRJbXBlcnNvbmF0ZWRVc2VySXNFbXB0eSA9IGFzc2VydEltcGVyc29uYXRlZFVzZXJJc0VtcHR5O1xuLyoqXG4gKiBBc3NlcnRzIHRoYXQgdGhlIHBhc3NlZC1pbiBub3RpZmljYXRpb25GaWx0ZXIgaXMgZW1wdHlcbiAqIEBwYXJhbSB7Tm90aWZpY2F0aW9uRmlsdGVyfSBub3RpZmljYXRpb25GaWx0ZXJcbiAqIEBwYXJhbSB7ZnVuY3Rpb24gKGVycjpFcnJvcil9IG9uUHJvdG9jb2xFcnJvciBDYWxsZWQgd2hlbiBpdCBkb2VzIGhhdmUgbm90aWZpY2F0aW9uRmlsdGVyIHVzZXIgc2V0XG4gKiBAcGFyYW0ge2FueX0gb2JzZXJ2ZXJcbiAqL1xuZnVuY3Rpb24gYXNzZXJ0Tm90aWZpY2F0aW9uRmlsdGVySXNFbXB0eShub3RpZmljYXRpb25GaWx0ZXIsIG9uUHJvdG9jb2xFcnJvciwgb2JzZXJ2ZXIpIHtcbiAgICBpZiAob25Qcm90b2NvbEVycm9yID09PSB2b2lkIDApIHsgb25Qcm90b2NvbEVycm9yID0gZnVuY3Rpb24gKCkgeyB9OyB9XG4gICAgaWYgKG5vdGlmaWNhdGlvbkZpbHRlciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHZhciBlcnJvciA9ICgwLCBuZW80al9kcml2ZXJfY29yZV8xLm5ld0Vycm9yKSgnRHJpdmVyIGlzIGNvbm5lY3RlZCB0byBhIGRhdGFiYXNlIHRoYXQgZG9lcyBub3Qgc3VwcG9ydCB1c2VyIG5vdGlmaWNhdGlvbiBmaWx0ZXJzLiAnICtcbiAgICAgICAgICAgICdQbGVhc2UgdXBncmFkZSB0byBOZW80aiA1LjcuMCBvciBsYXRlciBpbiBvcmRlciB0byB1c2UgdGhpcyBmdW5jdGlvbmFsaXR5LiAnICtcbiAgICAgICAgICAgIFwiVHJ5aW5nIHRvIHNldCBub3RpZmljYXRpb25zIHRvIFwiLmNvbmNhdChuZW80al9kcml2ZXJfY29yZV8xLmpzb24uc3RyaW5naWZ5KG5vdGlmaWNhdGlvbkZpbHRlciksIFwiLlwiKSk7XG4gICAgICAgIC8vIHVuc3VwcG9ydGVkIEFQSSB3YXMgdXNlZCwgY29uc2lkZXIgdGhpcyBhIGZhdGFsIGVycm9yIGZvciB0aGUgY3VycmVudCBjb25uZWN0aW9uXG4gICAgICAgIG9uUHJvdG9jb2xFcnJvcihlcnJvci5tZXNzYWdlKTtcbiAgICAgICAgb2JzZXJ2ZXIub25FcnJvcihlcnJvcik7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbn1cbmV4cG9ydHMuYXNzZXJ0Tm90aWZpY2F0aW9uRmlsdGVySXNFbXB0eSA9IGFzc2VydE5vdGlmaWNhdGlvbkZpbHRlcklzRW1wdHk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-util.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v1.js":
/*!********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v1.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar bolt_protocol_util_1 = __webpack_require__(/*! ./bolt-protocol-util */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-util.js\");\n// eslint-disable-next-line no-unused-vars\nvar channel_1 = __webpack_require__(/*! ../channel */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/index.js\");\nvar packstream_1 = __webpack_require__(/*! ../packstream */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/packstream/index.js\");\nvar request_message_1 = __importStar(__webpack_require__(/*! ./request-message */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/request-message.js\"));\nvar stream_observers_1 = __webpack_require__(/*! ./stream-observers */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/stream-observers.js\");\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar bolt_protocol_v1_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v1.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v1.transformer.js\"));\nvar transformer_1 = __importDefault(__webpack_require__(/*! ./transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/transformer.js\"));\nvar Bookmarks = neo4j_driver_core_1.internal.bookmarks.Bookmarks, _a = neo4j_driver_core_1.internal.constants, ACCESS_MODE_WRITE = _a.ACCESS_MODE_WRITE, BOLT_PROTOCOL_V1 = _a.BOLT_PROTOCOL_V1, Logger = neo4j_driver_core_1.internal.logger.Logger, TxConfig = neo4j_driver_core_1.internal.txConfig.TxConfig;\nvar BoltProtocol = /** @class */ (function () {\n    /**\n     * @callback CreateResponseHandler Creates the response handler\n     * @param {BoltProtocol} protocol The bolt protocol\n     * @returns {ResponseHandler} The response handler\n     */\n    /**\n     * @callback OnProtocolError Handles protocol error\n     * @param {string} error The description\n     */\n    /**\n     * @constructor\n     * @param {Object} server the server informatio.\n     * @param {Chunker} chunker the chunker.\n     * @param {Object} packstreamConfig Packstream configuration\n     * @param {boolean} packstreamConfig.disableLosslessIntegers if this connection should convert all received integers to native JS numbers.\n     * @param {boolean} packstreamConfig.useBigInt if this connection should convert all received integers to native BigInt numbers.\n     * @param {CreateResponseHandler} createResponseHandler Function which creates the response handler\n     * @param {Logger} log the logger\n     * @param {OnProtocolError} onProtocolError handles protocol errors\n     */\n    function BoltProtocol(server, chunker, _a, createResponseHandler, log, onProtocolError) {\n        var _b = _a === void 0 ? {} : _a, disableLosslessIntegers = _b.disableLosslessIntegers, useBigInt = _b.useBigInt;\n        if (createResponseHandler === void 0) { createResponseHandler = function () { return null; }; }\n        this._server = server || {};\n        this._chunker = chunker;\n        this._packer = this._createPacker(chunker);\n        this._unpacker = this._createUnpacker(disableLosslessIntegers, useBigInt);\n        this._responseHandler = createResponseHandler(this);\n        this._log = log;\n        this._onProtocolError = onProtocolError;\n        this._fatalError = null;\n        this._lastMessageSignature = null;\n        this._config = { disableLosslessIntegers: disableLosslessIntegers, useBigInt: useBigInt };\n    }\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\n        get: function () {\n            var _this = this;\n            if (this._transformer === undefined) {\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v1_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\n            }\n            return this._transformer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\n        /**\n         * Returns the numerical version identifier for this protocol\n         */\n        get: function () {\n            return BOLT_PROTOCOL_V1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"supportsReAuth\", {\n        /**\n         * @property {boolean} supportsReAuth Either if the protocol version supports re-auth or not.\n         */\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"initialized\", {\n        /**\n         * @property {boolean} initialized Either if the protocol was initialized or not\n         */\n        get: function () {\n            return !!this._initialized;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"authToken\", {\n        /**\n         * @property {object} authToken The token used in the last login\n         */\n        get: function () {\n            return this._authToken;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Get the packer.\n     * @return {Packer} the protocol's packer.\n     */\n    BoltProtocol.prototype.packer = function () {\n        return this._packer;\n    };\n    /**\n     * Creates a packable function out of the provided value\n     * @param x the value to pack\n     * @returns Function\n     */\n    BoltProtocol.prototype.packable = function (x) {\n        return this._packer.packable(x, this.transformer.toStructure);\n    };\n    /**\n     * Get the unpacker.\n     * @return {Unpacker} the protocol's unpacker.\n     */\n    BoltProtocol.prototype.unpacker = function () {\n        return this._unpacker;\n    };\n    /**\n     * Unpack a buffer\n     * @param {Buffer} buf\n     * @returns {any|null} The unpacked value\n     */\n    BoltProtocol.prototype.unpack = function (buf) {\n        return this._unpacker.unpack(buf, this.transformer.fromStructure);\n    };\n    /**\n     * Transform metadata received in SUCCESS message before it is passed to the handler.\n     * @param {Object} metadata the received metadata.\n     * @return {Object} transformed metadata.\n     */\n    BoltProtocol.prototype.transformMetadata = function (metadata) {\n        return metadata;\n    };\n    /**\n     * Perform initialization and authentication of the underlying connection.\n     * @param {Object} param\n     * @param {string} param.userAgent the user agent.\n     * @param {Object} param.authToken the authentication token.\n     * @param {NotificationFilter} param.notificationFilter the notification filter.\n     * @param {function(err: Error)} param.onError the callback to invoke on error.\n     * @param {function()} param.onComplete the callback to invoke on completion.\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n     */\n    BoltProtocol.prototype.initialize = function (_a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, userAgent = _b.userAgent, boltAgent = _b.boltAgent, authToken = _b.authToken, notificationFilter = _b.notificationFilter, onError = _b.onError, onComplete = _b.onComplete;\n        var observer = new stream_observers_1.LoginObserver({\n            onError: function (error) { return _this._onLoginError(error, onError); },\n            onCompleted: function (metadata) { return _this._onLoginCompleted(metadata, onComplete); }\n        });\n        // passing notification filter on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\n        this.write(request_message_1.default.init(userAgent, authToken), observer, true);\n        return observer;\n    };\n    /**\n     * Performs logoff of the underlying connection\n     *\n     * @param {Object} param\n     * @param {function(err: Error)} param.onError the callback to invoke on error.\n     * @param {function()} param.onComplete the callback to invoke on completion.\n     * @param {boolean} param.flush whether to flush the buffered messages.\n     *\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n     */\n    BoltProtocol.prototype.logoff = function (_a) {\n        var _b = _a === void 0 ? {} : _a, onComplete = _b.onComplete, onError = _b.onError, flush = _b.flush;\n        var observer = new stream_observers_1.LogoffObserver({\n            onCompleted: onComplete,\n            onError: onError\n        });\n        // TODO: Verify the Neo4j version in the message\n        var error = (0, neo4j_driver_core_1.newError)('Driver is connected to a database that does not support logoff. ' +\n            'Please upgrade to Neo4j 5.5.0 or later in order to use this functionality.');\n        // unsupported API was used, consider this a fatal error for the current connection\n        this._onProtocolError(error.message);\n        observer.onError(error);\n        throw error;\n    };\n    /**\n     * Performs login of the underlying connection\n     *\n     * @param {Object} args\n     * @param {Object} args.authToken the authentication token.\n     * @param {function(err: Error)} args.onError the callback to invoke on error.\n     * @param {function()} args.onComplete the callback to invoke on completion.\n     * @param {boolean} args.flush whether to flush the buffered messages.\n     *\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n     */\n    BoltProtocol.prototype.logon = function (_a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, authToken = _b.authToken, onComplete = _b.onComplete, onError = _b.onError, flush = _b.flush;\n        var observer = new stream_observers_1.LoginObserver({\n            onCompleted: function () { return _this._onLoginCompleted({}, authToken, onComplete); },\n            onError: function (error) { return _this._onLoginError(error, onError); }\n        });\n        // TODO: Verify the Neo4j version in the message\n        var error = (0, neo4j_driver_core_1.newError)('Driver is connected to a database that does not support logon. ' +\n            'Please upgrade to Neo4j 5.5.0 or later in order to use this functionality.');\n        // unsupported API was used, consider this a fatal error for the current connection\n        this._onProtocolError(error.message);\n        observer.onError(error);\n        throw error;\n    };\n    /**\n     * Perform protocol related operations for closing this connection\n     */\n    BoltProtocol.prototype.prepareToClose = function () {\n        // no need to notify the database in this protocol version\n    };\n    /**\n     * Begin an explicit transaction.\n     * @param {Object} param\n     * @param {Bookmarks} param.bookmarks the bookmarks.\n     * @param {TxConfig} param.txConfig the configuration.\n     * @param {string} param.database the target database name.\n     * @param {string} param.mode the access mode.\n     * @param {string} param.impersonatedUser the impersonated user\n     * @param {NotificationFilter} param.notificationFilter the notification filter.\n     * @param {function(err: Error)} param.beforeError the callback to invoke before handling the error.\n     * @param {function(err: Error)} param.afterError the callback to invoke after handling the error.\n     * @param {function()} param.beforeComplete the callback to invoke before handling the completion.\n     * @param {function()} param.afterComplete the callback to invoke after handling the completion.\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n     */\n    BoltProtocol.prototype.beginTransaction = function (_a) {\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\n        return this.run('BEGIN', bookmarks ? bookmarks.asBeginTransactionParameters() : {}, {\n            bookmarks: bookmarks,\n            txConfig: txConfig,\n            database: database,\n            mode: mode,\n            impersonatedUser: impersonatedUser,\n            notificationFilter: notificationFilter,\n            beforeError: beforeError,\n            afterError: afterError,\n            beforeComplete: beforeComplete,\n            afterComplete: afterComplete,\n            flush: false\n        });\n    };\n    /**\n     * Commit the explicit transaction.\n     * @param {Object} param\n     * @param {function(err: Error)} param.beforeError the callback to invoke before handling the error.\n     * @param {function(err: Error)} param.afterError the callback to invoke after handling the error.\n     * @param {function()} param.beforeComplete the callback to invoke before handling the completion.\n     * @param {function()} param.afterComplete the callback to invoke after handling the completion.\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n     */\n    BoltProtocol.prototype.commitTransaction = function (_a) {\n        var _b = _a === void 0 ? {} : _a, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\n        // WRITE access mode is used as a place holder here, it has\n        // no effect on behaviour for Bolt V1 & V2\n        return this.run('COMMIT', {}, {\n            bookmarks: Bookmarks.empty(),\n            txConfig: TxConfig.empty(),\n            mode: ACCESS_MODE_WRITE,\n            beforeError: beforeError,\n            afterError: afterError,\n            beforeComplete: beforeComplete,\n            afterComplete: afterComplete\n        });\n    };\n    /**\n     * Rollback the explicit transaction.\n     * @param {Object} param\n     * @param {function(err: Error)} param.beforeError the callback to invoke before handling the error.\n     * @param {function(err: Error)} param.afterError the callback to invoke after handling the error.\n     * @param {function()} param.beforeComplete the callback to invoke before handling the completion.\n     * @param {function()} param.afterComplete the callback to invoke after handling the completion.\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n     */\n    BoltProtocol.prototype.rollbackTransaction = function (_a) {\n        var _b = _a === void 0 ? {} : _a, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\n        // WRITE access mode is used as a place holder here, it has\n        // no effect on behaviour for Bolt V1 & V2\n        return this.run('ROLLBACK', {}, {\n            bookmarks: Bookmarks.empty(),\n            txConfig: TxConfig.empty(),\n            mode: ACCESS_MODE_WRITE,\n            beforeError: beforeError,\n            afterError: afterError,\n            beforeComplete: beforeComplete,\n            afterComplete: afterComplete\n        });\n    };\n    /**\n     * Send a Cypher query through the underlying connection.\n     * @param {string} query the cypher query.\n     * @param {Object} parameters the query parameters.\n     * @param {Object} param\n     * @param {Bookmarks} param.bookmarks the bookmarks.\n     * @param {TxConfig} param.txConfig the transaction configuration.\n     * @param {string} param.database the target database name.\n     * @param {string} param.impersonatedUser the impersonated user\n     * @param {NotificationFilter} param.notificationFilter the notification filter.\n     * @param {string} param.mode the access mode.\n     * @param {function(keys: string[])} param.beforeKeys the callback to invoke before handling the keys.\n     * @param {function(keys: string[])} param.afterKeys the callback to invoke after handling the keys.\n     * @param {function(err: Error)} param.beforeError the callback to invoke before handling the error.\n     * @param {function(err: Error)} param.afterError the callback to invoke after handling the error.\n     * @param {function()} param.beforeComplete the callback to invoke before handling the completion.\n     * @param {function()} param.afterComplete the callback to invoke after handling the completion.\n     * @param {boolean} param.flush whether to flush the buffered messages.\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n     */\n    BoltProtocol.prototype.run = function (query, parameters, _a) {\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, beforeKeys = _b.beforeKeys, afterKeys = _b.afterKeys, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete, _c = _b.flush, flush = _c === void 0 ? true : _c, _d = _b.highRecordWatermark, highRecordWatermark = _d === void 0 ? Number.MAX_VALUE : _d, _e = _b.lowRecordWatermark, lowRecordWatermark = _e === void 0 ? Number.MAX_VALUE : _e;\n        var observer = new stream_observers_1.ResultStreamObserver({\n            server: this._server,\n            beforeKeys: beforeKeys,\n            afterKeys: afterKeys,\n            beforeError: beforeError,\n            afterError: afterError,\n            beforeComplete: beforeComplete,\n            afterComplete: afterComplete,\n            highRecordWatermark: highRecordWatermark,\n            lowRecordWatermark: lowRecordWatermark\n        });\n        // bookmarks and mode are ignored in this version of the protocol\n        (0, bolt_protocol_util_1.assertTxConfigIsEmpty)(txConfig, this._onProtocolError, observer);\n        // passing in a database name on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertDatabaseIsEmpty)(database, this._onProtocolError, observer);\n        // passing impersonated user on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertImpersonatedUserIsEmpty)(impersonatedUser, this._onProtocolError, observer);\n        // passing notification filter on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\n        this.write(request_message_1.default.run(query, parameters), observer, false);\n        this.write(request_message_1.default.pullAll(), observer, flush);\n        return observer;\n    };\n    Object.defineProperty(BoltProtocol.prototype, \"currentFailure\", {\n        get: function () {\n            return this._responseHandler.currentFailure;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Send a RESET through the underlying connection.\n     * @param {Object} param\n     * @param {function(err: Error)} param.onError the callback to invoke on error.\n     * @param {function()} param.onComplete the callback to invoke on completion.\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n     */\n    BoltProtocol.prototype.reset = function (_a) {\n        var _b = _a === void 0 ? {} : _a, onError = _b.onError, onComplete = _b.onComplete;\n        var observer = new stream_observers_1.ResetObserver({\n            onProtocolError: this._onProtocolError,\n            onError: onError,\n            onComplete: onComplete\n        });\n        this.write(request_message_1.default.reset(), observer, true);\n        return observer;\n    };\n    /**\n     * Send a TELEMETRY through the underlying connection.\n     *\n     * @param {object} param0 Message params\n     * @param {number} param0.api The API called\n     * @param {object} param1 Configuration and callbacks\n     * @param {function()} param1.onCompleted Called when completed\n     * @param {function()} param1.onError Called when error\n     * @return {StreamObserver} the stream observer that monitors the corresponding server response.\n     */\n    BoltProtocol.prototype.telemetry = function (_a, _b) {\n        var api = _a.api;\n        var _c = _b === void 0 ? {} : _b, onError = _c.onError, onCompleted = _c.onCompleted;\n        var observer = new stream_observers_1.CompletedObserver();\n        if (onCompleted) {\n            onCompleted();\n        }\n        return observer;\n    };\n    BoltProtocol.prototype._createPacker = function (chunker) {\n        return new packstream_1.v1.Packer(chunker);\n    };\n    BoltProtocol.prototype._createUnpacker = function (disableLosslessIntegers, useBigInt) {\n        return new packstream_1.v1.Unpacker(disableLosslessIntegers, useBigInt);\n    };\n    /**\n     * Write a message to the network channel.\n     * @param {RequestMessage} message the message to write.\n     * @param {StreamObserver} observer the response observer.\n     * @param {boolean} flush `true` if flush should happen after the message is written to the buffer.\n     */\n    BoltProtocol.prototype.write = function (message, observer, flush) {\n        var queued = this.queueObserverIfProtocolIsNotBroken(observer);\n        if (queued) {\n            if (this._log.isDebugEnabled()) {\n                this._log.debug(\"C: \".concat(message));\n            }\n            this._lastMessageSignature = message.signature;\n            var messageStruct = new packstream_1.structure.Structure(message.signature, message.fields);\n            this.packable(messageStruct)();\n            this._chunker.messageBoundary();\n            if (flush) {\n                this._chunker.flush();\n            }\n        }\n    };\n    BoltProtocol.prototype.isLastMessageLogon = function () {\n        return this._lastMessageSignature === request_message_1.SIGNATURES.HELLO ||\n            this._lastMessageSignature === request_message_1.SIGNATURES.LOGON;\n    };\n    BoltProtocol.prototype.isLastMessageReset = function () {\n        return this._lastMessageSignature === request_message_1.SIGNATURES.RESET;\n    };\n    /**\n     * Notifies faltal erros to the observers and mark the protocol in the fatal error state.\n     * @param {Error} error The error\n     */\n    BoltProtocol.prototype.notifyFatalError = function (error) {\n        this._fatalError = error;\n        return this._responseHandler._notifyErrorToObservers(error);\n    };\n    /**\n     * Updates the the current observer with the next one on the queue.\n     */\n    BoltProtocol.prototype.updateCurrentObserver = function () {\n        return this._responseHandler._updateCurrentObserver();\n    };\n    /**\n     * Checks if exist an ongoing observable requests\n     * @return {boolean}\n     */\n    BoltProtocol.prototype.hasOngoingObservableRequests = function () {\n        return this._responseHandler.hasOngoingObservableRequests();\n    };\n    /**\n     * Enqueue the observer if the protocol is not broken.\n     * In case it's broken, the observer will be notified about the error.\n     *\n     * @param {StreamObserver} observer The observer\n     * @returns {boolean} if it was queued\n     */\n    BoltProtocol.prototype.queueObserverIfProtocolIsNotBroken = function (observer) {\n        if (this.isBroken()) {\n            this.notifyFatalErrorToObserver(observer);\n            return false;\n        }\n        return this._responseHandler._queueObserver(observer);\n    };\n    /**\n     * Veritfy the protocol is not broken.\n     * @returns {boolean}\n     */\n    BoltProtocol.prototype.isBroken = function () {\n        return !!this._fatalError;\n    };\n    /**\n     * Notifies the current fatal error to the observer\n     *\n     * @param {StreamObserver} observer The observer\n     */\n    BoltProtocol.prototype.notifyFatalErrorToObserver = function (observer) {\n        if (observer && observer.onError) {\n            observer.onError(this._fatalError);\n        }\n    };\n    /**\n     * Reset current failure on the observable response handler to null.\n     */\n    BoltProtocol.prototype.resetFailure = function () {\n        this._responseHandler._resetFailure();\n    };\n    BoltProtocol.prototype._onLoginCompleted = function (metadata, authToken, onCompleted) {\n        this._initialized = true;\n        this._authToken = authToken;\n        if (metadata) {\n            var serverVersion = metadata.server;\n            if (!this._server.version) {\n                this._server.version = serverVersion;\n            }\n        }\n        if (onCompleted) {\n            onCompleted(metadata);\n        }\n    };\n    BoltProtocol.prototype._onLoginError = function (error, onError) {\n        this._onProtocolError(error.message);\n        if (onError) {\n            onError(error);\n        }\n    };\n    return BoltProtocol;\n}());\nexports[\"default\"] = BoltProtocol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v1.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v1.transformer.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v1.transformer.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar packstream_1 = __webpack_require__(/*! ../packstream */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/packstream/index.js\");\nvar transformer_1 = __webpack_require__(/*! ./transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/transformer.js\");\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\nvar NODE = 0x4e;\nvar NODE_STRUCT_SIZE = 3;\nvar RELATIONSHIP = 0x52;\nvar RELATIONSHIP_STRUCT_SIZE = 5;\nvar UNBOUND_RELATIONSHIP = 0x72;\nvar UNBOUND_RELATIONSHIP_STRUCT_SIZE = 3;\nvar PATH = 0x50;\nvar PATH_STRUCT_SIZE = 3;\n/**\n * Creates the Node Transformer\n * @returns {TypeTransformer}\n */\nfunction createNodeTransformer() {\n    return new transformer_1.TypeTransformer({\n        signature: NODE,\n        isTypeInstance: function (object) { return object instanceof neo4j_driver_core_1.Node; },\n        toStructure: function (object) {\n            throw (0, neo4j_driver_core_1.newError)(\"It is not allowed to pass nodes in query parameters, given: \".concat(object), PROTOCOL_ERROR);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('Node', NODE_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 3), identity = _a[0], labels = _a[1], properties = _a[2];\n            return new neo4j_driver_core_1.Node(identity, labels, properties);\n        }\n    });\n}\n/**\n * Creates the Relationship Transformer\n * @returns {TypeTransformer}\n */\nfunction createRelationshipTransformer() {\n    return new transformer_1.TypeTransformer({\n        signature: RELATIONSHIP,\n        isTypeInstance: function (object) { return object instanceof neo4j_driver_core_1.Relationship; },\n        toStructure: function (object) {\n            throw (0, neo4j_driver_core_1.newError)(\"It is not allowed to pass relationships in query parameters, given: \".concat(object), PROTOCOL_ERROR);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('Relationship', RELATIONSHIP_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 5), identity = _a[0], startNodeIdentity = _a[1], endNodeIdentity = _a[2], type = _a[3], properties = _a[4];\n            return new neo4j_driver_core_1.Relationship(identity, startNodeIdentity, endNodeIdentity, type, properties);\n        }\n    });\n}\n/**\n * Creates the Unbound Relationship Transformer\n * @returns {TypeTransformer}\n */\nfunction createUnboundRelationshipTransformer() {\n    return new transformer_1.TypeTransformer({\n        signature: UNBOUND_RELATIONSHIP,\n        isTypeInstance: function (object) { return object instanceof neo4j_driver_core_1.UnboundRelationship; },\n        toStructure: function (object) {\n            throw (0, neo4j_driver_core_1.newError)(\"It is not allowed to pass unbound relationships in query parameters, given: \".concat(object), PROTOCOL_ERROR);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('UnboundRelationship', UNBOUND_RELATIONSHIP_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 3), identity = _a[0], type = _a[1], properties = _a[2];\n            return new neo4j_driver_core_1.UnboundRelationship(identity, type, properties);\n        }\n    });\n}\n/**\n * Creates the Path Transformer\n * @returns {TypeTransformer}\n */\nfunction createPathTransformer() {\n    return new transformer_1.TypeTransformer({\n        signature: PATH,\n        isTypeInstance: function (object) { return object instanceof neo4j_driver_core_1.Path; },\n        toStructure: function (object) {\n            throw (0, neo4j_driver_core_1.newError)(\"It is not allowed to pass paths in query parameters, given: \".concat(object), PROTOCOL_ERROR);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('Path', PATH_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 3), nodes = _a[0], rels = _a[1], sequence = _a[2];\n            var segments = [];\n            var prevNode = nodes[0];\n            for (var i = 0; i < sequence.length; i += 2) {\n                var nextNode = nodes[sequence[i + 1]];\n                var relIndex = (0, neo4j_driver_core_1.toNumber)(sequence[i]);\n                var rel = void 0;\n                if (relIndex > 0) {\n                    rel = rels[relIndex - 1];\n                    if (rel instanceof neo4j_driver_core_1.UnboundRelationship) {\n                        // To avoid duplication, relationships in a path do not contain\n                        // information about their start and end nodes, that's instead\n                        // inferred from the path sequence. This is us inferring (and,\n                        // for performance reasons remembering) the start/end of a rel.\n                        rels[relIndex - 1] = rel = rel.bindTo(prevNode, nextNode);\n                    }\n                }\n                else {\n                    rel = rels[-relIndex - 1];\n                    if (rel instanceof neo4j_driver_core_1.UnboundRelationship) {\n                        // See above\n                        rels[-relIndex - 1] = rel = rel.bindTo(nextNode, prevNode);\n                    }\n                }\n                // Done hydrating one path segment.\n                segments.push(new neo4j_driver_core_1.PathSegment(prevNode, rel, nextNode));\n                prevNode = nextNode;\n            }\n            return new neo4j_driver_core_1.Path(nodes[0], nodes[nodes.length - 1], segments);\n        }\n    });\n}\nexports[\"default\"] = {\n    createNodeTransformer: createNodeTransformer,\n    createRelationshipTransformer: createRelationshipTransformer,\n    createUnboundRelationshipTransformer: createUnboundRelationshipTransformer,\n    createPathTransformer: createPathTransformer\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9ib2x0LXByb3RvY29sLXYxLnRyYW5zZm9ybWVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixNQUFNO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEIsbUJBQU8sQ0FBQyw4RUFBbUI7QUFDckQsbUJBQW1CLG1CQUFPLENBQUMsZ0dBQWU7QUFDMUMsb0JBQW9CLG1CQUFPLENBQUMsZ0dBQWU7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxvREFBb0Q7QUFDaEc7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0Qyw0REFBNEQ7QUFDeEc7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxtRUFBbUU7QUFDL0c7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxvREFBb0Q7QUFDaEc7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHFCQUFxQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmVvNGotbmV4dC1hcHAvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9ib2x0LXByb3RvY29sLXYxLnRyYW5zZm9ybWVyLmpzP2RhMDciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIENvcHlyaWdodCAoYykgXCJOZW80alwiXG4gKiBOZW80aiBTd2VkZW4gQUIgW2h0dHBzOi8vbmVvNGouY29tXVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fcmVhZCA9ICh0aGlzICYmIHRoaXMuX19yZWFkKSB8fCBmdW5jdGlvbiAobywgbikge1xuICAgIHZhciBtID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9bU3ltYm9sLml0ZXJhdG9yXTtcbiAgICBpZiAoIW0pIHJldHVybiBvO1xuICAgIHZhciBpID0gbS5jYWxsKG8pLCByLCBhciA9IFtdLCBlO1xuICAgIHRyeSB7XG4gICAgICAgIHdoaWxlICgobiA9PT0gdm9pZCAwIHx8IG4tLSA+IDApICYmICEociA9IGkubmV4dCgpKS5kb25lKSBhci5wdXNoKHIudmFsdWUpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHsgZSA9IHsgZXJyb3I6IGVycm9yIH07IH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChyICYmICFyLmRvbmUgJiYgKG0gPSBpW1wicmV0dXJuXCJdKSkgbS5jYWxsKGkpO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkgeyBpZiAoZSkgdGhyb3cgZS5lcnJvcjsgfVxuICAgIH1cbiAgICByZXR1cm4gYXI7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIG5lbzRqX2RyaXZlcl9jb3JlXzEgPSByZXF1aXJlKFwibmVvNGotZHJpdmVyLWNvcmVcIik7XG52YXIgcGFja3N0cmVhbV8xID0gcmVxdWlyZShcIi4uL3BhY2tzdHJlYW1cIik7XG52YXIgdHJhbnNmb3JtZXJfMSA9IHJlcXVpcmUoXCIuL3RyYW5zZm9ybWVyXCIpO1xudmFyIFBST1RPQ09MX0VSUk9SID0gbmVvNGpfZHJpdmVyX2NvcmVfMS5lcnJvci5QUk9UT0NPTF9FUlJPUjtcbnZhciBOT0RFID0gMHg0ZTtcbnZhciBOT0RFX1NUUlVDVF9TSVpFID0gMztcbnZhciBSRUxBVElPTlNISVAgPSAweDUyO1xudmFyIFJFTEFUSU9OU0hJUF9TVFJVQ1RfU0laRSA9IDU7XG52YXIgVU5CT1VORF9SRUxBVElPTlNISVAgPSAweDcyO1xudmFyIFVOQk9VTkRfUkVMQVRJT05TSElQX1NUUlVDVF9TSVpFID0gMztcbnZhciBQQVRIID0gMHg1MDtcbnZhciBQQVRIX1NUUlVDVF9TSVpFID0gMztcbi8qKlxuICogQ3JlYXRlcyB0aGUgTm9kZSBUcmFuc2Zvcm1lclxuICogQHJldHVybnMge1R5cGVUcmFuc2Zvcm1lcn1cbiAqL1xuZnVuY3Rpb24gY3JlYXRlTm9kZVRyYW5zZm9ybWVyKCkge1xuICAgIHJldHVybiBuZXcgdHJhbnNmb3JtZXJfMS5UeXBlVHJhbnNmb3JtZXIoe1xuICAgICAgICBzaWduYXR1cmU6IE5PREUsXG4gICAgICAgIGlzVHlwZUluc3RhbmNlOiBmdW5jdGlvbiAob2JqZWN0KSB7IHJldHVybiBvYmplY3QgaW5zdGFuY2VvZiBuZW80al9kcml2ZXJfY29yZV8xLk5vZGU7IH0sXG4gICAgICAgIHRvU3RydWN0dXJlOiBmdW5jdGlvbiAob2JqZWN0KSB7XG4gICAgICAgICAgICB0aHJvdyAoMCwgbmVvNGpfZHJpdmVyX2NvcmVfMS5uZXdFcnJvcikoXCJJdCBpcyBub3QgYWxsb3dlZCB0byBwYXNzIG5vZGVzIGluIHF1ZXJ5IHBhcmFtZXRlcnMsIGdpdmVuOiBcIi5jb25jYXQob2JqZWN0KSwgUFJPVE9DT0xfRVJST1IpO1xuICAgICAgICB9LFxuICAgICAgICBmcm9tU3RydWN0dXJlOiBmdW5jdGlvbiAoc3RydWN0KSB7XG4gICAgICAgICAgICBwYWNrc3RyZWFtXzEuc3RydWN0dXJlLnZlcmlmeVN0cnVjdFNpemUoJ05vZGUnLCBOT0RFX1NUUlVDVF9TSVpFLCBzdHJ1Y3Quc2l6ZSk7XG4gICAgICAgICAgICB2YXIgX2EgPSBfX3JlYWQoc3RydWN0LmZpZWxkcywgMyksIGlkZW50aXR5ID0gX2FbMF0sIGxhYmVscyA9IF9hWzFdLCBwcm9wZXJ0aWVzID0gX2FbMl07XG4gICAgICAgICAgICByZXR1cm4gbmV3IG5lbzRqX2RyaXZlcl9jb3JlXzEuTm9kZShpZGVudGl0eSwgbGFiZWxzLCBwcm9wZXJ0aWVzKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuLyoqXG4gKiBDcmVhdGVzIHRoZSBSZWxhdGlvbnNoaXAgVHJhbnNmb3JtZXJcbiAqIEByZXR1cm5zIHtUeXBlVHJhbnNmb3JtZXJ9XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVJlbGF0aW9uc2hpcFRyYW5zZm9ybWVyKCkge1xuICAgIHJldHVybiBuZXcgdHJhbnNmb3JtZXJfMS5UeXBlVHJhbnNmb3JtZXIoe1xuICAgICAgICBzaWduYXR1cmU6IFJFTEFUSU9OU0hJUCxcbiAgICAgICAgaXNUeXBlSW5zdGFuY2U6IGZ1bmN0aW9uIChvYmplY3QpIHsgcmV0dXJuIG9iamVjdCBpbnN0YW5jZW9mIG5lbzRqX2RyaXZlcl9jb3JlXzEuUmVsYXRpb25zaGlwOyB9LFxuICAgICAgICB0b1N0cnVjdHVyZTogZnVuY3Rpb24gKG9iamVjdCkge1xuICAgICAgICAgICAgdGhyb3cgKDAsIG5lbzRqX2RyaXZlcl9jb3JlXzEubmV3RXJyb3IpKFwiSXQgaXMgbm90IGFsbG93ZWQgdG8gcGFzcyByZWxhdGlvbnNoaXBzIGluIHF1ZXJ5IHBhcmFtZXRlcnMsIGdpdmVuOiBcIi5jb25jYXQob2JqZWN0KSwgUFJPVE9DT0xfRVJST1IpO1xuICAgICAgICB9LFxuICAgICAgICBmcm9tU3RydWN0dXJlOiBmdW5jdGlvbiAoc3RydWN0KSB7XG4gICAgICAgICAgICBwYWNrc3RyZWFtXzEuc3RydWN0dXJlLnZlcmlmeVN0cnVjdFNpemUoJ1JlbGF0aW9uc2hpcCcsIFJFTEFUSU9OU0hJUF9TVFJVQ1RfU0laRSwgc3RydWN0LnNpemUpO1xuICAgICAgICAgICAgdmFyIF9hID0gX19yZWFkKHN0cnVjdC5maWVsZHMsIDUpLCBpZGVudGl0eSA9IF9hWzBdLCBzdGFydE5vZGVJZGVudGl0eSA9IF9hWzFdLCBlbmROb2RlSWRlbnRpdHkgPSBfYVsyXSwgdHlwZSA9IF9hWzNdLCBwcm9wZXJ0aWVzID0gX2FbNF07XG4gICAgICAgICAgICByZXR1cm4gbmV3IG5lbzRqX2RyaXZlcl9jb3JlXzEuUmVsYXRpb25zaGlwKGlkZW50aXR5LCBzdGFydE5vZGVJZGVudGl0eSwgZW5kTm9kZUlkZW50aXR5LCB0eXBlLCBwcm9wZXJ0aWVzKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuLyoqXG4gKiBDcmVhdGVzIHRoZSBVbmJvdW5kIFJlbGF0aW9uc2hpcCBUcmFuc2Zvcm1lclxuICogQHJldHVybnMge1R5cGVUcmFuc2Zvcm1lcn1cbiAqL1xuZnVuY3Rpb24gY3JlYXRlVW5ib3VuZFJlbGF0aW9uc2hpcFRyYW5zZm9ybWVyKCkge1xuICAgIHJldHVybiBuZXcgdHJhbnNmb3JtZXJfMS5UeXBlVHJhbnNmb3JtZXIoe1xuICAgICAgICBzaWduYXR1cmU6IFVOQk9VTkRfUkVMQVRJT05TSElQLFxuICAgICAgICBpc1R5cGVJbnN0YW5jZTogZnVuY3Rpb24gKG9iamVjdCkgeyByZXR1cm4gb2JqZWN0IGluc3RhbmNlb2YgbmVvNGpfZHJpdmVyX2NvcmVfMS5VbmJvdW5kUmVsYXRpb25zaGlwOyB9LFxuICAgICAgICB0b1N0cnVjdHVyZTogZnVuY3Rpb24gKG9iamVjdCkge1xuICAgICAgICAgICAgdGhyb3cgKDAsIG5lbzRqX2RyaXZlcl9jb3JlXzEubmV3RXJyb3IpKFwiSXQgaXMgbm90IGFsbG93ZWQgdG8gcGFzcyB1bmJvdW5kIHJlbGF0aW9uc2hpcHMgaW4gcXVlcnkgcGFyYW1ldGVycywgZ2l2ZW46IFwiLmNvbmNhdChvYmplY3QpLCBQUk9UT0NPTF9FUlJPUik7XG4gICAgICAgIH0sXG4gICAgICAgIGZyb21TdHJ1Y3R1cmU6IGZ1bmN0aW9uIChzdHJ1Y3QpIHtcbiAgICAgICAgICAgIHBhY2tzdHJlYW1fMS5zdHJ1Y3R1cmUudmVyaWZ5U3RydWN0U2l6ZSgnVW5ib3VuZFJlbGF0aW9uc2hpcCcsIFVOQk9VTkRfUkVMQVRJT05TSElQX1NUUlVDVF9TSVpFLCBzdHJ1Y3Quc2l6ZSk7XG4gICAgICAgICAgICB2YXIgX2EgPSBfX3JlYWQoc3RydWN0LmZpZWxkcywgMyksIGlkZW50aXR5ID0gX2FbMF0sIHR5cGUgPSBfYVsxXSwgcHJvcGVydGllcyA9IF9hWzJdO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBuZW80al9kcml2ZXJfY29yZV8xLlVuYm91bmRSZWxhdGlvbnNoaXAoaWRlbnRpdHksIHR5cGUsIHByb3BlcnRpZXMpO1xuICAgICAgICB9XG4gICAgfSk7XG59XG4vKipcbiAqIENyZWF0ZXMgdGhlIFBhdGggVHJhbnNmb3JtZXJcbiAqIEByZXR1cm5zIHtUeXBlVHJhbnNmb3JtZXJ9XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVBhdGhUcmFuc2Zvcm1lcigpIHtcbiAgICByZXR1cm4gbmV3IHRyYW5zZm9ybWVyXzEuVHlwZVRyYW5zZm9ybWVyKHtcbiAgICAgICAgc2lnbmF0dXJlOiBQQVRILFxuICAgICAgICBpc1R5cGVJbnN0YW5jZTogZnVuY3Rpb24gKG9iamVjdCkgeyByZXR1cm4gb2JqZWN0IGluc3RhbmNlb2YgbmVvNGpfZHJpdmVyX2NvcmVfMS5QYXRoOyB9LFxuICAgICAgICB0b1N0cnVjdHVyZTogZnVuY3Rpb24gKG9iamVjdCkge1xuICAgICAgICAgICAgdGhyb3cgKDAsIG5lbzRqX2RyaXZlcl9jb3JlXzEubmV3RXJyb3IpKFwiSXQgaXMgbm90IGFsbG93ZWQgdG8gcGFzcyBwYXRocyBpbiBxdWVyeSBwYXJhbWV0ZXJzLCBnaXZlbjogXCIuY29uY2F0KG9iamVjdCksIFBST1RPQ09MX0VSUk9SKTtcbiAgICAgICAgfSxcbiAgICAgICAgZnJvbVN0cnVjdHVyZTogZnVuY3Rpb24gKHN0cnVjdCkge1xuICAgICAgICAgICAgcGFja3N0cmVhbV8xLnN0cnVjdHVyZS52ZXJpZnlTdHJ1Y3RTaXplKCdQYXRoJywgUEFUSF9TVFJVQ1RfU0laRSwgc3RydWN0LnNpemUpO1xuICAgICAgICAgICAgdmFyIF9hID0gX19yZWFkKHN0cnVjdC5maWVsZHMsIDMpLCBub2RlcyA9IF9hWzBdLCByZWxzID0gX2FbMV0sIHNlcXVlbmNlID0gX2FbMl07XG4gICAgICAgICAgICB2YXIgc2VnbWVudHMgPSBbXTtcbiAgICAgICAgICAgIHZhciBwcmV2Tm9kZSA9IG5vZGVzWzBdO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZXF1ZW5jZS5sZW5ndGg7IGkgKz0gMikge1xuICAgICAgICAgICAgICAgIHZhciBuZXh0Tm9kZSA9IG5vZGVzW3NlcXVlbmNlW2kgKyAxXV07XG4gICAgICAgICAgICAgICAgdmFyIHJlbEluZGV4ID0gKDAsIG5lbzRqX2RyaXZlcl9jb3JlXzEudG9OdW1iZXIpKHNlcXVlbmNlW2ldKTtcbiAgICAgICAgICAgICAgICB2YXIgcmVsID0gdm9pZCAwO1xuICAgICAgICAgICAgICAgIGlmIChyZWxJbmRleCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgcmVsID0gcmVsc1tyZWxJbmRleCAtIDFdO1xuICAgICAgICAgICAgICAgICAgICBpZiAocmVsIGluc3RhbmNlb2YgbmVvNGpfZHJpdmVyX2NvcmVfMS5VbmJvdW5kUmVsYXRpb25zaGlwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBUbyBhdm9pZCBkdXBsaWNhdGlvbiwgcmVsYXRpb25zaGlwcyBpbiBhIHBhdGggZG8gbm90IGNvbnRhaW5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGluZm9ybWF0aW9uIGFib3V0IHRoZWlyIHN0YXJ0IGFuZCBlbmQgbm9kZXMsIHRoYXQncyBpbnN0ZWFkXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBpbmZlcnJlZCBmcm9tIHRoZSBwYXRoIHNlcXVlbmNlLiBUaGlzIGlzIHVzIGluZmVycmluZyAoYW5kLFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZm9yIHBlcmZvcm1hbmNlIHJlYXNvbnMgcmVtZW1iZXJpbmcpIHRoZSBzdGFydC9lbmQgb2YgYSByZWwuXG4gICAgICAgICAgICAgICAgICAgICAgICByZWxzW3JlbEluZGV4IC0gMV0gPSByZWwgPSByZWwuYmluZFRvKHByZXZOb2RlLCBuZXh0Tm9kZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJlbCA9IHJlbHNbLXJlbEluZGV4IC0gMV07XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZWwgaW5zdGFuY2VvZiBuZW80al9kcml2ZXJfY29yZV8xLlVuYm91bmRSZWxhdGlvbnNoaXApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFNlZSBhYm92ZVxuICAgICAgICAgICAgICAgICAgICAgICAgcmVsc1stcmVsSW5kZXggLSAxXSA9IHJlbCA9IHJlbC5iaW5kVG8obmV4dE5vZGUsIHByZXZOb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBEb25lIGh5ZHJhdGluZyBvbmUgcGF0aCBzZWdtZW50LlxuICAgICAgICAgICAgICAgIHNlZ21lbnRzLnB1c2gobmV3IG5lbzRqX2RyaXZlcl9jb3JlXzEuUGF0aFNlZ21lbnQocHJldk5vZGUsIHJlbCwgbmV4dE5vZGUpKTtcbiAgICAgICAgICAgICAgICBwcmV2Tm9kZSA9IG5leHROb2RlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBuZW80al9kcml2ZXJfY29yZV8xLlBhdGgobm9kZXNbMF0sIG5vZGVzW25vZGVzLmxlbmd0aCAtIDFdLCBzZWdtZW50cyk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IHtcbiAgICBjcmVhdGVOb2RlVHJhbnNmb3JtZXI6IGNyZWF0ZU5vZGVUcmFuc2Zvcm1lcixcbiAgICBjcmVhdGVSZWxhdGlvbnNoaXBUcmFuc2Zvcm1lcjogY3JlYXRlUmVsYXRpb25zaGlwVHJhbnNmb3JtZXIsXG4gICAgY3JlYXRlVW5ib3VuZFJlbGF0aW9uc2hpcFRyYW5zZm9ybWVyOiBjcmVhdGVVbmJvdW5kUmVsYXRpb25zaGlwVHJhbnNmb3JtZXIsXG4gICAgY3JlYXRlUGF0aFRyYW5zZm9ybWVyOiBjcmVhdGVQYXRoVHJhbnNmb3JtZXJcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v1.transformer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v2.js":
/*!********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v2.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar bolt_protocol_v1_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v1 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v1.js\"));\nvar packstream_1 = __importDefault(__webpack_require__(/*! ../packstream */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/packstream/index.js\"));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar bolt_protocol_v2_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v2.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v2.transformer.js\"));\nvar transformer_1 = __importDefault(__webpack_require__(/*! ./transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/transformer.js\"));\nvar BOLT_PROTOCOL_V2 = neo4j_driver_core_1.internal.constants.BOLT_PROTOCOL_V2;\nvar BoltProtocol = /** @class */ (function (_super) {\n    __extends(BoltProtocol, _super);\n    function BoltProtocol() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BoltProtocol.prototype._createPacker = function (chunker) {\n        return new packstream_1.default.Packer(chunker);\n    };\n    BoltProtocol.prototype._createUnpacker = function (disableLosslessIntegers, useBigInt) {\n        return new packstream_1.default.Unpacker(disableLosslessIntegers, useBigInt);\n    };\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\n        get: function () {\n            var _this = this;\n            if (this._transformer === undefined) {\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v2_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\n            }\n            return this._transformer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\n        get: function () {\n            return BOLT_PROTOCOL_V2;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return BoltProtocol;\n}(bolt_protocol_v1_1.default));\nexports[\"default\"] = BoltProtocol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9ib2x0LXByb3RvY29sLXYyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnQkFBZ0Isc0NBQXNDLGtCQUFrQjtBQUN2Riw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsbUJBQU8sQ0FBQywwR0FBb0I7QUFDckUsbUNBQW1DLG1CQUFPLENBQUMsZ0dBQWU7QUFDMUQsMEJBQTBCLG1CQUFPLENBQUMsOEVBQW1CO0FBQ3JELHFEQUFxRCxtQkFBTyxDQUFDLGtJQUFnQztBQUM3RixvQ0FBb0MsbUJBQU8sQ0FBQyxnR0FBZTtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRJQUE0SSwyQ0FBMkM7QUFDdkw7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQztBQUNELGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmVvNGotbmV4dC1hcHAvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9ib2x0LXByb3RvY29sLXYyLmpzPzFkY2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBib2x0X3Byb3RvY29sX3YxXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vYm9sdC1wcm90b2NvbC12MVwiKSk7XG52YXIgcGFja3N0cmVhbV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi9wYWNrc3RyZWFtXCIpKTtcbnZhciBuZW80al9kcml2ZXJfY29yZV8xID0gcmVxdWlyZShcIm5lbzRqLWRyaXZlci1jb3JlXCIpO1xudmFyIGJvbHRfcHJvdG9jb2xfdjJfdHJhbnNmb3JtZXJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9ib2x0LXByb3RvY29sLXYyLnRyYW5zZm9ybWVyXCIpKTtcbnZhciB0cmFuc2Zvcm1lcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3RyYW5zZm9ybWVyXCIpKTtcbnZhciBCT0xUX1BST1RPQ09MX1YyID0gbmVvNGpfZHJpdmVyX2NvcmVfMS5pbnRlcm5hbC5jb25zdGFudHMuQk9MVF9QUk9UT0NPTF9WMjtcbnZhciBCb2x0UHJvdG9jb2wgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEJvbHRQcm90b2NvbCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBCb2x0UHJvdG9jb2woKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICB9XG4gICAgQm9sdFByb3RvY29sLnByb3RvdHlwZS5fY3JlYXRlUGFja2VyID0gZnVuY3Rpb24gKGNodW5rZXIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBwYWNrc3RyZWFtXzEuZGVmYXVsdC5QYWNrZXIoY2h1bmtlcik7XG4gICAgfTtcbiAgICBCb2x0UHJvdG9jb2wucHJvdG90eXBlLl9jcmVhdGVVbnBhY2tlciA9IGZ1bmN0aW9uIChkaXNhYmxlTG9zc2xlc3NJbnRlZ2VycywgdXNlQmlnSW50KSB7XG4gICAgICAgIHJldHVybiBuZXcgcGFja3N0cmVhbV8xLmRlZmF1bHQuVW5wYWNrZXIoZGlzYWJsZUxvc3NsZXNzSW50ZWdlcnMsIHVzZUJpZ0ludCk7XG4gICAgfTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQm9sdFByb3RvY29sLnByb3RvdHlwZSwgXCJ0cmFuc2Zvcm1lclwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgICAgIGlmICh0aGlzLl90cmFuc2Zvcm1lciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fdHJhbnNmb3JtZXIgPSBuZXcgdHJhbnNmb3JtZXJfMS5kZWZhdWx0KE9iamVjdC52YWx1ZXMoYm9sdF9wcm90b2NvbF92Ml90cmFuc2Zvcm1lcl8xLmRlZmF1bHQpLm1hcChmdW5jdGlvbiAoY3JlYXRlKSB7IHJldHVybiBjcmVhdGUoX3RoaXMuX2NvbmZpZywgX3RoaXMuX2xvZyk7IH0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLl90cmFuc2Zvcm1lcjtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShCb2x0UHJvdG9jb2wucHJvdG90eXBlLCBcInZlcnNpb25cIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBCT0xUX1BST1RPQ09MX1YyO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIEJvbHRQcm90b2NvbDtcbn0oYm9sdF9wcm90b2NvbF92MV8xLmRlZmF1bHQpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IEJvbHRQcm90b2NvbDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v2.transformer.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v2.transformer.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar packstream_1 = __webpack_require__(/*! ../packstream */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/packstream/index.js\");\nvar transformer_1 = __webpack_require__(/*! ./transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/transformer.js\");\nvar temporal_factory_1 = __webpack_require__(/*! ./temporal-factory */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/temporal-factory.js\");\nvar bolt_protocol_v1_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v1.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v1.transformer.js\"));\nvar _a = neo4j_driver_core_1.internal.temporalUtil, dateToEpochDay = _a.dateToEpochDay, localDateTimeToEpochSecond = _a.localDateTimeToEpochSecond, localTimeToNanoOfDay = _a.localTimeToNanoOfDay;\nvar POINT_2D = 0x58;\nvar POINT_2D_STRUCT_SIZE = 3;\nvar POINT_3D = 0x59;\nvar POINT_3D_STRUCT_SIZE = 4;\nvar DURATION = 0x45;\nvar DURATION_STRUCT_SIZE = 4;\nvar LOCAL_TIME = 0x74;\nvar LOCAL_TIME_STRUCT_SIZE = 1;\nvar TIME = 0x54;\nvar TIME_STRUCT_SIZE = 2;\nvar DATE = 0x44;\nvar DATE_STRUCT_SIZE = 1;\nvar LOCAL_DATE_TIME = 0x64;\nvar LOCAL_DATE_TIME_STRUCT_SIZE = 2;\nvar DATE_TIME_WITH_ZONE_OFFSET = 0x46;\nvar DATE_TIME_WITH_ZONE_OFFSET_STRUCT_SIZE = 3;\nvar DATE_TIME_WITH_ZONE_ID = 0x66;\nvar DATE_TIME_WITH_ZONE_ID_STRUCT_SIZE = 3;\n/**\n * Creates the Point2D Transformer\n * @returns {TypeTransformer}\n */\nfunction createPoint2DTransformer() {\n    return new transformer_1.TypeTransformer({\n        signature: POINT_2D,\n        isTypeInstance: function (point) { return (0, neo4j_driver_core_1.isPoint)(point) && (point.z === null || point.z === undefined); },\n        toStructure: function (point) { return new packstream_1.structure.Structure(POINT_2D, [\n            (0, neo4j_driver_core_1.int)(point.srid),\n            point.x,\n            point.y\n        ]); },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('Point2D', POINT_2D_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 3), srid = _a[0], x = _a[1], y = _a[2];\n            return new neo4j_driver_core_1.Point(srid, x, y, undefined // z\n            );\n        }\n    });\n}\n/**\n * Creates the Point3D Transformer\n * @returns {TypeTransformer}\n */\nfunction createPoint3DTransformer() {\n    return new transformer_1.TypeTransformer({\n        signature: POINT_3D,\n        isTypeInstance: function (point) { return (0, neo4j_driver_core_1.isPoint)(point) && point.z !== null && point.z !== undefined; },\n        toStructure: function (point) { return new packstream_1.structure.Structure(POINT_3D, [\n            (0, neo4j_driver_core_1.int)(point.srid),\n            point.x,\n            point.y,\n            point.z\n        ]); },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('Point3D', POINT_3D_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 4), srid = _a[0], x = _a[1], y = _a[2], z = _a[3];\n            return new neo4j_driver_core_1.Point(srid, x, y, z);\n        }\n    });\n}\n/**\n * Creates the Duration Transformer\n * @returns {TypeTransformer}\n */\nfunction createDurationTransformer() {\n    return new transformer_1.TypeTransformer({\n        signature: DURATION,\n        isTypeInstance: neo4j_driver_core_1.isDuration,\n        toStructure: function (value) {\n            var months = (0, neo4j_driver_core_1.int)(value.months);\n            var days = (0, neo4j_driver_core_1.int)(value.days);\n            var seconds = (0, neo4j_driver_core_1.int)(value.seconds);\n            var nanoseconds = (0, neo4j_driver_core_1.int)(value.nanoseconds);\n            return new packstream_1.structure.Structure(DURATION, [months, days, seconds, nanoseconds]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('Duration', DURATION_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 4), months = _a[0], days = _a[1], seconds = _a[2], nanoseconds = _a[3];\n            return new neo4j_driver_core_1.Duration(months, days, seconds, nanoseconds);\n        }\n    });\n}\n/**\n * Creates the LocalTime Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createLocalTimeTransformer(_a) {\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\n    return new transformer_1.TypeTransformer({\n        signature: LOCAL_TIME,\n        isTypeInstance: neo4j_driver_core_1.isLocalTime,\n        toStructure: function (value) {\n            var nanoOfDay = localTimeToNanoOfDay(value.hour, value.minute, value.second, value.nanosecond);\n            return new packstream_1.structure.Structure(LOCAL_TIME, [nanoOfDay]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('LocalTime', LOCAL_TIME_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 1), nanoOfDay = _a[0];\n            var result = (0, temporal_factory_1.nanoOfDayToLocalTime)(nanoOfDay);\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n        }\n    });\n}\n/**\n * Creates the Time Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createTimeTransformer(_a) {\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\n    return new transformer_1.TypeTransformer({\n        signature: TIME,\n        isTypeInstance: neo4j_driver_core_1.isTime,\n        toStructure: function (value) {\n            var nanoOfDay = localTimeToNanoOfDay(value.hour, value.minute, value.second, value.nanosecond);\n            var offsetSeconds = (0, neo4j_driver_core_1.int)(value.timeZoneOffsetSeconds);\n            return new packstream_1.structure.Structure(TIME, [nanoOfDay, offsetSeconds]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('Time', TIME_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 2), nanoOfDay = _a[0], offsetSeconds = _a[1];\n            var localTime = (0, temporal_factory_1.nanoOfDayToLocalTime)(nanoOfDay);\n            var result = new neo4j_driver_core_1.Time(localTime.hour, localTime.minute, localTime.second, localTime.nanosecond, offsetSeconds);\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n        }\n    });\n}\n/**\n * Creates the Date Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createDateTransformer(_a) {\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\n    return new transformer_1.TypeTransformer({\n        signature: DATE,\n        isTypeInstance: neo4j_driver_core_1.isDate,\n        toStructure: function (value) {\n            var epochDay = dateToEpochDay(value.year, value.month, value.day);\n            return new packstream_1.structure.Structure(DATE, [epochDay]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('Date', DATE_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 1), epochDay = _a[0];\n            var result = (0, temporal_factory_1.epochDayToDate)(epochDay);\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n        }\n    });\n}\n/**\n * Creates the LocalDateTime Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createLocalDateTimeTransformer(_a) {\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\n    return new transformer_1.TypeTransformer({\n        signature: LOCAL_DATE_TIME,\n        isTypeInstance: neo4j_driver_core_1.isLocalDateTime,\n        toStructure: function (value) {\n            var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\n            var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\n            return new packstream_1.structure.Structure(LOCAL_DATE_TIME, [epochSecond, nano]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('LocalDateTime', LOCAL_DATE_TIME_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 2), epochSecond = _a[0], nano = _a[1];\n            var result = (0, temporal_factory_1.epochSecondAndNanoToLocalDateTime)(epochSecond, nano);\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n        }\n    });\n}\n/**\n * Creates the DateTime with ZoneId Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createDateTimeWithZoneIdTransformer(_a) {\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\n    return new transformer_1.TypeTransformer({\n        signature: DATE_TIME_WITH_ZONE_ID,\n        isTypeInstance: function (object) { return (0, neo4j_driver_core_1.isDateTime)(object) && object.timeZoneId != null; },\n        toStructure: function (value) {\n            var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\n            var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\n            var timeZoneId = value.timeZoneId;\n            return new packstream_1.structure.Structure(DATE_TIME_WITH_ZONE_ID, [epochSecond, nano, timeZoneId]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('DateTimeWithZoneId', DATE_TIME_WITH_ZONE_ID_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 3), epochSecond = _a[0], nano = _a[1], timeZoneId = _a[2];\n            var localDateTime = (0, temporal_factory_1.epochSecondAndNanoToLocalDateTime)(epochSecond, nano);\n            var result = new neo4j_driver_core_1.DateTime(localDateTime.year, localDateTime.month, localDateTime.day, localDateTime.hour, localDateTime.minute, localDateTime.second, localDateTime.nanosecond, null, timeZoneId);\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n        }\n    });\n}\n/**\n * Creates the DateTime with Offset Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createDateTimeWithOffsetTransformer(_a) {\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\n    return new transformer_1.TypeTransformer({\n        signature: DATE_TIME_WITH_ZONE_OFFSET,\n        isTypeInstance: function (object) { return (0, neo4j_driver_core_1.isDateTime)(object) && object.timeZoneId == null; },\n        toStructure: function (value) {\n            var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\n            var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\n            var timeZoneOffsetSeconds = (0, neo4j_driver_core_1.int)(value.timeZoneOffsetSeconds);\n            return new packstream_1.structure.Structure(DATE_TIME_WITH_ZONE_OFFSET, [epochSecond, nano, timeZoneOffsetSeconds]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('DateTimeWithZoneOffset', DATE_TIME_WITH_ZONE_OFFSET_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 3), epochSecond = _a[0], nano = _a[1], timeZoneOffsetSeconds = _a[2];\n            var localDateTime = (0, temporal_factory_1.epochSecondAndNanoToLocalDateTime)(epochSecond, nano);\n            var result = new neo4j_driver_core_1.DateTime(localDateTime.year, localDateTime.month, localDateTime.day, localDateTime.hour, localDateTime.minute, localDateTime.second, localDateTime.nanosecond, timeZoneOffsetSeconds, null);\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n        }\n    });\n}\nfunction convertIntegerPropsIfNeeded(obj, disableLosslessIntegers, useBigInt) {\n    if (!disableLosslessIntegers && !useBigInt) {\n        return obj;\n    }\n    var convert = function (value) {\n        return useBigInt ? value.toBigInt() : value.toNumberOrInfinity();\n    };\n    var clone = Object.create(Object.getPrototypeOf(obj));\n    for (var prop in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, prop) === true) {\n            var value = obj[prop];\n            clone[prop] = (0, neo4j_driver_core_1.isInt)(value) ? convert(value) : value;\n        }\n    }\n    Object.freeze(clone);\n    return clone;\n}\nexports[\"default\"] = __assign(__assign({}, bolt_protocol_v1_transformer_1.default), { createPoint2DTransformer: createPoint2DTransformer, createPoint3DTransformer: createPoint3DTransformer, createDurationTransformer: createDurationTransformer, createLocalTimeTransformer: createLocalTimeTransformer, createTimeTransformer: createTimeTransformer, createDateTransformer: createDateTransformer, createLocalDateTimeTransformer: createLocalDateTimeTransformer, createDateTimeWithZoneIdTransformer: createDateTimeWithZoneIdTransformer, createDateTimeWithOffsetTransformer: createDateTimeWithOffsetTransformer });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v2.transformer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v3.js":
/*!********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v3.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar bolt_protocol_v2_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v2 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v2.js\"));\nvar request_message_1 = __importDefault(__webpack_require__(/*! ./request-message */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/request-message.js\"));\nvar bolt_protocol_util_1 = __webpack_require__(/*! ./bolt-protocol-util */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-util.js\");\nvar stream_observers_1 = __webpack_require__(/*! ./stream-observers */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/stream-observers.js\");\nvar bolt_protocol_v3_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v3.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v3.transformer.js\"));\nvar transformer_1 = __importDefault(__webpack_require__(/*! ./transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/transformer.js\"));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar Bookmarks = neo4j_driver_core_1.internal.bookmarks.Bookmarks, BOLT_PROTOCOL_V3 = neo4j_driver_core_1.internal.constants.BOLT_PROTOCOL_V3, TxConfig = neo4j_driver_core_1.internal.txConfig.TxConfig;\nvar CONTEXT = 'context';\nvar CALL_GET_ROUTING_TABLE = \"CALL dbms.cluster.routing.getRoutingTable($\".concat(CONTEXT, \")\");\nvar noOpObserver = new stream_observers_1.StreamObserver();\nvar BoltProtocol = /** @class */ (function (_super) {\n    __extends(BoltProtocol, _super);\n    function BoltProtocol() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\n        get: function () {\n            return BOLT_PROTOCOL_V3;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\n        get: function () {\n            var _this = this;\n            if (this._transformer === undefined) {\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v3_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\n            }\n            return this._transformer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BoltProtocol.prototype.transformMetadata = function (metadata) {\n        if ('t_first' in metadata) {\n            // Bolt V3 uses shorter key 't_first' to represent 'result_available_after'\n            // adjust the key to be the same as in Bolt V1 so that ResultSummary can retrieve the value\n            metadata.result_available_after = metadata.t_first;\n            delete metadata.t_first;\n        }\n        if ('t_last' in metadata) {\n            // Bolt V3 uses shorter key 't_last' to represent 'result_consumed_after'\n            // adjust the key to be the same as in Bolt V1 so that ResultSummary can retrieve the value\n            metadata.result_consumed_after = metadata.t_last;\n            delete metadata.t_last;\n        }\n        return metadata;\n    };\n    BoltProtocol.prototype.initialize = function (_a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, userAgent = _b.userAgent, boltAgent = _b.boltAgent, authToken = _b.authToken, notificationFilter = _b.notificationFilter, onError = _b.onError, onComplete = _b.onComplete;\n        var observer = new stream_observers_1.LoginObserver({\n            onError: function (error) { return _this._onLoginError(error, onError); },\n            onCompleted: function (metadata) { return _this._onLoginCompleted(metadata, authToken, onComplete); }\n        });\n        // passing notification filter on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\n        this.write(request_message_1.default.hello(userAgent, authToken), observer, true);\n        return observer;\n    };\n    BoltProtocol.prototype.prepareToClose = function () {\n        this.write(request_message_1.default.goodbye(), noOpObserver, true);\n    };\n    BoltProtocol.prototype.beginTransaction = function (_a) {\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, mode = _b.mode, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\n        var observer = new stream_observers_1.ResultStreamObserver({\n            server: this._server,\n            beforeError: beforeError,\n            afterError: afterError,\n            beforeComplete: beforeComplete,\n            afterComplete: afterComplete\n        });\n        observer.prepareToHandleSingleResponse();\n        // passing in a database name on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertDatabaseIsEmpty)(database, this._onProtocolError, observer);\n        // passing impersonated user on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertImpersonatedUserIsEmpty)(impersonatedUser, this._onProtocolError, observer);\n        // passing notification filter on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\n        this.write(request_message_1.default.begin({ bookmarks: bookmarks, txConfig: txConfig, mode: mode }), observer, true);\n        return observer;\n    };\n    BoltProtocol.prototype.commitTransaction = function (_a) {\n        var _b = _a === void 0 ? {} : _a, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\n        var observer = new stream_observers_1.ResultStreamObserver({\n            server: this._server,\n            beforeError: beforeError,\n            afterError: afterError,\n            beforeComplete: beforeComplete,\n            afterComplete: afterComplete\n        });\n        observer.prepareToHandleSingleResponse();\n        this.write(request_message_1.default.commit(), observer, true);\n        return observer;\n    };\n    BoltProtocol.prototype.rollbackTransaction = function (_a) {\n        var _b = _a === void 0 ? {} : _a, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\n        var observer = new stream_observers_1.ResultStreamObserver({\n            server: this._server,\n            beforeError: beforeError,\n            afterError: afterError,\n            beforeComplete: beforeComplete,\n            afterComplete: afterComplete\n        });\n        observer.prepareToHandleSingleResponse();\n        this.write(request_message_1.default.rollback(), observer, true);\n        return observer;\n    };\n    BoltProtocol.prototype.run = function (query, parameters, _a) {\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, mode = _b.mode, beforeKeys = _b.beforeKeys, afterKeys = _b.afterKeys, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete, _c = _b.flush, flush = _c === void 0 ? true : _c, _d = _b.highRecordWatermark, highRecordWatermark = _d === void 0 ? Number.MAX_VALUE : _d, _e = _b.lowRecordWatermark, lowRecordWatermark = _e === void 0 ? Number.MAX_VALUE : _e;\n        var observer = new stream_observers_1.ResultStreamObserver({\n            server: this._server,\n            beforeKeys: beforeKeys,\n            afterKeys: afterKeys,\n            beforeError: beforeError,\n            afterError: afterError,\n            beforeComplete: beforeComplete,\n            afterComplete: afterComplete,\n            highRecordWatermark: highRecordWatermark,\n            lowRecordWatermark: lowRecordWatermark\n        });\n        // passing in a database name on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertDatabaseIsEmpty)(database, this._onProtocolError, observer);\n        // passing impersonated user on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertImpersonatedUserIsEmpty)(impersonatedUser, this._onProtocolError, observer);\n        // passing notification filter on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\n        this.write(request_message_1.default.runWithMetadata(query, parameters, {\n            bookmarks: bookmarks,\n            txConfig: txConfig,\n            mode: mode\n        }), observer, false);\n        this.write(request_message_1.default.pullAll(), observer, flush);\n        return observer;\n    };\n    /**\n     * Request routing information\n     *\n     * @param {Object} param -\n     * @param {object} param.routingContext The routing context used to define the routing table.\n     *  Multi-datacenter deployments is one of its use cases\n     * @param {string} param.databaseName The database name\n     * @param {Bookmarks} params.sessionContext.bookmarks The bookmarks used for requesting the routing table\n     * @param {string} params.sessionContext.mode The session mode\n     * @param {string} params.sessionContext.database The database name used on the session\n     * @param {function()} params.sessionContext.afterComplete The session param used after the session closed\n     * @param {function(err: Error)} param.onError\n     * @param {function(RawRoutingTable)} param.onCompleted\n     * @returns {RouteObserver} the route observer\n     */\n    BoltProtocol.prototype.requestRoutingInformation = function (_a) {\n        var _b;\n        var _c = _a.routingContext, routingContext = _c === void 0 ? {} : _c, _d = _a.sessionContext, sessionContext = _d === void 0 ? {} : _d, onError = _a.onError, onCompleted = _a.onCompleted;\n        var resultObserver = this.run(CALL_GET_ROUTING_TABLE, (_b = {}, _b[CONTEXT] = routingContext, _b), __assign(__assign({}, sessionContext), { txConfig: TxConfig.empty() }));\n        return new stream_observers_1.ProcedureRouteObserver({\n            resultObserver: resultObserver,\n            onProtocolError: this._onProtocolError,\n            onError: onError,\n            onCompleted: onCompleted\n        });\n    };\n    return BoltProtocol;\n}(bolt_protocol_v2_1.default));\nexports[\"default\"] = BoltProtocol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v3.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v3.transformer.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v3.transformer.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar bolt_protocol_v2_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v2.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v2.transformer.js\"));\nexports[\"default\"] = __assign({}, bolt_protocol_v2_transformer_1.default);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9ib2x0LXByb3RvY29sLXYzLnRyYW5zZm9ybWVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELE9BQU87QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFEQUFxRCxtQkFBTyxDQUFDLGtJQUFnQztBQUM3RixrQkFBZSxjQUFjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmVvNGotbmV4dC1hcHAvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9ib2x0LXByb3RvY29sLXYzLnRyYW5zZm9ybWVyLmpzP2YxOGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIENvcHlyaWdodCAoYykgXCJOZW80alwiXG4gKiBOZW80aiBTd2VkZW4gQUIgW2h0dHBzOi8vbmVvNGouY29tXVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBib2x0X3Byb3RvY29sX3YyX3RyYW5zZm9ybWVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vYm9sdC1wcm90b2NvbC12Mi50cmFuc2Zvcm1lclwiKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBfX2Fzc2lnbih7fSwgYm9sdF9wcm90b2NvbF92Ml90cmFuc2Zvcm1lcl8xLmRlZmF1bHQpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v3.transformer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x0.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x0.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar bolt_protocol_v3_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v3 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v3.js\"));\nvar request_message_1 = __importDefault(__webpack_require__(/*! ./request-message */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/request-message.js\"));\nvar bolt_protocol_util_1 = __webpack_require__(/*! ./bolt-protocol-util */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-util.js\");\nvar stream_observers_1 = __webpack_require__(/*! ./stream-observers */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/stream-observers.js\");\nvar bolt_protocol_v4x0_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x0.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x0.transformer.js\"));\nvar transformer_1 = __importDefault(__webpack_require__(/*! ./transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/transformer.js\"));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar Bookmarks = neo4j_driver_core_1.internal.bookmarks.Bookmarks, _a = neo4j_driver_core_1.internal.constants, BOLT_PROTOCOL_V4_0 = _a.BOLT_PROTOCOL_V4_0, FETCH_ALL = _a.FETCH_ALL, TxConfig = neo4j_driver_core_1.internal.txConfig.TxConfig;\nvar CONTEXT = 'context';\nvar DATABASE = 'database';\nvar CALL_GET_ROUTING_TABLE_MULTI_DB = \"CALL dbms.routing.getRoutingTable($\".concat(CONTEXT, \", $\").concat(DATABASE, \")\");\nvar BoltProtocol = /** @class */ (function (_super) {\n    __extends(BoltProtocol, _super);\n    function BoltProtocol() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\n        get: function () {\n            return BOLT_PROTOCOL_V4_0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\n        get: function () {\n            var _this = this;\n            if (this._transformer === undefined) {\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v4x0_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\n            }\n            return this._transformer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BoltProtocol.prototype.beginTransaction = function (_a) {\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, mode = _b.mode, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\n        var observer = new stream_observers_1.ResultStreamObserver({\n            server: this._server,\n            beforeError: beforeError,\n            afterError: afterError,\n            beforeComplete: beforeComplete,\n            afterComplete: afterComplete\n        });\n        observer.prepareToHandleSingleResponse();\n        // passing impersonated user on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertImpersonatedUserIsEmpty)(impersonatedUser, this._onProtocolError, observer);\n        // passing notification filter on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\n        this.write(request_message_1.default.begin({ bookmarks: bookmarks, txConfig: txConfig, database: database, mode: mode }), observer, true);\n        return observer;\n    };\n    BoltProtocol.prototype.run = function (query, parameters, _a) {\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, mode = _b.mode, beforeKeys = _b.beforeKeys, afterKeys = _b.afterKeys, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete, _c = _b.flush, flush = _c === void 0 ? true : _c, _d = _b.reactive, reactive = _d === void 0 ? false : _d, _e = _b.fetchSize, fetchSize = _e === void 0 ? FETCH_ALL : _e, _f = _b.highRecordWatermark, highRecordWatermark = _f === void 0 ? Number.MAX_VALUE : _f, _g = _b.lowRecordWatermark, lowRecordWatermark = _g === void 0 ? Number.MAX_VALUE : _g;\n        var observer = new stream_observers_1.ResultStreamObserver({\n            server: this._server,\n            reactive: reactive,\n            fetchSize: fetchSize,\n            moreFunction: this._requestMore.bind(this),\n            discardFunction: this._requestDiscard.bind(this),\n            beforeKeys: beforeKeys,\n            afterKeys: afterKeys,\n            beforeError: beforeError,\n            afterError: afterError,\n            beforeComplete: beforeComplete,\n            afterComplete: afterComplete,\n            highRecordWatermark: highRecordWatermark,\n            lowRecordWatermark: lowRecordWatermark\n        });\n        // passing impersonated user on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertImpersonatedUserIsEmpty)(impersonatedUser, this._onProtocolError, observer);\n        // passing notification filter on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\n        var flushRun = reactive;\n        this.write(request_message_1.default.runWithMetadata(query, parameters, {\n            bookmarks: bookmarks,\n            txConfig: txConfig,\n            database: database,\n            mode: mode\n        }), observer, flushRun && flush);\n        if (!reactive) {\n            this.write(request_message_1.default.pull({ n: fetchSize }), observer, flush);\n        }\n        return observer;\n    };\n    BoltProtocol.prototype._requestMore = function (stmtId, n, observer) {\n        this.write(request_message_1.default.pull({ stmtId: stmtId, n: n }), observer, true);\n    };\n    BoltProtocol.prototype._requestDiscard = function (stmtId, observer) {\n        this.write(request_message_1.default.discard({ stmtId: stmtId }), observer, true);\n    };\n    BoltProtocol.prototype._noOp = function () { };\n    /**\n     * Request routing information\n     *\n     * @param {Object} param -\n     * @param {object} param.routingContext The routing context used to define the routing table.\n     *  Multi-datacenter deployments is one of its use cases\n     * @param {string} param.databaseName The database name\n     * @param {Bookmarks} params.sessionContext.bookmarks The bookmarks used for requesting the routing table\n     * @param {string} params.sessionContext.mode The session mode\n     * @param {string} params.sessionContext.database The database name used on the session\n     * @param {function()} params.sessionContext.afterComplete The session param used after the session closed\n     * @param {function(err: Error)} param.onError\n     * @param {function(RawRoutingTable)} param.onCompleted\n     * @returns {RouteObserver} the route observer\n     */\n    BoltProtocol.prototype.requestRoutingInformation = function (_a) {\n        var _b;\n        var _c = _a.routingContext, routingContext = _c === void 0 ? {} : _c, _d = _a.databaseName, databaseName = _d === void 0 ? null : _d, _e = _a.sessionContext, sessionContext = _e === void 0 ? {} : _e, onError = _a.onError, onCompleted = _a.onCompleted;\n        var resultObserver = this.run(CALL_GET_ROUTING_TABLE_MULTI_DB, (_b = {},\n            _b[CONTEXT] = routingContext,\n            _b[DATABASE] = databaseName,\n            _b), __assign(__assign({}, sessionContext), { txConfig: TxConfig.empty() }));\n        return new stream_observers_1.ProcedureRouteObserver({\n            resultObserver: resultObserver,\n            onProtocolError: this._onProtocolError,\n            onError: onError,\n            onCompleted: onCompleted\n        });\n    };\n    return BoltProtocol;\n}(bolt_protocol_v3_1.default));\nexports[\"default\"] = BoltProtocol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x0.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x0.transformer.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x0.transformer.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar bolt_protocol_v3_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v3.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v3.transformer.js\"));\nexports[\"default\"] = __assign({}, bolt_protocol_v3_transformer_1.default);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9ib2x0LXByb3RvY29sLXY0eDAudHJhbnNmb3JtZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsT0FBTztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscURBQXFELG1CQUFPLENBQUMsa0lBQWdDO0FBQzdGLGtCQUFlLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9ib2x0L2JvbHQtcHJvdG9jb2wtdjR4MC50cmFuc2Zvcm1lci5qcz9lZjhjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgYm9sdF9wcm90b2NvbF92M190cmFuc2Zvcm1lcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2JvbHQtcHJvdG9jb2wtdjMudHJhbnNmb3JtZXJcIikpO1xuZXhwb3J0cy5kZWZhdWx0ID0gX19hc3NpZ24oe30sIGJvbHRfcHJvdG9jb2xfdjNfdHJhbnNmb3JtZXJfMS5kZWZhdWx0KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x0.transformer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x1.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x1.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar bolt_protocol_v4x0_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x0 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x0.js\"));\nvar request_message_1 = __importDefault(__webpack_require__(/*! ./request-message */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/request-message.js\"));\nvar stream_observers_1 = __webpack_require__(/*! ./stream-observers */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/stream-observers.js\");\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar bolt_protocol_util_1 = __webpack_require__(/*! ./bolt-protocol-util */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-util.js\");\nvar bolt_protocol_v4x1_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x1.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x1.transformer.js\"));\nvar transformer_1 = __importDefault(__webpack_require__(/*! ./transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/transformer.js\"));\nvar BOLT_PROTOCOL_V4_1 = neo4j_driver_core_1.internal.constants.BOLT_PROTOCOL_V4_1;\nvar BoltProtocol = /** @class */ (function (_super) {\n    __extends(BoltProtocol, _super);\n    /**\n     * @constructor\n     * @param {Object} server the server informatio.\n     * @param {Chunker} chunker the chunker.\n     * @param {Object} packstreamConfig Packstream configuration\n     * @param {boolean} packstreamConfig.disableLosslessIntegers if this connection should convert all received integers to native JS numbers.\n     * @param {boolean} packstreamConfig.useBigInt if this connection should convert all received integers to native BigInt numbers.\n     * @param {CreateResponseHandler} createResponseHandler Function which creates the response handler\n     * @param {Logger} log the logger\n     * @param {Object} serversideRouting\n     *\n     */\n    function BoltProtocol(server, chunker, packstreamConfig, createResponseHandler, log, onProtocolError, serversideRouting) {\n        if (createResponseHandler === void 0) { createResponseHandler = function () { return null; }; }\n        var _this = _super.call(this, server, chunker, packstreamConfig, createResponseHandler, log, onProtocolError) || this;\n        _this._serversideRouting = serversideRouting;\n        return _this;\n    }\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\n        get: function () {\n            return BOLT_PROTOCOL_V4_1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\n        get: function () {\n            var _this = this;\n            if (this._transformer === undefined) {\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v4x1_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\n            }\n            return this._transformer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BoltProtocol.prototype.initialize = function (_a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, userAgent = _b.userAgent, boltAgent = _b.boltAgent, authToken = _b.authToken, notificationFilter = _b.notificationFilter, onError = _b.onError, onComplete = _b.onComplete;\n        var observer = new stream_observers_1.LoginObserver({\n            onError: function (error) { return _this._onLoginError(error, onError); },\n            onCompleted: function (metadata) { return _this._onLoginCompleted(metadata, authToken, onComplete); }\n        });\n        // passing notification filter on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\n        this.write(request_message_1.default.hello(userAgent, authToken, this._serversideRouting), observer, true);\n        return observer;\n    };\n    return BoltProtocol;\n}(bolt_protocol_v4x0_1.default));\nexports[\"default\"] = BoltProtocol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x1.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x1.transformer.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x1.transformer.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar bolt_protocol_v4x0_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x0.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x0.transformer.js\"));\nexports[\"default\"] = __assign({}, bolt_protocol_v4x0_transformer_1.default);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9ib2x0LXByb3RvY29sLXY0eDEudHJhbnNmb3JtZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsT0FBTztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdURBQXVELG1CQUFPLENBQUMsc0lBQWtDO0FBQ2pHLGtCQUFlLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9ib2x0L2JvbHQtcHJvdG9jb2wtdjR4MS50cmFuc2Zvcm1lci5qcz84Y2U1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgYm9sdF9wcm90b2NvbF92NHgwX3RyYW5zZm9ybWVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vYm9sdC1wcm90b2NvbC12NHgwLnRyYW5zZm9ybWVyXCIpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9fYXNzaWduKHt9LCBib2x0X3Byb3RvY29sX3Y0eDBfdHJhbnNmb3JtZXJfMS5kZWZhdWx0KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x1.transformer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x2.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x2.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar bolt_protocol_v4x1_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x1 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x1.js\"));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar bolt_protocol_v4x2_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x2.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x2.transformer.js\"));\nvar transformer_1 = __importDefault(__webpack_require__(/*! ./transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/transformer.js\"));\nvar BOLT_PROTOCOL_V4_2 = neo4j_driver_core_1.internal.constants.BOLT_PROTOCOL_V4_2;\nvar BoltProtocol = /** @class */ (function (_super) {\n    __extends(BoltProtocol, _super);\n    function BoltProtocol() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\n        get: function () {\n            return BOLT_PROTOCOL_V4_2;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\n        get: function () {\n            var _this = this;\n            if (this._transformer === undefined) {\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v4x2_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\n            }\n            return this._transformer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return BoltProtocol;\n}(bolt_protocol_v4x1_1.default));\nexports[\"default\"] = BoltProtocol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9ib2x0LXByb3RvY29sLXY0eDIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ3ZGLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxtQkFBTyxDQUFDLDhHQUFzQjtBQUN6RSwwQkFBMEIsbUJBQU8sQ0FBQyw4RUFBbUI7QUFDckQsdURBQXVELG1CQUFPLENBQUMsc0lBQWtDO0FBQ2pHLG9DQUFvQyxtQkFBTyxDQUFDLGdHQUFlO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOElBQThJLDJDQUEyQztBQUN6TDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDO0FBQ0Qsa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9ib2x0L2JvbHQtcHJvdG9jb2wtdjR4Mi5qcz81ODJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qKlxuICogQ29weXJpZ2h0IChjKSBcIk5lbzRqXCJcbiAqIE5lbzRqIFN3ZWRlbiBBQiBbaHR0cHM6Ly9uZW80ai5jb21dXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgYm9sdF9wcm90b2NvbF92NHgxXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vYm9sdC1wcm90b2NvbC12NHgxXCIpKTtcbnZhciBuZW80al9kcml2ZXJfY29yZV8xID0gcmVxdWlyZShcIm5lbzRqLWRyaXZlci1jb3JlXCIpO1xudmFyIGJvbHRfcHJvdG9jb2xfdjR4Ml90cmFuc2Zvcm1lcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2JvbHQtcHJvdG9jb2wtdjR4Mi50cmFuc2Zvcm1lclwiKSk7XG52YXIgdHJhbnNmb3JtZXJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi90cmFuc2Zvcm1lclwiKSk7XG52YXIgQk9MVF9QUk9UT0NPTF9WNF8yID0gbmVvNGpfZHJpdmVyX2NvcmVfMS5pbnRlcm5hbC5jb25zdGFudHMuQk9MVF9QUk9UT0NPTF9WNF8yO1xudmFyIEJvbHRQcm90b2NvbCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoQm9sdFByb3RvY29sLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEJvbHRQcm90b2NvbCgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQm9sdFByb3RvY29sLnByb3RvdHlwZSwgXCJ2ZXJzaW9uXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gQk9MVF9QUk9UT0NPTF9WNF8yO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEJvbHRQcm90b2NvbC5wcm90b3R5cGUsIFwidHJhbnNmb3JtZXJcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgICAgICBpZiAodGhpcy5fdHJhbnNmb3JtZXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX3RyYW5zZm9ybWVyID0gbmV3IHRyYW5zZm9ybWVyXzEuZGVmYXVsdChPYmplY3QudmFsdWVzKGJvbHRfcHJvdG9jb2xfdjR4Ml90cmFuc2Zvcm1lcl8xLmRlZmF1bHQpLm1hcChmdW5jdGlvbiAoY3JlYXRlKSB7IHJldHVybiBjcmVhdGUoX3RoaXMuX2NvbmZpZywgX3RoaXMuX2xvZyk7IH0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLl90cmFuc2Zvcm1lcjtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIHJldHVybiBCb2x0UHJvdG9jb2w7XG59KGJvbHRfcHJvdG9jb2xfdjR4MV8xLmRlZmF1bHQpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IEJvbHRQcm90b2NvbDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x2.transformer.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x2.transformer.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar bolt_protocol_v4x1_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x1.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x1.transformer.js\"));\nexports[\"default\"] = __assign({}, bolt_protocol_v4x1_transformer_1.default);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9ib2x0LXByb3RvY29sLXY0eDIudHJhbnNmb3JtZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsT0FBTztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdURBQXVELG1CQUFPLENBQUMsc0lBQWtDO0FBQ2pHLGtCQUFlLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9ib2x0L2JvbHQtcHJvdG9jb2wtdjR4Mi50cmFuc2Zvcm1lci5qcz80M2VjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgYm9sdF9wcm90b2NvbF92NHgxX3RyYW5zZm9ybWVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vYm9sdC1wcm90b2NvbC12NHgxLnRyYW5zZm9ybWVyXCIpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9fYXNzaWduKHt9LCBib2x0X3Byb3RvY29sX3Y0eDFfdHJhbnNmb3JtZXJfMS5kZWZhdWx0KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x2.transformer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x3.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x3.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar bolt_protocol_v4x2_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x2 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x2.js\"));\nvar request_message_1 = __importDefault(__webpack_require__(/*! ./request-message */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/request-message.js\"));\nvar stream_observers_1 = __webpack_require__(/*! ./stream-observers */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/stream-observers.js\");\nvar bolt_protocol_util_1 = __webpack_require__(/*! ./bolt-protocol-util */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-util.js\");\nvar bolt_protocol_v4x3_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x3.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x3.transformer.js\"));\nvar bolt_protocol_v5x0_utc_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v5x0.utc.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x0.utc.transformer.js\"));\nvar transformer_1 = __importDefault(__webpack_require__(/*! ./transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/transformer.js\"));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar Bookmarks = neo4j_driver_core_1.internal.bookmarks.Bookmarks, BOLT_PROTOCOL_V4_3 = neo4j_driver_core_1.internal.constants.BOLT_PROTOCOL_V4_3;\nvar BoltProtocol = /** @class */ (function (_super) {\n    __extends(BoltProtocol, _super);\n    function BoltProtocol() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\n        get: function () {\n            return BOLT_PROTOCOL_V4_3;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\n        get: function () {\n            var _this = this;\n            if (this._transformer === undefined) {\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v4x3_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\n            }\n            return this._transformer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Request routing information\n     *\n     * @param {Object} param -\n     * @param {object} param.routingContext The routing context used to define the routing table.\n     *  Multi-datacenter deployments is one of its use cases\n     * @param {string} param.databaseName The database name\n     * @param {Bookmarks} params.sessionContext.bookmarks The bookmarks used for requesting the routing table\n     * @param {function(err: Error)} param.onError\n     * @param {function(RawRoutingTable)} param.onCompleted\n     * @returns {RouteObserver} the route observer\n     */\n    BoltProtocol.prototype.requestRoutingInformation = function (_a) {\n        var _b = _a.routingContext, routingContext = _b === void 0 ? {} : _b, _c = _a.databaseName, databaseName = _c === void 0 ? null : _c, _d = _a.sessionContext, sessionContext = _d === void 0 ? {} : _d, onError = _a.onError, onCompleted = _a.onCompleted;\n        var observer = new stream_observers_1.RouteObserver({\n            onProtocolError: this._onProtocolError,\n            onError: onError,\n            onCompleted: onCompleted\n        });\n        var bookmarks = sessionContext.bookmarks || Bookmarks.empty();\n        this.write(request_message_1.default.route(routingContext, bookmarks.values(), databaseName), observer, true);\n        return observer;\n    };\n    /**\n     * Initialize a connection with the server\n     *\n     * @param {Object} args The params\n     * @param {string} args.userAgent The user agent\n     * @param {any} args.authToken The auth token\n     * @param {NotificationFilter} args.notificationFilter The notification filter.\n     * @param {function(error)} args.onError On error callback\n     * @param {function(onComplte)} args.onComplete On complete callback\n     * @returns {LoginObserver} The Login observer\n     */\n    BoltProtocol.prototype.initialize = function (_a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, userAgent = _b.userAgent, boltAgent = _b.boltAgent, authToken = _b.authToken, notificationFilter = _b.notificationFilter, onError = _b.onError, onComplete = _b.onComplete;\n        var observer = new stream_observers_1.LoginObserver({\n            onError: function (error) { return _this._onLoginError(error, onError); },\n            onCompleted: function (metadata) {\n                if (metadata.patch_bolt !== undefined) {\n                    _this._applyPatches(metadata.patch_bolt);\n                }\n                return _this._onLoginCompleted(metadata, authToken, onComplete);\n            }\n        });\n        // passing notification filter on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\n        this.write(request_message_1.default.hello(userAgent, authToken, this._serversideRouting, ['utc']), observer, true);\n        return observer;\n    };\n    /**\n     *\n     * @param {string[]} patches Patches to be applied to the protocol\n     */\n    BoltProtocol.prototype._applyPatches = function (patches) {\n        if (patches.includes('utc')) {\n            this._applyUtcPatch();\n        }\n    };\n    BoltProtocol.prototype._applyUtcPatch = function () {\n        var _this = this;\n        this._transformer = new transformer_1.default(Object.values(__assign(__assign({}, bolt_protocol_v4x3_transformer_1.default), bolt_protocol_v5x0_utc_transformer_1.default)).map(function (create) { return create(_this._config, _this._log); }));\n    };\n    return BoltProtocol;\n}(bolt_protocol_v4x2_1.default));\nexports[\"default\"] = BoltProtocol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x3.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x3.transformer.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x3.transformer.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar bolt_protocol_v4x2_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x2.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x2.transformer.js\"));\nexports[\"default\"] = __assign({}, bolt_protocol_v4x2_transformer_1.default);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9ib2x0LXByb3RvY29sLXY0eDMudHJhbnNmb3JtZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsT0FBTztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdURBQXVELG1CQUFPLENBQUMsc0lBQWtDO0FBQ2pHLGtCQUFlLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9ib2x0L2JvbHQtcHJvdG9jb2wtdjR4My50cmFuc2Zvcm1lci5qcz80OWVkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgYm9sdF9wcm90b2NvbF92NHgyX3RyYW5zZm9ybWVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vYm9sdC1wcm90b2NvbC12NHgyLnRyYW5zZm9ybWVyXCIpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9fYXNzaWduKHt9LCBib2x0X3Byb3RvY29sX3Y0eDJfdHJhbnNmb3JtZXJfMS5kZWZhdWx0KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x3.transformer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x4.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x4.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar bolt_protocol_v4x3_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x3 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x3.js\"));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar request_message_1 = __importDefault(__webpack_require__(/*! ./request-message */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/request-message.js\"));\nvar stream_observers_1 = __webpack_require__(/*! ./stream-observers */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/stream-observers.js\");\nvar bolt_protocol_util_1 = __webpack_require__(/*! ./bolt-protocol-util */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-util.js\");\nvar bolt_protocol_v4x4_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x4.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x4.transformer.js\"));\nvar bolt_protocol_v5x0_utc_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v5x0.utc.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x0.utc.transformer.js\"));\nvar transformer_1 = __importDefault(__webpack_require__(/*! ./transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/transformer.js\"));\nvar _a = neo4j_driver_core_1.internal.constants, BOLT_PROTOCOL_V4_4 = _a.BOLT_PROTOCOL_V4_4, FETCH_ALL = _a.FETCH_ALL, Bookmarks = neo4j_driver_core_1.internal.bookmarks.Bookmarks;\nvar BoltProtocol = /** @class */ (function (_super) {\n    __extends(BoltProtocol, _super);\n    function BoltProtocol() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\n        get: function () {\n            return BOLT_PROTOCOL_V4_4;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\n        get: function () {\n            var _this = this;\n            if (this._transformer === undefined) {\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v4x4_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\n            }\n            return this._transformer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n    * Request routing information\n    *\n    * @param {Object} param -\n    * @param {object} param.routingContext The routing context used to define the routing table.\n    *  Multi-datacenter deployments is one of its use cases\n    * @param {string} param.databaseName The database name\n    * @param {Bookmarks} params.sessionContext.bookmarks The bookmarks used for requesting the routing table\n    * @param {function(err: Error)} param.onError\n    * @param {function(RawRoutingTable)} param.onCompleted\n    * @returns {RouteObserver} the route observer\n    */\n    BoltProtocol.prototype.requestRoutingInformation = function (_a) {\n        var _b = _a.routingContext, routingContext = _b === void 0 ? {} : _b, _c = _a.databaseName, databaseName = _c === void 0 ? null : _c, _d = _a.impersonatedUser, impersonatedUser = _d === void 0 ? null : _d, _e = _a.sessionContext, sessionContext = _e === void 0 ? {} : _e, onError = _a.onError, onCompleted = _a.onCompleted;\n        var observer = new stream_observers_1.RouteObserver({\n            onProtocolError: this._onProtocolError,\n            onError: onError,\n            onCompleted: onCompleted\n        });\n        var bookmarks = sessionContext.bookmarks || Bookmarks.empty();\n        this.write(request_message_1.default.routeV4x4(routingContext, bookmarks.values(), { databaseName: databaseName, impersonatedUser: impersonatedUser }), observer, true);\n        return observer;\n    };\n    BoltProtocol.prototype.run = function (query, parameters, _a) {\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, beforeKeys = _b.beforeKeys, afterKeys = _b.afterKeys, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete, _c = _b.flush, flush = _c === void 0 ? true : _c, _d = _b.reactive, reactive = _d === void 0 ? false : _d, _e = _b.fetchSize, fetchSize = _e === void 0 ? FETCH_ALL : _e, _f = _b.highRecordWatermark, highRecordWatermark = _f === void 0 ? Number.MAX_VALUE : _f, _g = _b.lowRecordWatermark, lowRecordWatermark = _g === void 0 ? Number.MAX_VALUE : _g;\n        var observer = new stream_observers_1.ResultStreamObserver({\n            server: this._server,\n            reactive: reactive,\n            fetchSize: fetchSize,\n            moreFunction: this._requestMore.bind(this),\n            discardFunction: this._requestDiscard.bind(this),\n            beforeKeys: beforeKeys,\n            afterKeys: afterKeys,\n            beforeError: beforeError,\n            afterError: afterError,\n            beforeComplete: beforeComplete,\n            afterComplete: afterComplete,\n            highRecordWatermark: highRecordWatermark,\n            lowRecordWatermark: lowRecordWatermark\n        });\n        // passing notification filter on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\n        var flushRun = reactive;\n        this.write(request_message_1.default.runWithMetadata(query, parameters, {\n            bookmarks: bookmarks,\n            txConfig: txConfig,\n            database: database,\n            mode: mode,\n            impersonatedUser: impersonatedUser\n        }), observer, flushRun && flush);\n        if (!reactive) {\n            this.write(request_message_1.default.pull({ n: fetchSize }), observer, flush);\n        }\n        return observer;\n    };\n    BoltProtocol.prototype.beginTransaction = function (_a) {\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\n        var observer = new stream_observers_1.ResultStreamObserver({\n            server: this._server,\n            beforeError: beforeError,\n            afterError: afterError,\n            beforeComplete: beforeComplete,\n            afterComplete: afterComplete\n        });\n        observer.prepareToHandleSingleResponse();\n        // passing notification filter on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\n        this.write(request_message_1.default.begin({ bookmarks: bookmarks, txConfig: txConfig, database: database, mode: mode, impersonatedUser: impersonatedUser }), observer, true);\n        return observer;\n    };\n    BoltProtocol.prototype._applyUtcPatch = function () {\n        var _this = this;\n        this._transformer = new transformer_1.default(Object.values(__assign(__assign({}, bolt_protocol_v4x4_transformer_1.default), bolt_protocol_v5x0_utc_transformer_1.default)).map(function (create) { return create(_this._config, _this._log); }));\n    };\n    return BoltProtocol;\n}(bolt_protocol_v4x3_1.default));\nexports[\"default\"] = BoltProtocol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x4.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x4.transformer.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x4.transformer.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar bolt_protocol_v4x3_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x3.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x3.transformer.js\"));\nexports[\"default\"] = __assign({}, bolt_protocol_v4x3_transformer_1.default);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9ib2x0LXByb3RvY29sLXY0eDQudHJhbnNmb3JtZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsT0FBTztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdURBQXVELG1CQUFPLENBQUMsc0lBQWtDO0FBQ2pHLGtCQUFlLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9ib2x0L2JvbHQtcHJvdG9jb2wtdjR4NC50cmFuc2Zvcm1lci5qcz8xMmQ5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgYm9sdF9wcm90b2NvbF92NHgzX3RyYW5zZm9ybWVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vYm9sdC1wcm90b2NvbC12NHgzLnRyYW5zZm9ybWVyXCIpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9fYXNzaWduKHt9LCBib2x0X3Byb3RvY29sX3Y0eDNfdHJhbnNmb3JtZXJfMS5kZWZhdWx0KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x4.transformer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x0.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x0.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar bolt_protocol_v4x4_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x4 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x4.js\"));\nvar bolt_protocol_util_1 = __webpack_require__(/*! ./bolt-protocol-util */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-util.js\");\nvar bolt_protocol_v5x0_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v5x0.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x0.transformer.js\"));\nvar transformer_1 = __importDefault(__webpack_require__(/*! ./transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/transformer.js\"));\nvar request_message_1 = __importDefault(__webpack_require__(/*! ./request-message */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/request-message.js\"));\nvar stream_observers_1 = __webpack_require__(/*! ./stream-observers */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/stream-observers.js\");\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar BOLT_PROTOCOL_V5_0 = neo4j_driver_core_1.internal.constants.BOLT_PROTOCOL_V5_0;\nvar BoltProtocol = /** @class */ (function (_super) {\n    __extends(BoltProtocol, _super);\n    function BoltProtocol() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\n        get: function () {\n            return BOLT_PROTOCOL_V5_0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\n        get: function () {\n            var _this = this;\n            if (this._transformer === undefined) {\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v5x0_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\n            }\n            return this._transformer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Initialize a connection with the server\n     *\n     * @param {Object} args The params\n     * @param {string} args.userAgent The user agent\n     * @param {any} args.authToken The auth token\n     * @param {NotificationFilter} args.notificationFilter The notification filter.\n     * @param {function(error)} args.onError On error callback\n     * @param {function(onComplte)} args.onComplete On complete callback\n     * @returns {LoginObserver} The Login observer\n     */\n    BoltProtocol.prototype.initialize = function (_a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, userAgent = _b.userAgent, boltAgent = _b.boltAgent, authToken = _b.authToken, notificationFilter = _b.notificationFilter, onError = _b.onError, onComplete = _b.onComplete;\n        var observer = new stream_observers_1.LoginObserver({\n            onError: function (error) { return _this._onLoginError(error, onError); },\n            onCompleted: function (metadata) { return _this._onLoginCompleted(metadata, authToken, onComplete); }\n        });\n        // passing notification filter on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\n        this.write(request_message_1.default.hello(userAgent, authToken, this._serversideRouting), observer, true);\n        return observer;\n    };\n    return BoltProtocol;\n}(bolt_protocol_v4x4_1.default));\nexports[\"default\"] = BoltProtocol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9ib2x0LXByb3RvY29sLXY1eDAuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ3ZGLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxtQkFBTyxDQUFDLDhHQUFzQjtBQUN6RSwyQkFBMkIsbUJBQU8sQ0FBQyw4R0FBc0I7QUFDekQsdURBQXVELG1CQUFPLENBQUMsc0lBQWtDO0FBQ2pHLG9DQUFvQyxtQkFBTyxDQUFDLGdHQUFlO0FBQzNELHdDQUF3QyxtQkFBTyxDQUFDLHdHQUFtQjtBQUNuRSx5QkFBeUIsbUJBQU8sQ0FBQywwR0FBb0I7QUFDckQsMEJBQTBCLG1CQUFPLENBQUMsOEVBQW1CO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOElBQThJLDJDQUEyQztBQUN6TDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixlQUFlLEtBQUs7QUFDcEIsZUFBZSxvQkFBb0I7QUFDbkMsZUFBZSxpQkFBaUI7QUFDaEMsZUFBZSxxQkFBcUI7QUFDcEMsaUJBQWlCLGVBQWU7QUFDaEM7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0Esd0NBQXdDLDZDQUE2QztBQUNyRiwrQ0FBK0M7QUFDL0MsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL25lbzRqLW5leHQtYXBwLy4vbm9kZV9tb2R1bGVzL25lbzRqLWRyaXZlci1ib2x0LWNvbm5lY3Rpb24vbGliL2JvbHQvYm9sdC1wcm90b2NvbC12NXgwLmpzP2Y0YmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBib2x0X3Byb3RvY29sX3Y0eDRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9ib2x0LXByb3RvY29sLXY0eDRcIikpO1xudmFyIGJvbHRfcHJvdG9jb2xfdXRpbF8xID0gcmVxdWlyZShcIi4vYm9sdC1wcm90b2NvbC11dGlsXCIpO1xudmFyIGJvbHRfcHJvdG9jb2xfdjV4MF90cmFuc2Zvcm1lcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2JvbHQtcHJvdG9jb2wtdjV4MC50cmFuc2Zvcm1lclwiKSk7XG52YXIgdHJhbnNmb3JtZXJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi90cmFuc2Zvcm1lclwiKSk7XG52YXIgcmVxdWVzdF9tZXNzYWdlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vcmVxdWVzdC1tZXNzYWdlXCIpKTtcbnZhciBzdHJlYW1fb2JzZXJ2ZXJzXzEgPSByZXF1aXJlKFwiLi9zdHJlYW0tb2JzZXJ2ZXJzXCIpO1xudmFyIG5lbzRqX2RyaXZlcl9jb3JlXzEgPSByZXF1aXJlKFwibmVvNGotZHJpdmVyLWNvcmVcIik7XG52YXIgQk9MVF9QUk9UT0NPTF9WNV8wID0gbmVvNGpfZHJpdmVyX2NvcmVfMS5pbnRlcm5hbC5jb25zdGFudHMuQk9MVF9QUk9UT0NPTF9WNV8wO1xudmFyIEJvbHRQcm90b2NvbCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoQm9sdFByb3RvY29sLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEJvbHRQcm90b2NvbCgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQm9sdFByb3RvY29sLnByb3RvdHlwZSwgXCJ2ZXJzaW9uXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gQk9MVF9QUk9UT0NPTF9WNV8wO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEJvbHRQcm90b2NvbC5wcm90b3R5cGUsIFwidHJhbnNmb3JtZXJcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgICAgICBpZiAodGhpcy5fdHJhbnNmb3JtZXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX3RyYW5zZm9ybWVyID0gbmV3IHRyYW5zZm9ybWVyXzEuZGVmYXVsdChPYmplY3QudmFsdWVzKGJvbHRfcHJvdG9jb2xfdjV4MF90cmFuc2Zvcm1lcl8xLmRlZmF1bHQpLm1hcChmdW5jdGlvbiAoY3JlYXRlKSB7IHJldHVybiBjcmVhdGUoX3RoaXMuX2NvbmZpZywgX3RoaXMuX2xvZyk7IH0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLl90cmFuc2Zvcm1lcjtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIEluaXRpYWxpemUgYSBjb25uZWN0aW9uIHdpdGggdGhlIHNlcnZlclxuICAgICAqXG4gICAgICogQHBhcmFtIHtPYmplY3R9IGFyZ3MgVGhlIHBhcmFtc1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBhcmdzLnVzZXJBZ2VudCBUaGUgdXNlciBhZ2VudFxuICAgICAqIEBwYXJhbSB7YW55fSBhcmdzLmF1dGhUb2tlbiBUaGUgYXV0aCB0b2tlblxuICAgICAqIEBwYXJhbSB7Tm90aWZpY2F0aW9uRmlsdGVyfSBhcmdzLm5vdGlmaWNhdGlvbkZpbHRlciBUaGUgbm90aWZpY2F0aW9uIGZpbHRlci5cbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9uKGVycm9yKX0gYXJncy5vbkVycm9yIE9uIGVycm9yIGNhbGxiYWNrXG4gICAgICogQHBhcmFtIHtmdW5jdGlvbihvbkNvbXBsdGUpfSBhcmdzLm9uQ29tcGxldGUgT24gY29tcGxldGUgY2FsbGJhY2tcbiAgICAgKiBAcmV0dXJucyB7TG9naW5PYnNlcnZlcn0gVGhlIExvZ2luIG9ic2VydmVyXG4gICAgICovXG4gICAgQm9sdFByb3RvY29sLnByb3RvdHlwZS5pbml0aWFsaXplID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciBfYiA9IF9hID09PSB2b2lkIDAgPyB7fSA6IF9hLCB1c2VyQWdlbnQgPSBfYi51c2VyQWdlbnQsIGJvbHRBZ2VudCA9IF9iLmJvbHRBZ2VudCwgYXV0aFRva2VuID0gX2IuYXV0aFRva2VuLCBub3RpZmljYXRpb25GaWx0ZXIgPSBfYi5ub3RpZmljYXRpb25GaWx0ZXIsIG9uRXJyb3IgPSBfYi5vbkVycm9yLCBvbkNvbXBsZXRlID0gX2Iub25Db21wbGV0ZTtcbiAgICAgICAgdmFyIG9ic2VydmVyID0gbmV3IHN0cmVhbV9vYnNlcnZlcnNfMS5Mb2dpbk9ic2VydmVyKHtcbiAgICAgICAgICAgIG9uRXJyb3I6IGZ1bmN0aW9uIChlcnJvcikgeyByZXR1cm4gX3RoaXMuX29uTG9naW5FcnJvcihlcnJvciwgb25FcnJvcik7IH0sXG4gICAgICAgICAgICBvbkNvbXBsZXRlZDogZnVuY3Rpb24gKG1ldGFkYXRhKSB7IHJldHVybiBfdGhpcy5fb25Mb2dpbkNvbXBsZXRlZChtZXRhZGF0YSwgYXV0aFRva2VuLCBvbkNvbXBsZXRlKTsgfVxuICAgICAgICB9KTtcbiAgICAgICAgLy8gcGFzc2luZyBub3RpZmljYXRpb24gZmlsdGVyIG9uIHRoaXMgcHJvdG9jb2wgdmVyc2lvbiB0aHJvd3MgYW4gZXJyb3JcbiAgICAgICAgKDAsIGJvbHRfcHJvdG9jb2xfdXRpbF8xLmFzc2VydE5vdGlmaWNhdGlvbkZpbHRlcklzRW1wdHkpKG5vdGlmaWNhdGlvbkZpbHRlciwgdGhpcy5fb25Qcm90b2NvbEVycm9yLCBvYnNlcnZlcik7XG4gICAgICAgIHRoaXMud3JpdGUocmVxdWVzdF9tZXNzYWdlXzEuZGVmYXVsdC5oZWxsbyh1c2VyQWdlbnQsIGF1dGhUb2tlbiwgdGhpcy5fc2VydmVyc2lkZVJvdXRpbmcpLCBvYnNlcnZlciwgdHJ1ZSk7XG4gICAgICAgIHJldHVybiBvYnNlcnZlcjtcbiAgICB9O1xuICAgIHJldHVybiBCb2x0UHJvdG9jb2w7XG59KGJvbHRfcHJvdG9jb2xfdjR4NF8xLmRlZmF1bHQpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IEJvbHRQcm90b2NvbDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x0.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x0.transformer.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x0.transformer.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar packstream_1 = __webpack_require__(/*! ../packstream */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/packstream/index.js\");\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar bolt_protocol_v4x4_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x4.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x4.transformer.js\"));\nvar bolt_protocol_v5x0_utc_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v5x0.utc.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x0.utc.transformer.js\"));\nvar NODE_STRUCT_SIZE = 4;\nvar RELATIONSHIP_STRUCT_SIZE = 8;\nvar UNBOUND_RELATIONSHIP_STRUCT_SIZE = 4;\n/**\n * Create an extend Node transformer with support to elementId\n * @param {any} config\n * @returns {TypeTransformer}\n */\nfunction createNodeTransformer(config) {\n    var node4x4Transformer = bolt_protocol_v4x4_transformer_1.default.createNodeTransformer(config);\n    return node4x4Transformer.extendsWith({\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('Node', NODE_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 4), identity = _a[0], lables = _a[1], properties = _a[2], elementId = _a[3];\n            return new neo4j_driver_core_1.Node(identity, lables, properties, elementId);\n        }\n    });\n}\n/**\n * Create an extend Relationship transformer with support to elementId\n * @param {any} config\n * @returns {TypeTransformer}\n */\nfunction createRelationshipTransformer(config) {\n    var relationship4x4Transformer = bolt_protocol_v4x4_transformer_1.default.createRelationshipTransformer(config);\n    return relationship4x4Transformer.extendsWith({\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('Relationship', RELATIONSHIP_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 8), identity = _a[0], startNodeIdentity = _a[1], endNodeIdentity = _a[2], type = _a[3], properties = _a[4], elementId = _a[5], startNodeElementId = _a[6], endNodeElementId = _a[7];\n            return new neo4j_driver_core_1.Relationship(identity, startNodeIdentity, endNodeIdentity, type, properties, elementId, startNodeElementId, endNodeElementId);\n        }\n    });\n}\n/**\n * Create an extend Unbound Relationship transformer with support to elementId\n * @param {any} config\n * @returns {TypeTransformer}\n */\nfunction createUnboundRelationshipTransformer(config) {\n    var unboundRelationshipTransformer = bolt_protocol_v4x4_transformer_1.default.createUnboundRelationshipTransformer(config);\n    return unboundRelationshipTransformer.extendsWith({\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('UnboundRelationship', UNBOUND_RELATIONSHIP_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 4), identity = _a[0], type = _a[1], properties = _a[2], elementId = _a[3];\n            return new neo4j_driver_core_1.UnboundRelationship(identity, type, properties, elementId);\n        }\n    });\n}\nexports[\"default\"] = __assign(__assign(__assign({}, bolt_protocol_v4x4_transformer_1.default), bolt_protocol_v5x0_utc_transformer_1.default), { createNodeTransformer: createNodeTransformer, createRelationshipTransformer: createRelationshipTransformer, createUnboundRelationshipTransformer: createUnboundRelationshipTransformer });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x0.transformer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x0.utc.transformer.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x0.utc.transformer.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar packstream_1 = __webpack_require__(/*! ../packstream */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/packstream/index.js\");\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar bolt_protocol_v4x4_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x4.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x4.transformer.js\"));\nvar temporal_factory_1 = __webpack_require__(/*! ./temporal-factory */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/temporal-factory.js\");\nvar functional_1 = __webpack_require__(/*! ../lang/functional */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/lang/functional.js\");\nvar localDateTimeToEpochSecond = neo4j_driver_core_1.internal.temporalUtil.localDateTimeToEpochSecond;\nvar DATE_TIME_WITH_ZONE_OFFSET = 0x49;\nvar DATE_TIME_WITH_ZONE_OFFSET_STRUCT_SIZE = 3;\nvar DATE_TIME_WITH_ZONE_ID = 0x69;\nvar DATE_TIME_WITH_ZONE_ID_STRUCT_SIZE = 3;\nfunction createDateTimeWithZoneIdTransformer(config, logger) {\n    var disableLosslessIntegers = config.disableLosslessIntegers, useBigInt = config.useBigInt;\n    var dateTimeWithZoneIdTransformer = bolt_protocol_v4x4_transformer_1.default.createDateTimeWithZoneIdTransformer(config);\n    return dateTimeWithZoneIdTransformer.extendsWith({\n        signature: DATE_TIME_WITH_ZONE_ID,\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('DateTimeWithZoneId', DATE_TIME_WITH_ZONE_ID_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 3), epochSecond = _a[0], nano = _a[1], timeZoneId = _a[2];\n            var localDateTime = getTimeInZoneId(timeZoneId, epochSecond, nano);\n            var result = new neo4j_driver_core_1.DateTime(localDateTime.year, localDateTime.month, localDateTime.day, localDateTime.hour, localDateTime.minute, localDateTime.second, (0, neo4j_driver_core_1.int)(nano), localDateTime.timeZoneOffsetSeconds, timeZoneId);\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n        },\n        toStructure: function (value) {\n            var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\n            var offset = value.timeZoneOffsetSeconds != null\n                ? value.timeZoneOffsetSeconds\n                : getOffsetFromZoneId(value.timeZoneId, epochSecond, value.nanosecond);\n            if (value.timeZoneOffsetSeconds == null) {\n                logger.warn('DateTime objects without \"timeZoneOffsetSeconds\" property ' +\n                    'are prune to bugs related to ambiguous times. For instance, ' +\n                    '2022-10-30T2:30:00[Europe/Berlin] could be GMT+1 or GMT+2.');\n            }\n            var utc = epochSecond.subtract(offset);\n            var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\n            var timeZoneId = value.timeZoneId;\n            return new packstream_1.structure.Structure(DATE_TIME_WITH_ZONE_ID, [utc, nano, timeZoneId]);\n        }\n    });\n}\n/**\n * Returns the offset for a given timezone id\n *\n * Javascript doesn't have support for direct getting the timezone offset from a given\n * TimeZoneId and DateTime in the given TimeZoneId. For solving this issue,\n *\n * 1. The ZoneId is applied to the timestamp, so we could make the difference between the\n * given timestamp and the new calculated one. This is the offset for the timezone\n * in the utc is equal to epoch (some time in the future or past)\n * 2. The offset is subtracted from the timestamp, so we have an estimated utc timestamp.\n * 3. The ZoneId is applied to the new timestamp, se we could could make the difference\n * between the new timestamp and the calculated one. This is the offset for the given timezone.\n *\n * Example:\n *    Input: 2022-3-27 1:59:59 'Europe/Berlin'\n *    Apply 1, 2022-3-27 1:59:59 => 2022-3-27 3:59:59 'Europe/Berlin' +2:00\n *    Apply 2, 2022-3-27 1:59:59 - 2:00 => 2022-3-26 23:59:59\n *    Apply 3, 2022-3-26 23:59:59 => 2022-3-27 00:59:59 'Europe/Berlin' +1:00\n *  The offset is +1 hour.\n *\n * @param {string} timeZoneId The timezone id\n * @param {Integer} epochSecond The epoch second in the timezone id\n * @param {Integerable} nanosecond The nanoseconds in the timezone id\n * @returns The timezone offset\n */\nfunction getOffsetFromZoneId(timeZoneId, epochSecond, nanosecond) {\n    var dateTimeWithZoneAppliedTwice = getTimeInZoneId(timeZoneId, epochSecond, nanosecond);\n    // The wallclock form the current date time\n    var epochWithZoneAppliedTwice = localDateTimeToEpochSecond(dateTimeWithZoneAppliedTwice.year, dateTimeWithZoneAppliedTwice.month, dateTimeWithZoneAppliedTwice.day, dateTimeWithZoneAppliedTwice.hour, dateTimeWithZoneAppliedTwice.minute, dateTimeWithZoneAppliedTwice.second, nanosecond);\n    var offsetOfZoneInTheFutureUtc = epochWithZoneAppliedTwice.subtract(epochSecond);\n    var guessedUtc = epochSecond.subtract(offsetOfZoneInTheFutureUtc);\n    var zonedDateTimeFromGuessedUtc = getTimeInZoneId(timeZoneId, guessedUtc, nanosecond);\n    var zonedEpochFromGuessedUtc = localDateTimeToEpochSecond(zonedDateTimeFromGuessedUtc.year, zonedDateTimeFromGuessedUtc.month, zonedDateTimeFromGuessedUtc.day, zonedDateTimeFromGuessedUtc.hour, zonedDateTimeFromGuessedUtc.minute, zonedDateTimeFromGuessedUtc.second, nanosecond);\n    var offset = zonedEpochFromGuessedUtc.subtract(guessedUtc);\n    return offset;\n}\nvar dateTimeFormatCache = new Map();\nfunction getDateTimeFormatForZoneId(timeZoneId) {\n    if (!dateTimeFormatCache.has(timeZoneId)) {\n        var formatter = new Intl.DateTimeFormat('en-US', {\n            timeZone: timeZoneId,\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n            hour12: false,\n            era: 'narrow'\n        });\n        dateTimeFormatCache.set(timeZoneId, formatter);\n    }\n    return dateTimeFormatCache.get(timeZoneId);\n}\nfunction getTimeInZoneId(timeZoneId, epochSecond, nano) {\n    var formatter = getDateTimeFormatForZoneId(timeZoneId);\n    var utc = (0, neo4j_driver_core_1.int)(epochSecond)\n        .multiply(1000)\n        .add((0, neo4j_driver_core_1.int)(nano).div(1000000))\n        .toNumber();\n    var formattedUtcParts = formatter.formatToParts(utc);\n    var localDateTime = formattedUtcParts.reduce(function (obj, currentValue) {\n        if (currentValue.type === 'era') {\n            obj.adjustEra =\n                currentValue.value.toUpperCase() === 'B'\n                    ? function (year) { return year.subtract(1).negate(); } // 1BC equals to year 0 in astronomical year numbering\n                    : functional_1.identity;\n        }\n        else if (currentValue.type === 'hour') {\n            obj.hour = (0, neo4j_driver_core_1.int)(currentValue.value).modulo(24);\n        }\n        else if (currentValue.type !== 'literal') {\n            obj[currentValue.type] = (0, neo4j_driver_core_1.int)(currentValue.value);\n        }\n        return obj;\n    }, {});\n    localDateTime.year = localDateTime.adjustEra(localDateTime.year);\n    var epochInTimeZone = localDateTimeToEpochSecond(localDateTime.year, localDateTime.month, localDateTime.day, localDateTime.hour, localDateTime.minute, localDateTime.second, localDateTime.nanosecond);\n    localDateTime.timeZoneOffsetSeconds = epochInTimeZone.subtract(epochSecond);\n    localDateTime.hour = localDateTime.hour.modulo(24);\n    return localDateTime;\n}\nfunction createDateTimeWithOffsetTransformer(config) {\n    var disableLosslessIntegers = config.disableLosslessIntegers, useBigInt = config.useBigInt;\n    var dateTimeWithOffsetTransformer = bolt_protocol_v4x4_transformer_1.default.createDateTimeWithOffsetTransformer(config);\n    return dateTimeWithOffsetTransformer.extendsWith({\n        signature: DATE_TIME_WITH_ZONE_OFFSET,\n        toStructure: function (value) {\n            var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\n            var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\n            var timeZoneOffsetSeconds = (0, neo4j_driver_core_1.int)(value.timeZoneOffsetSeconds);\n            var utcSecond = epochSecond.subtract(timeZoneOffsetSeconds);\n            return new packstream_1.structure.Structure(DATE_TIME_WITH_ZONE_OFFSET, [utcSecond, nano, timeZoneOffsetSeconds]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('DateTimeWithZoneOffset', DATE_TIME_WITH_ZONE_OFFSET_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 3), utcSecond = _a[0], nano = _a[1], timeZoneOffsetSeconds = _a[2];\n            var epochSecond = (0, neo4j_driver_core_1.int)(utcSecond).add(timeZoneOffsetSeconds);\n            var localDateTime = (0, temporal_factory_1.epochSecondAndNanoToLocalDateTime)(epochSecond, nano);\n            var result = new neo4j_driver_core_1.DateTime(localDateTime.year, localDateTime.month, localDateTime.day, localDateTime.hour, localDateTime.minute, localDateTime.second, localDateTime.nanosecond, timeZoneOffsetSeconds, null);\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n        }\n    });\n}\nfunction convertIntegerPropsIfNeeded(obj, disableLosslessIntegers, useBigInt) {\n    if (!disableLosslessIntegers && !useBigInt) {\n        return obj;\n    }\n    var convert = function (value) {\n        return useBigInt ? value.toBigInt() : value.toNumberOrInfinity();\n    };\n    var clone = Object.create(Object.getPrototypeOf(obj));\n    for (var prop in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, prop) === true) {\n            var value = obj[prop];\n            clone[prop] = (0, neo4j_driver_core_1.isInt)(value) ? convert(value) : value;\n        }\n    }\n    Object.freeze(clone);\n    return clone;\n}\nexports[\"default\"] = {\n    createDateTimeWithZoneIdTransformer: createDateTimeWithZoneIdTransformer,\n    createDateTimeWithOffsetTransformer: createDateTimeWithOffsetTransformer\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x0.utc.transformer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x1.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x1.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar bolt_protocol_v5x0_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v5x0 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x0.js\"));\nvar bolt_protocol_util_1 = __webpack_require__(/*! ./bolt-protocol-util */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-util.js\");\nvar bolt_protocol_v5x1_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v5x1.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x1.transformer.js\"));\nvar transformer_1 = __importDefault(__webpack_require__(/*! ./transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/transformer.js\"));\nvar request_message_1 = __importDefault(__webpack_require__(/*! ./request-message */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/request-message.js\"));\nvar stream_observers_1 = __webpack_require__(/*! ./stream-observers */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/stream-observers.js\");\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar BOLT_PROTOCOL_V5_1 = neo4j_driver_core_1.internal.constants.BOLT_PROTOCOL_V5_1;\nvar BoltProtocol = /** @class */ (function (_super) {\n    __extends(BoltProtocol, _super);\n    function BoltProtocol() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\n        get: function () {\n            return BOLT_PROTOCOL_V5_1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\n        get: function () {\n            var _this = this;\n            if (this._transformer === undefined) {\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v5x1_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\n            }\n            return this._transformer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"supportsReAuth\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Initialize a connection with the server\n     *\n     * @param {Object} args The params\n     * @param {string} args.userAgent The user agent\n     * @param {any} args.authToken The auth token\n     * @param {NotificationFilter} args.notificationFilter The notification filters.\n     * @param {function(error)} args.onError On error callback\n     * @param {function(onComplete)} args.onComplete On complete callback\n     * @returns {LoginObserver} The Login observer\n     */\n    BoltProtocol.prototype.initialize = function (_a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, userAgent = _b.userAgent, boltAgent = _b.boltAgent, authToken = _b.authToken, notificationFilter = _b.notificationFilter, onError = _b.onError, onComplete = _b.onComplete;\n        var state = {};\n        var observer = new stream_observers_1.LoginObserver({\n            onError: function (error) { return _this._onLoginError(error, onError); },\n            onCompleted: function (metadata) {\n                state.metadata = metadata;\n                return _this._onLoginCompleted(metadata);\n            }\n        });\n        // passing notification filter on this protocol version throws an error\n        (0, bolt_protocol_util_1.assertNotificationFilterIsEmpty)(notificationFilter, this._onProtocolError, observer);\n        this.write(request_message_1.default.hello5x1(userAgent, this._serversideRouting), observer, false);\n        return this.logon({\n            authToken: authToken,\n            onComplete: function (metadata) { return onComplete(__assign(__assign({}, metadata), state.metadata)); },\n            onError: onError,\n            flush: true\n        });\n    };\n    /**\n     * Performs login of the underlying connection\n     *\n     * @param {Object} args\n     * @param {Object} args.authToken the authentication token.\n     * @param {function(err: Error)} args.onError the callback to invoke on error.\n     * @param {function()} args.onComplete the callback to invoke on completion.\n     * @param {boolean} args.flush whether to flush the buffered messages.\n     *\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n     */\n    BoltProtocol.prototype.logon = function (_a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, authToken = _b.authToken, onComplete = _b.onComplete, onError = _b.onError, flush = _b.flush;\n        var observer = new stream_observers_1.LoginObserver({\n            onCompleted: function () { return _this._onLoginCompleted(null, authToken, onComplete); },\n            onError: function (error) { return _this._onLoginError(error, onError); }\n        });\n        this.write(request_message_1.default.logon(authToken), observer, flush);\n        return observer;\n    };\n    /**\n     * Performs logoff of the underlying connection\n     *\n     * @param {Object} param\n     * @param {function(err: Error)} param.onError the callback to invoke on error.\n     * @param {function()} param.onComplete the callback to invoke on completion.\n     * @param {boolean} param.flush whether to flush the buffered messages.\n     *\n     * @returns {StreamObserver} the stream observer that monitors the corresponding server response.\n    */\n    BoltProtocol.prototype.logoff = function (_a) {\n        var _b = _a === void 0 ? {} : _a, onComplete = _b.onComplete, onError = _b.onError, flush = _b.flush;\n        var observer = new stream_observers_1.LogoffObserver({\n            onCompleted: onComplete,\n            onError: onError\n        });\n        this.write(request_message_1.default.logoff(), observer, flush);\n        return observer;\n    };\n    return BoltProtocol;\n}(bolt_protocol_v5x0_1.default));\nexports[\"default\"] = BoltProtocol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x1.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x1.transformer.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x1.transformer.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar bolt_protocol_v5x0_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v5x0.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x0.transformer.js\"));\nexports[\"default\"] = __assign({}, bolt_protocol_v5x0_transformer_1.default);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9ib2x0LXByb3RvY29sLXY1eDEudHJhbnNmb3JtZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsT0FBTztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdURBQXVELG1CQUFPLENBQUMsc0lBQWtDO0FBQ2pHLGtCQUFlLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9ib2x0L2JvbHQtcHJvdG9jb2wtdjV4MS50cmFuc2Zvcm1lci5qcz82YjVlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgYm9sdF9wcm90b2NvbF92NXgwX3RyYW5zZm9ybWVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vYm9sdC1wcm90b2NvbC12NXgwLnRyYW5zZm9ybWVyXCIpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9fYXNzaWduKHt9LCBib2x0X3Byb3RvY29sX3Y1eDBfdHJhbnNmb3JtZXJfMS5kZWZhdWx0KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x1.transformer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x2.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x2.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar bolt_protocol_v5x1_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v5x1 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x1.js\"));\nvar bolt_protocol_v5x2_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v5x2.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x2.transformer.js\"));\nvar transformer_1 = __importDefault(__webpack_require__(/*! ./transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/transformer.js\"));\nvar request_message_1 = __importDefault(__webpack_require__(/*! ./request-message */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/request-message.js\"));\nvar stream_observers_1 = __webpack_require__(/*! ./stream-observers */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/stream-observers.js\");\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar _a = neo4j_driver_core_1.internal.constants, BOLT_PROTOCOL_V5_2 = _a.BOLT_PROTOCOL_V5_2, FETCH_ALL = _a.FETCH_ALL;\nvar BoltProtocol = /** @class */ (function (_super) {\n    __extends(BoltProtocol, _super);\n    function BoltProtocol() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\n        get: function () {\n            return BOLT_PROTOCOL_V5_2;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\n        get: function () {\n            var _this = this;\n            if (this._transformer === undefined) {\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v5x2_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\n            }\n            return this._transformer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"supportsReAuth\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Initialize a connection with the server\n     *\n     * @param {Object} args The params\n     * @param {string} args.userAgent The user agent\n     * @param {string} args.boltAgent The bolt agent\n     * @param {any} args.authToken The auth token\n     * @param {NotificationFilter} args.notificationFilter The notification filters.\n     * @param {function(error)} args.onError On error callback\n     * @param {function(onComplete)} args.onComplete On complete callback\n     * @returns {LoginObserver} The Login observer\n     */\n    BoltProtocol.prototype.initialize = function (_a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, userAgent = _b.userAgent, boltAgent = _b.boltAgent, authToken = _b.authToken, notificationFilter = _b.notificationFilter, onError = _b.onError, onComplete = _b.onComplete;\n        var state = {};\n        var observer = new stream_observers_1.LoginObserver({\n            onError: function (error) { return _this._onLoginError(error, onError); },\n            onCompleted: function (metadata) {\n                state.metadata = metadata;\n                return _this._onLoginCompleted(metadata);\n            }\n        });\n        this.write(\n        // if useragent is null then for all versions before 5.3 it should be bolt agent by default\n        request_message_1.default.hello5x2(userAgent, notificationFilter, this._serversideRouting), observer, false);\n        return this.logon({\n            authToken: authToken,\n            onComplete: function (metadata) { return onComplete(__assign(__assign({}, metadata), state.metadata)); },\n            onError: onError,\n            flush: true\n        });\n    };\n    BoltProtocol.prototype.beginTransaction = function (_a) {\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete;\n        var observer = new stream_observers_1.ResultStreamObserver({\n            server: this._server,\n            beforeError: beforeError,\n            afterError: afterError,\n            beforeComplete: beforeComplete,\n            afterComplete: afterComplete\n        });\n        observer.prepareToHandleSingleResponse();\n        this.write(request_message_1.default.begin({ bookmarks: bookmarks, txConfig: txConfig, database: database, mode: mode, impersonatedUser: impersonatedUser, notificationFilter: notificationFilter }), observer, true);\n        return observer;\n    };\n    BoltProtocol.prototype.run = function (query, parameters, _a) {\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter, beforeKeys = _b.beforeKeys, afterKeys = _b.afterKeys, beforeError = _b.beforeError, afterError = _b.afterError, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete, _c = _b.flush, flush = _c === void 0 ? true : _c, _d = _b.reactive, reactive = _d === void 0 ? false : _d, _e = _b.fetchSize, fetchSize = _e === void 0 ? FETCH_ALL : _e, _f = _b.highRecordWatermark, highRecordWatermark = _f === void 0 ? Number.MAX_VALUE : _f, _g = _b.lowRecordWatermark, lowRecordWatermark = _g === void 0 ? Number.MAX_VALUE : _g;\n        var observer = new stream_observers_1.ResultStreamObserver({\n            server: this._server,\n            reactive: reactive,\n            fetchSize: fetchSize,\n            moreFunction: this._requestMore.bind(this),\n            discardFunction: this._requestDiscard.bind(this),\n            beforeKeys: beforeKeys,\n            afterKeys: afterKeys,\n            beforeError: beforeError,\n            afterError: afterError,\n            beforeComplete: beforeComplete,\n            afterComplete: afterComplete,\n            highRecordWatermark: highRecordWatermark,\n            lowRecordWatermark: lowRecordWatermark\n        });\n        var flushRun = reactive;\n        this.write(request_message_1.default.runWithMetadata(query, parameters, {\n            bookmarks: bookmarks,\n            txConfig: txConfig,\n            database: database,\n            mode: mode,\n            impersonatedUser: impersonatedUser,\n            notificationFilter: notificationFilter\n        }), observer, flushRun && flush);\n        if (!reactive) {\n            this.write(request_message_1.default.pull({ n: fetchSize }), observer, flush);\n        }\n        return observer;\n    };\n    return BoltProtocol;\n}(bolt_protocol_v5x1_1.default));\nexports[\"default\"] = BoltProtocol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x2.transformer.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x2.transformer.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar bolt_protocol_v5x1_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v5x1.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x1.transformer.js\"));\nexports[\"default\"] = __assign({}, bolt_protocol_v5x1_transformer_1.default);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9ib2x0LXByb3RvY29sLXY1eDIudHJhbnNmb3JtZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsT0FBTztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdURBQXVELG1CQUFPLENBQUMsc0lBQWtDO0FBQ2pHLGtCQUFlLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9ib2x0L2JvbHQtcHJvdG9jb2wtdjV4Mi50cmFuc2Zvcm1lci5qcz9iOWM4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgYm9sdF9wcm90b2NvbF92NXgxX3RyYW5zZm9ybWVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vYm9sdC1wcm90b2NvbC12NXgxLnRyYW5zZm9ybWVyXCIpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9fYXNzaWduKHt9LCBib2x0X3Byb3RvY29sX3Y1eDFfdHJhbnNmb3JtZXJfMS5kZWZhdWx0KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x2.transformer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x3.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x3.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar bolt_protocol_v5x2_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v5x2 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x2.js\"));\nvar bolt_protocol_v5x3_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v5x3.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x3.transformer.js\"));\nvar transformer_1 = __importDefault(__webpack_require__(/*! ./transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/transformer.js\"));\nvar request_message_1 = __importDefault(__webpack_require__(/*! ./request-message */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/request-message.js\"));\nvar stream_observers_1 = __webpack_require__(/*! ./stream-observers */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/stream-observers.js\");\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar BOLT_PROTOCOL_V5_3 = neo4j_driver_core_1.internal.constants.BOLT_PROTOCOL_V5_3;\nvar BoltProtocol = /** @class */ (function (_super) {\n    __extends(BoltProtocol, _super);\n    function BoltProtocol() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\n        get: function () {\n            return BOLT_PROTOCOL_V5_3;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\n        get: function () {\n            var _this = this;\n            if (this._transformer === undefined) {\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v5x3_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\n            }\n            return this._transformer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Initialize a connection with the server\n     *\n     * @param {Object} args The params\n     * @param {string} args.userAgent The user agent\n     * @param {any} args.authToken The auth token\n     * @param {NotificationFilter} args.notificationFilter The notification filters.\n     * @param {function(error)} args.onError On error callback\n     * @param {function(onComplete)} args.onComplete On complete callback\n     * @returns {LoginObserver} The Login observer\n     */\n    BoltProtocol.prototype.initialize = function (_a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, userAgent = _b.userAgent, boltAgent = _b.boltAgent, authToken = _b.authToken, notificationFilter = _b.notificationFilter, onError = _b.onError, onComplete = _b.onComplete;\n        var state = {};\n        var observer = new stream_observers_1.LoginObserver({\n            onError: function (error) { return _this._onLoginError(error, onError); },\n            onCompleted: function (metadata) {\n                state.metadata = metadata;\n                return _this._onLoginCompleted(metadata);\n            }\n        });\n        this.write(request_message_1.default.hello5x3(userAgent, boltAgent, notificationFilter, this._serversideRouting), observer, false);\n        return this.logon({\n            authToken: authToken,\n            onComplete: function (metadata) { return onComplete(__assign(__assign({}, metadata), state.metadata)); },\n            onError: onError,\n            flush: true\n        });\n    };\n    return BoltProtocol;\n}(bolt_protocol_v5x2_1.default));\nexports[\"default\"] = BoltProtocol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x3.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x3.transformer.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x3.transformer.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar bolt_protocol_v5x2_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v5x2.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x2.transformer.js\"));\nexports[\"default\"] = __assign({}, bolt_protocol_v5x2_transformer_1.default);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9ib2x0LXByb3RvY29sLXY1eDMudHJhbnNmb3JtZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsT0FBTztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdURBQXVELG1CQUFPLENBQUMsc0lBQWtDO0FBQ2pHLGtCQUFlLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9ib2x0L2JvbHQtcHJvdG9jb2wtdjV4My50cmFuc2Zvcm1lci5qcz80ZmQ4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgYm9sdF9wcm90b2NvbF92NXgyX3RyYW5zZm9ybWVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vYm9sdC1wcm90b2NvbC12NXgyLnRyYW5zZm9ybWVyXCIpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9fYXNzaWduKHt9LCBib2x0X3Byb3RvY29sX3Y1eDJfdHJhbnNmb3JtZXJfMS5kZWZhdWx0KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x3.transformer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x4.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x4.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar bolt_protocol_v5x3_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v5x3 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x3.js\"));\nvar bolt_protocol_v5x4_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v5x4.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x4.transformer.js\"));\nvar request_message_1 = __importDefault(__webpack_require__(/*! ./request-message */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/request-message.js\"));\nvar stream_observers_1 = __webpack_require__(/*! ./stream-observers */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/stream-observers.js\");\nvar transformer_1 = __importDefault(__webpack_require__(/*! ./transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/transformer.js\"));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar BOLT_PROTOCOL_V5_4 = neo4j_driver_core_1.internal.constants.BOLT_PROTOCOL_V5_4;\nvar BoltProtocol = /** @class */ (function (_super) {\n    __extends(BoltProtocol, _super);\n    function BoltProtocol() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(BoltProtocol.prototype, \"version\", {\n        get: function () {\n            return BOLT_PROTOCOL_V5_4;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BoltProtocol.prototype, \"transformer\", {\n        get: function () {\n            var _this = this;\n            if (this._transformer === undefined) {\n                this._transformer = new transformer_1.default(Object.values(bolt_protocol_v5x4_transformer_1.default).map(function (create) { return create(_this._config, _this._log); }));\n            }\n            return this._transformer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Send a TELEMETRY through the underlying connection.\n     *\n     * @param {object} param0 Message params\n     * @param {number} param0.api The API called\n     * @param {object} param1 Configuration and callbacks callbacks\n     * @param {function()} param1.onCompleted Called when completed\n     * @param {function()} param1.onError Called when error\n     * @return {StreamObserver} the stream observer that monitors the corresponding server response.\n     */\n    BoltProtocol.prototype.telemetry = function (_a, _b) {\n        var api = _a.api;\n        var _c = _b === void 0 ? {} : _b, onError = _c.onError, onCompleted = _c.onCompleted;\n        var observer = new stream_observers_1.TelemetryObserver({ onCompleted: onCompleted, onError: onError });\n        this.write(request_message_1.default.telemetry({ api: api }), observer, false);\n        return observer;\n    };\n    return BoltProtocol;\n}(bolt_protocol_v5x3_1.default));\nexports[\"default\"] = BoltProtocol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9ib2x0LXByb3RvY29sLXY1eDQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ3ZGLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxtQkFBTyxDQUFDLDhHQUFzQjtBQUN6RSx1REFBdUQsbUJBQU8sQ0FBQyxzSUFBa0M7QUFDakcsd0NBQXdDLG1CQUFPLENBQUMsd0dBQW1CO0FBQ25FLHlCQUF5QixtQkFBTyxDQUFDLDBHQUFvQjtBQUNyRCxvQ0FBb0MsbUJBQU8sQ0FBQyxnR0FBZTtBQUMzRCwwQkFBMEIsbUJBQU8sQ0FBQyw4RUFBbUI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4SUFBOEksMkNBQTJDO0FBQ3pMO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFlBQVk7QUFDM0IsZUFBZSxZQUFZO0FBQzNCLGdCQUFnQixnQkFBZ0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDLGtFQUFrRSw0Q0FBNEM7QUFDOUcseURBQXlELFVBQVU7QUFDbkU7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmVvNGotbmV4dC1hcHAvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9ib2x0LXByb3RvY29sLXY1eDQuanM/OGQ2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChiLCBwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgICAgIHJldHVybiBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgIH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYiAhPT0gXCJmdW5jdGlvblwiICYmIGIgIT09IG51bGwpXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIiArIFN0cmluZyhiKSArIFwiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKipcbiAqIENvcHlyaWdodCAoYykgXCJOZW80alwiXG4gKiBOZW80aiBTd2VkZW4gQUIgW2h0dHBzOi8vbmVvNGouY29tXVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIGJvbHRfcHJvdG9jb2xfdjV4M18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2JvbHQtcHJvdG9jb2wtdjV4M1wiKSk7XG52YXIgYm9sdF9wcm90b2NvbF92NXg0X3RyYW5zZm9ybWVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vYm9sdC1wcm90b2NvbC12NXg0LnRyYW5zZm9ybWVyXCIpKTtcbnZhciByZXF1ZXN0X21lc3NhZ2VfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9yZXF1ZXN0LW1lc3NhZ2VcIikpO1xudmFyIHN0cmVhbV9vYnNlcnZlcnNfMSA9IHJlcXVpcmUoXCIuL3N0cmVhbS1vYnNlcnZlcnNcIik7XG52YXIgdHJhbnNmb3JtZXJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi90cmFuc2Zvcm1lclwiKSk7XG52YXIgbmVvNGpfZHJpdmVyX2NvcmVfMSA9IHJlcXVpcmUoXCJuZW80ai1kcml2ZXItY29yZVwiKTtcbnZhciBCT0xUX1BST1RPQ09MX1Y1XzQgPSBuZW80al9kcml2ZXJfY29yZV8xLmludGVybmFsLmNvbnN0YW50cy5CT0xUX1BST1RPQ09MX1Y1XzQ7XG52YXIgQm9sdFByb3RvY29sID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhCb2x0UHJvdG9jb2wsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQm9sdFByb3RvY29sKCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShCb2x0UHJvdG9jb2wucHJvdG90eXBlLCBcInZlcnNpb25cIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBCT0xUX1BST1RPQ09MX1Y1XzQ7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQm9sdFByb3RvY29sLnByb3RvdHlwZSwgXCJ0cmFuc2Zvcm1lclwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgICAgIGlmICh0aGlzLl90cmFuc2Zvcm1lciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fdHJhbnNmb3JtZXIgPSBuZXcgdHJhbnNmb3JtZXJfMS5kZWZhdWx0KE9iamVjdC52YWx1ZXMoYm9sdF9wcm90b2NvbF92NXg0X3RyYW5zZm9ybWVyXzEuZGVmYXVsdCkubWFwKGZ1bmN0aW9uIChjcmVhdGUpIHsgcmV0dXJuIGNyZWF0ZShfdGhpcy5fY29uZmlnLCBfdGhpcy5fbG9nKTsgfSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3RyYW5zZm9ybWVyO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgLyoqXG4gICAgICogU2VuZCBhIFRFTEVNRVRSWSB0aHJvdWdoIHRoZSB1bmRlcmx5aW5nIGNvbm5lY3Rpb24uXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gcGFyYW0wIE1lc3NhZ2UgcGFyYW1zXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHBhcmFtMC5hcGkgVGhlIEFQSSBjYWxsZWRcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gcGFyYW0xIENvbmZpZ3VyYXRpb24gYW5kIGNhbGxiYWNrcyBjYWxsYmFja3NcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9uKCl9IHBhcmFtMS5vbkNvbXBsZXRlZCBDYWxsZWQgd2hlbiBjb21wbGV0ZWRcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9uKCl9IHBhcmFtMS5vbkVycm9yIENhbGxlZCB3aGVuIGVycm9yXG4gICAgICogQHJldHVybiB7U3RyZWFtT2JzZXJ2ZXJ9IHRoZSBzdHJlYW0gb2JzZXJ2ZXIgdGhhdCBtb25pdG9ycyB0aGUgY29ycmVzcG9uZGluZyBzZXJ2ZXIgcmVzcG9uc2UuXG4gICAgICovXG4gICAgQm9sdFByb3RvY29sLnByb3RvdHlwZS50ZWxlbWV0cnkgPSBmdW5jdGlvbiAoX2EsIF9iKSB7XG4gICAgICAgIHZhciBhcGkgPSBfYS5hcGk7XG4gICAgICAgIHZhciBfYyA9IF9iID09PSB2b2lkIDAgPyB7fSA6IF9iLCBvbkVycm9yID0gX2Mub25FcnJvciwgb25Db21wbGV0ZWQgPSBfYy5vbkNvbXBsZXRlZDtcbiAgICAgICAgdmFyIG9ic2VydmVyID0gbmV3IHN0cmVhbV9vYnNlcnZlcnNfMS5UZWxlbWV0cnlPYnNlcnZlcih7IG9uQ29tcGxldGVkOiBvbkNvbXBsZXRlZCwgb25FcnJvcjogb25FcnJvciB9KTtcbiAgICAgICAgdGhpcy53cml0ZShyZXF1ZXN0X21lc3NhZ2VfMS5kZWZhdWx0LnRlbGVtZXRyeSh7IGFwaTogYXBpIH0pLCBvYnNlcnZlciwgZmFsc2UpO1xuICAgICAgICByZXR1cm4gb2JzZXJ2ZXI7XG4gICAgfTtcbiAgICByZXR1cm4gQm9sdFByb3RvY29sO1xufShib2x0X3Byb3RvY29sX3Y1eDNfMS5kZWZhdWx0KSk7XG5leHBvcnRzLmRlZmF1bHQgPSBCb2x0UHJvdG9jb2w7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x4.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x4.transformer.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x4.transformer.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar bolt_protocol_v5x3_transformer_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v5x3.transformer */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x3.transformer.js\"));\nexports[\"default\"] = __assign({}, bolt_protocol_v5x3_transformer_1.default);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9ib2x0LXByb3RvY29sLXY1eDQudHJhbnNmb3JtZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsT0FBTztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdURBQXVELG1CQUFPLENBQUMsc0lBQWtDO0FBQ2pHLGtCQUFlLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9ib2x0L2JvbHQtcHJvdG9jb2wtdjV4NC50cmFuc2Zvcm1lci5qcz8xYjNjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgYm9sdF9wcm90b2NvbF92NXgzX3RyYW5zZm9ybWVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vYm9sdC1wcm90b2NvbC12NXgzLnRyYW5zZm9ybWVyXCIpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9fYXNzaWduKHt9LCBib2x0X3Byb3RvY29sX3Y1eDNfdHJhbnNmb3JtZXJfMS5kZWZhdWx0KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x4.transformer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/create.js":
/*!**********************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/create.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar bolt_protocol_v1_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v1 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v1.js\"));\nvar bolt_protocol_v2_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v2 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v2.js\"));\nvar bolt_protocol_v3_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v3 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v3.js\"));\nvar bolt_protocol_v4x0_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x0 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x0.js\"));\nvar bolt_protocol_v4x1_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x1 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x1.js\"));\nvar bolt_protocol_v4x2_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x2 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x2.js\"));\nvar bolt_protocol_v4x3_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x3 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x3.js\"));\nvar bolt_protocol_v4x4_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x4 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x4.js\"));\nvar bolt_protocol_v5x0_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v5x0 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x0.js\"));\nvar bolt_protocol_v5x1_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v5x1 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x1.js\"));\nvar bolt_protocol_v5x2_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v5x2 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x2.js\"));\nvar bolt_protocol_v5x3_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v5x3 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x3.js\"));\nvar bolt_protocol_v5x4_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v5x4 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v5x4.js\"));\n// eslint-disable-next-line no-unused-vars\nvar channel_1 = __webpack_require__(/*! ../channel */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/index.js\");\nvar response_handler_1 = __importDefault(__webpack_require__(/*! ./response-handler */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/response-handler.js\"));\n/**\n * Creates a protocol with a given version\n *\n * @param {object} config\n * @param {number} config.version The version of the protocol\n * @param {channel} config.channel The channel\n * @param {Chunker} config.chunker The chunker\n * @param {Dechunker} config.dechunker The dechunker\n * @param {Logger} config.log The logger\n * @param {ResponseHandler~Observer} config.observer Observer\n * @param {boolean} config.disableLosslessIntegers Disable the lossless integers\n * @param {boolean} packstreamConfig.useBigInt if this connection should convert all received integers to native BigInt numbers.\n * @param {boolean} config.serversideRouting It's using server side routing\n */\nfunction create(_a) {\n    var _b = _a === void 0 ? {} : _a, version = _b.version, chunker = _b.chunker, dechunker = _b.dechunker, channel = _b.channel, disableLosslessIntegers = _b.disableLosslessIntegers, useBigInt = _b.useBigInt, serversideRouting = _b.serversideRouting, server = _b.server, // server info\n    log = _b.log, observer = _b.observer;\n    var createResponseHandler = function (protocol) {\n        var responseHandler = new response_handler_1.default({\n            transformMetadata: protocol.transformMetadata.bind(protocol),\n            log: log,\n            observer: observer\n        });\n        // reset the error handler to just handle errors and forget about the handshake promise\n        channel.onerror = observer.onError.bind(observer);\n        // Ok, protocol running. Simply forward all messages to the dechunker\n        channel.onmessage = function (buf) { return dechunker.write(buf); };\n        // setup dechunker to dechunk messages and forward them to the message handler\n        dechunker.onmessage = function (buf) {\n            try {\n                responseHandler.handleResponse(protocol.unpack(buf));\n            }\n            catch (e) {\n                return observer.onError(e);\n            }\n        };\n        return responseHandler;\n    };\n    return createProtocol(version, server, chunker, { disableLosslessIntegers: disableLosslessIntegers, useBigInt: useBigInt }, serversideRouting, createResponseHandler, observer.onProtocolError.bind(observer), log);\n}\nexports[\"default\"] = create;\nfunction createProtocol(version, server, chunker, packingConfig, serversideRouting, createResponseHandler, onProtocolError, log) {\n    switch (version) {\n        case 1:\n            return new bolt_protocol_v1_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\n        case 2:\n            return new bolt_protocol_v2_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\n        case 3:\n            return new bolt_protocol_v3_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\n        case 4.0:\n            return new bolt_protocol_v4x0_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError);\n        case 4.1:\n            return new bolt_protocol_v4x1_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n        case 4.2:\n            return new bolt_protocol_v4x2_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n        case 4.3:\n            return new bolt_protocol_v4x3_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n        case 4.4:\n            return new bolt_protocol_v4x4_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n        case 5.0:\n            return new bolt_protocol_v5x0_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n        case 5.1:\n            return new bolt_protocol_v5x1_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n        case 5.2:\n            return new bolt_protocol_v5x2_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n        case 5.3:\n            return new bolt_protocol_v5x3_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n        case 5.4:\n            return new bolt_protocol_v5x4_1.default(server, chunker, packingConfig, createResponseHandler, log, onProtocolError, serversideRouting);\n        default:\n            throw (0, neo4j_driver_core_1.newError)('Unknown Bolt protocol version: ' + version);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/create.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/handshake.js":
/*!*************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/handshake.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar channel_1 = __webpack_require__(/*! ../channel */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/index.js\");\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar BOLT_MAGIC_PREAMBLE = 0x6060b017;\nfunction version(major, minor) {\n    return {\n        major: major,\n        minor: minor\n    };\n}\nfunction createHandshakeMessage(versions) {\n    if (versions.length > 4) {\n        throw (0, neo4j_driver_core_1.newError)('It should not have more than 4 versions of the protocol');\n    }\n    var handshakeBuffer = (0, channel_1.alloc)(5 * 4);\n    handshakeBuffer.writeInt32(BOLT_MAGIC_PREAMBLE);\n    versions.forEach(function (version) {\n        if (version instanceof Array) {\n            var _a = version[0], major = _a.major, minor = _a.minor;\n            var minMinor = version[1].minor;\n            var range = minor - minMinor;\n            handshakeBuffer.writeInt32((range << 16) | (minor << 8) | major);\n        }\n        else {\n            var major = version.major, minor = version.minor;\n            handshakeBuffer.writeInt32((minor << 8) | major);\n        }\n    });\n    handshakeBuffer.reset();\n    return handshakeBuffer;\n}\nfunction parseNegotiatedResponse(buffer, log) {\n    var h = [\n        buffer.readUInt8(),\n        buffer.readUInt8(),\n        buffer.readUInt8(),\n        buffer.readUInt8()\n    ];\n    if (h[0] === 0x48 && h[1] === 0x54 && h[2] === 0x54 && h[3] === 0x50) {\n        log.error('Handshake failed since server responded with HTTP.');\n        throw (0, neo4j_driver_core_1.newError)('Server responded HTTP. Make sure you are not trying to connect to the http endpoint ' +\n            '(HTTP defaults to port 7474 whereas BOLT defaults to port 7687)');\n    }\n    return Number(h[3] + '.' + h[2]);\n}\n/**\n * @return {BaseBuffer}\n * @private\n */\nfunction newHandshakeBuffer() {\n    return createHandshakeMessage([\n        [version(5, 4), version(5, 0)],\n        [version(4, 4), version(4, 2)],\n        version(4, 1),\n        version(3, 0)\n    ]);\n}\n/**\n * This callback is displayed as a global member.\n * @callback BufferConsumerCallback\n * @param {buffer} buffer the remaining buffer\n */\n/**\n * @typedef HandshakeResult\n * @property {number} protocolVersion The protocol version negotiated in the handshake\n * @property {function(BufferConsumerCallback)} consumeRemainingBuffer A function to consume the remaining buffer if it exists\n */\n/**\n * Shake hands using the channel and return the protocol version\n *\n * @param {Channel} channel the channel use to shake hands\n * @param {Logger} log the log object\n * @returns {Promise<HandshakeResult>} Promise of protocol version and consumeRemainingBuffer\n */\nfunction handshake(channel, log) {\n    var _this = this;\n    return new Promise(function (resolve, reject) {\n        var handshakeErrorHandler = function (error) {\n            reject(error);\n        };\n        channel.onerror = handshakeErrorHandler.bind(_this);\n        if (channel._error) {\n            handshakeErrorHandler(channel._error);\n        }\n        channel.onmessage = function (buffer) {\n            try {\n                // read the response buffer and initialize the protocol\n                var protocolVersion = parseNegotiatedResponse(buffer, log);\n                resolve({\n                    protocolVersion: protocolVersion,\n                    consumeRemainingBuffer: function (consumer) {\n                        if (buffer.hasRemaining()) {\n                            consumer(buffer.readSlice(buffer.remaining()));\n                        }\n                    }\n                });\n            }\n            catch (e) {\n                reject(e);\n            }\n        };\n        channel.write(newHandshakeBuffer());\n    });\n}\nexports[\"default\"] = handshake;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9oYW5kc2hha2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsbUJBQU8sQ0FBQywwRkFBWTtBQUNwQywwQkFBMEIsbUJBQU8sQ0FBQyw4RUFBbUI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQSxjQUFjLFFBQVE7QUFDdEIsY0FBYyxrQ0FBa0M7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsMEJBQTBCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmVvNGotbmV4dC1hcHAvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9oYW5kc2hha2UuanM/ZjFlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qKlxuICogQ29weXJpZ2h0IChjKSBcIk5lbzRqXCJcbiAqIE5lbzRqIFN3ZWRlbiBBQiBbaHR0cHM6Ly9uZW80ai5jb21dXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgY2hhbm5lbF8xID0gcmVxdWlyZShcIi4uL2NoYW5uZWxcIik7XG52YXIgbmVvNGpfZHJpdmVyX2NvcmVfMSA9IHJlcXVpcmUoXCJuZW80ai1kcml2ZXItY29yZVwiKTtcbnZhciBCT0xUX01BR0lDX1BSRUFNQkxFID0gMHg2MDYwYjAxNztcbmZ1bmN0aW9uIHZlcnNpb24obWFqb3IsIG1pbm9yKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbWFqb3I6IG1ham9yLFxuICAgICAgICBtaW5vcjogbWlub3JcbiAgICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlSGFuZHNoYWtlTWVzc2FnZSh2ZXJzaW9ucykge1xuICAgIGlmICh2ZXJzaW9ucy5sZW5ndGggPiA0KSB7XG4gICAgICAgIHRocm93ICgwLCBuZW80al9kcml2ZXJfY29yZV8xLm5ld0Vycm9yKSgnSXQgc2hvdWxkIG5vdCBoYXZlIG1vcmUgdGhhbiA0IHZlcnNpb25zIG9mIHRoZSBwcm90b2NvbCcpO1xuICAgIH1cbiAgICB2YXIgaGFuZHNoYWtlQnVmZmVyID0gKDAsIGNoYW5uZWxfMS5hbGxvYykoNSAqIDQpO1xuICAgIGhhbmRzaGFrZUJ1ZmZlci53cml0ZUludDMyKEJPTFRfTUFHSUNfUFJFQU1CTEUpO1xuICAgIHZlcnNpb25zLmZvckVhY2goZnVuY3Rpb24gKHZlcnNpb24pIHtcbiAgICAgICAgaWYgKHZlcnNpb24gaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgICAgICAgdmFyIF9hID0gdmVyc2lvblswXSwgbWFqb3IgPSBfYS5tYWpvciwgbWlub3IgPSBfYS5taW5vcjtcbiAgICAgICAgICAgIHZhciBtaW5NaW5vciA9IHZlcnNpb25bMV0ubWlub3I7XG4gICAgICAgICAgICB2YXIgcmFuZ2UgPSBtaW5vciAtIG1pbk1pbm9yO1xuICAgICAgICAgICAgaGFuZHNoYWtlQnVmZmVyLndyaXRlSW50MzIoKHJhbmdlIDw8IDE2KSB8IChtaW5vciA8PCA4KSB8IG1ham9yKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHZhciBtYWpvciA9IHZlcnNpb24ubWFqb3IsIG1pbm9yID0gdmVyc2lvbi5taW5vcjtcbiAgICAgICAgICAgIGhhbmRzaGFrZUJ1ZmZlci53cml0ZUludDMyKChtaW5vciA8PCA4KSB8IG1ham9yKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGhhbmRzaGFrZUJ1ZmZlci5yZXNldCgpO1xuICAgIHJldHVybiBoYW5kc2hha2VCdWZmZXI7XG59XG5mdW5jdGlvbiBwYXJzZU5lZ290aWF0ZWRSZXNwb25zZShidWZmZXIsIGxvZykge1xuICAgIHZhciBoID0gW1xuICAgICAgICBidWZmZXIucmVhZFVJbnQ4KCksXG4gICAgICAgIGJ1ZmZlci5yZWFkVUludDgoKSxcbiAgICAgICAgYnVmZmVyLnJlYWRVSW50OCgpLFxuICAgICAgICBidWZmZXIucmVhZFVJbnQ4KClcbiAgICBdO1xuICAgIGlmIChoWzBdID09PSAweDQ4ICYmIGhbMV0gPT09IDB4NTQgJiYgaFsyXSA9PT0gMHg1NCAmJiBoWzNdID09PSAweDUwKSB7XG4gICAgICAgIGxvZy5lcnJvcignSGFuZHNoYWtlIGZhaWxlZCBzaW5jZSBzZXJ2ZXIgcmVzcG9uZGVkIHdpdGggSFRUUC4nKTtcbiAgICAgICAgdGhyb3cgKDAsIG5lbzRqX2RyaXZlcl9jb3JlXzEubmV3RXJyb3IpKCdTZXJ2ZXIgcmVzcG9uZGVkIEhUVFAuIE1ha2Ugc3VyZSB5b3UgYXJlIG5vdCB0cnlpbmcgdG8gY29ubmVjdCB0byB0aGUgaHR0cCBlbmRwb2ludCAnICtcbiAgICAgICAgICAgICcoSFRUUCBkZWZhdWx0cyB0byBwb3J0IDc0NzQgd2hlcmVhcyBCT0xUIGRlZmF1bHRzIHRvIHBvcnQgNzY4NyknKTtcbiAgICB9XG4gICAgcmV0dXJuIE51bWJlcihoWzNdICsgJy4nICsgaFsyXSk7XG59XG4vKipcbiAqIEByZXR1cm4ge0Jhc2VCdWZmZXJ9XG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBuZXdIYW5kc2hha2VCdWZmZXIoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhhbmRzaGFrZU1lc3NhZ2UoW1xuICAgICAgICBbdmVyc2lvbig1LCA0KSwgdmVyc2lvbig1LCAwKV0sXG4gICAgICAgIFt2ZXJzaW9uKDQsIDQpLCB2ZXJzaW9uKDQsIDIpXSxcbiAgICAgICAgdmVyc2lvbig0LCAxKSxcbiAgICAgICAgdmVyc2lvbigzLCAwKVxuICAgIF0pO1xufVxuLyoqXG4gKiBUaGlzIGNhbGxiYWNrIGlzIGRpc3BsYXllZCBhcyBhIGdsb2JhbCBtZW1iZXIuXG4gKiBAY2FsbGJhY2sgQnVmZmVyQ29uc3VtZXJDYWxsYmFja1xuICogQHBhcmFtIHtidWZmZXJ9IGJ1ZmZlciB0aGUgcmVtYWluaW5nIGJ1ZmZlclxuICovXG4vKipcbiAqIEB0eXBlZGVmIEhhbmRzaGFrZVJlc3VsdFxuICogQHByb3BlcnR5IHtudW1iZXJ9IHByb3RvY29sVmVyc2lvbiBUaGUgcHJvdG9jb2wgdmVyc2lvbiBuZWdvdGlhdGVkIGluIHRoZSBoYW5kc2hha2VcbiAqIEBwcm9wZXJ0eSB7ZnVuY3Rpb24oQnVmZmVyQ29uc3VtZXJDYWxsYmFjayl9IGNvbnN1bWVSZW1haW5pbmdCdWZmZXIgQSBmdW5jdGlvbiB0byBjb25zdW1lIHRoZSByZW1haW5pbmcgYnVmZmVyIGlmIGl0IGV4aXN0c1xuICovXG4vKipcbiAqIFNoYWtlIGhhbmRzIHVzaW5nIHRoZSBjaGFubmVsIGFuZCByZXR1cm4gdGhlIHByb3RvY29sIHZlcnNpb25cbiAqXG4gKiBAcGFyYW0ge0NoYW5uZWx9IGNoYW5uZWwgdGhlIGNoYW5uZWwgdXNlIHRvIHNoYWtlIGhhbmRzXG4gKiBAcGFyYW0ge0xvZ2dlcn0gbG9nIHRoZSBsb2cgb2JqZWN0XG4gKiBAcmV0dXJucyB7UHJvbWlzZTxIYW5kc2hha2VSZXN1bHQ+fSBQcm9taXNlIG9mIHByb3RvY29sIHZlcnNpb24gYW5kIGNvbnN1bWVSZW1haW5pbmdCdWZmZXJcbiAqL1xuZnVuY3Rpb24gaGFuZHNoYWtlKGNoYW5uZWwsIGxvZykge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgdmFyIGhhbmRzaGFrZUVycm9ySGFuZGxlciA9IGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgICAgfTtcbiAgICAgICAgY2hhbm5lbC5vbmVycm9yID0gaGFuZHNoYWtlRXJyb3JIYW5kbGVyLmJpbmQoX3RoaXMpO1xuICAgICAgICBpZiAoY2hhbm5lbC5fZXJyb3IpIHtcbiAgICAgICAgICAgIGhhbmRzaGFrZUVycm9ySGFuZGxlcihjaGFubmVsLl9lcnJvcik7XG4gICAgICAgIH1cbiAgICAgICAgY2hhbm5lbC5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAoYnVmZmVyKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIC8vIHJlYWQgdGhlIHJlc3BvbnNlIGJ1ZmZlciBhbmQgaW5pdGlhbGl6ZSB0aGUgcHJvdG9jb2xcbiAgICAgICAgICAgICAgICB2YXIgcHJvdG9jb2xWZXJzaW9uID0gcGFyc2VOZWdvdGlhdGVkUmVzcG9uc2UoYnVmZmVyLCBsb2cpO1xuICAgICAgICAgICAgICAgIHJlc29sdmUoe1xuICAgICAgICAgICAgICAgICAgICBwcm90b2NvbFZlcnNpb246IHByb3RvY29sVmVyc2lvbixcbiAgICAgICAgICAgICAgICAgICAgY29uc3VtZVJlbWFpbmluZ0J1ZmZlcjogZnVuY3Rpb24gKGNvbnN1bWVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYnVmZmVyLmhhc1JlbWFpbmluZygpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3VtZXIoYnVmZmVyLnJlYWRTbGljZShidWZmZXIucmVtYWluaW5nKCkpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGNoYW5uZWwud3JpdGUobmV3SGFuZHNoYWtlQnVmZmVyKCkpO1xuICAgIH0pO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gaGFuZHNoYWtlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/handshake.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RawRoutingTable = exports.BoltProtocol = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar handshake_1 = __importDefault(__webpack_require__(/*! ./handshake */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/handshake.js\"));\nvar create_1 = __importDefault(__webpack_require__(/*! ./create */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/create.js\"));\nvar bolt_protocol_v4x3_1 = __importDefault(__webpack_require__(/*! ./bolt-protocol-v4x3 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v4x3.js\"));\nvar routing_table_raw_1 = __importDefault(__webpack_require__(/*! ./routing-table-raw */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/routing-table-raw.js\"));\n__exportStar(__webpack_require__(/*! ./stream-observers */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/stream-observers.js\"), exports);\nexports.BoltProtocol = bolt_protocol_v4x3_1.default;\nexports.RawRoutingTable = routing_table_raw_1.default;\nexports[\"default\"] = {\n    handshake: handshake_1.default,\n    create: create_1.default\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QixHQUFHLG9CQUFvQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxtQkFBTyxDQUFDLDRGQUFhO0FBQ3ZELCtCQUErQixtQkFBTyxDQUFDLHNGQUFVO0FBQ2pELDJDQUEyQyxtQkFBTyxDQUFDLDhHQUFzQjtBQUN6RSwwQ0FBMEMsbUJBQU8sQ0FBQyw0R0FBcUI7QUFDdkUsYUFBYSxtQkFBTyxDQUFDLDBHQUFvQjtBQUN6QyxvQkFBb0I7QUFDcEIsdUJBQXVCO0FBQ3ZCLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmVvNGotbmV4dC1hcHAvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9pbmRleC5qcz9lOTU0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJhd1JvdXRpbmdUYWJsZSA9IGV4cG9ydHMuQm9sdFByb3RvY29sID0gdm9pZCAwO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBoYW5kc2hha2VfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9oYW5kc2hha2VcIikpO1xudmFyIGNyZWF0ZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2NyZWF0ZVwiKSk7XG52YXIgYm9sdF9wcm90b2NvbF92NHgzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vYm9sdC1wcm90b2NvbC12NHgzXCIpKTtcbnZhciByb3V0aW5nX3RhYmxlX3Jhd18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3JvdXRpbmctdGFibGUtcmF3XCIpKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zdHJlYW0tb2JzZXJ2ZXJzXCIpLCBleHBvcnRzKTtcbmV4cG9ydHMuQm9sdFByb3RvY29sID0gYm9sdF9wcm90b2NvbF92NHgzXzEuZGVmYXVsdDtcbmV4cG9ydHMuUmF3Um91dGluZ1RhYmxlID0gcm91dGluZ190YWJsZV9yYXdfMS5kZWZhdWx0O1xuZXhwb3J0cy5kZWZhdWx0ID0ge1xuICAgIGhhbmRzaGFrZTogaGFuZHNoYWtlXzEuZGVmYXVsdCxcbiAgICBjcmVhdGU6IGNyZWF0ZV8xLmRlZmF1bHRcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/request-message.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/request-message.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SIGNATURES = void 0;\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar _a = neo4j_driver_core_1.internal.constants, ACCESS_MODE_READ = _a.ACCESS_MODE_READ, FETCH_ALL = _a.FETCH_ALL, assertString = neo4j_driver_core_1.internal.util.assertString;\n/* eslint-disable no-unused-vars */\n// Signature bytes for each request message type\nvar INIT = 0x01; // 0000 0001 // INIT <user_agent> <authentication_token>\nvar ACK_FAILURE = 0x0e; // 0000 1110 // ACK_FAILURE - unused\nvar RESET = 0x0f; // 0000 1111 // RESET\nvar RUN = 0x10; // 0001 0000 // RUN <query> <parameters>\nvar DISCARD_ALL = 0x2f; // 0010 1111 // DISCARD_ALL - unused\nvar PULL_ALL = 0x3f; // 0011 1111 // PULL_ALL\nvar HELLO = 0x01; // 0000 0001 // HELLO <metadata>\nvar GOODBYE = 0x02; // 0000 0010 // GOODBYE\nvar BEGIN = 0x11; // 0001 0001 // BEGIN <metadata>\nvar COMMIT = 0x12; // 0001 0010 // COMMIT\nvar ROLLBACK = 0x13; // 0001 0011 // ROLLBACK\nvar TELEMETRY = 0x54; // 0101 0100 // TELEMETRY <api>\nvar ROUTE = 0x66; // 0110 0110 // ROUTE\nvar LOGON = 0x6A; // LOGON\nvar LOGOFF = 0x6B; // LOGOFF\nvar DISCARD = 0x2f; // 0010 1111 // DISCARD\nvar PULL = 0x3f; // 0011 1111 // PULL\nvar READ_MODE = 'r';\n/* eslint-enable no-unused-vars */\nvar NO_STATEMENT_ID = -1;\nvar SIGNATURES = Object.freeze({\n    INIT: INIT,\n    RESET: RESET,\n    RUN: RUN,\n    PULL_ALL: PULL_ALL,\n    HELLO: HELLO,\n    GOODBYE: GOODBYE,\n    BEGIN: BEGIN,\n    COMMIT: COMMIT,\n    ROLLBACK: ROLLBACK,\n    TELEMETRY: TELEMETRY,\n    ROUTE: ROUTE,\n    LOGON: LOGON,\n    LOGOFF: LOGOFF,\n    DISCARD: DISCARD,\n    PULL: PULL\n});\nexports.SIGNATURES = SIGNATURES;\nvar RequestMessage = /** @class */ (function () {\n    function RequestMessage(signature, fields, toString) {\n        this.signature = signature;\n        this.fields = fields;\n        this.toString = toString;\n    }\n    /**\n     * Create a new INIT message.\n     * @param {string} clientName the client name.\n     * @param {Object} authToken the authentication token.\n     * @return {RequestMessage} new INIT message.\n     */\n    RequestMessage.init = function (clientName, authToken) {\n        return new RequestMessage(INIT, [clientName, authToken], function () { return \"INIT \".concat(clientName, \" {...}\"); });\n    };\n    /**\n     * Create a new RUN message.\n     * @param {string} query the cypher query.\n     * @param {Object} parameters the query parameters.\n     * @return {RequestMessage} new RUN message.\n     */\n    RequestMessage.run = function (query, parameters) {\n        return new RequestMessage(RUN, [query, parameters], function () { return \"RUN \".concat(query, \" \").concat(neo4j_driver_core_1.json.stringify(parameters)); });\n    };\n    /**\n     * Get a PULL_ALL message.\n     * @return {RequestMessage} the PULL_ALL message.\n     */\n    RequestMessage.pullAll = function () {\n        return PULL_ALL_MESSAGE;\n    };\n    /**\n     * Get a RESET message.\n     * @return {RequestMessage} the RESET message.\n     */\n    RequestMessage.reset = function () {\n        return RESET_MESSAGE;\n    };\n    /**\n     * Create a new HELLO message.\n     * @param {string} userAgent the user agent.\n     * @param {Object} authToken the authentication token.\n     * @param {Object} optional server side routing, set to routing context to turn on server side routing (> 4.1)\n     * @return {RequestMessage} new HELLO message.\n     */\n    RequestMessage.hello = function (userAgent, authToken, routing, patchs) {\n        if (routing === void 0) { routing = null; }\n        if (patchs === void 0) { patchs = null; }\n        var metadata = Object.assign({ user_agent: userAgent }, authToken);\n        if (routing) {\n            metadata.routing = routing;\n        }\n        if (patchs) {\n            metadata.patch_bolt = patchs;\n        }\n        return new RequestMessage(HELLO, [metadata], function () { return \"HELLO {user_agent: '\".concat(userAgent, \"', ...}\"); });\n    };\n    /**\n     * Create a new HELLO message.\n     * @param {string} userAgent the user agent.\n     * @param {Object} optional server side routing, set to routing context to turn on server side routing (> 4.1)\n     * @return {RequestMessage} new HELLO message.\n     */\n    RequestMessage.hello5x1 = function (userAgent, routing) {\n        if (routing === void 0) { routing = null; }\n        var metadata = { user_agent: userAgent };\n        if (routing) {\n            metadata.routing = routing;\n        }\n        return new RequestMessage(HELLO, [metadata], function () { return \"HELLO {user_agent: '\".concat(userAgent, \"', ...}\"); });\n    };\n    /**\n     * Create a new HELLO message.\n     * @param {string} userAgent the user agent.\n     * @param {NotificationFilter} notificationFilter the notification filter configured\n     * @param {Object} routing server side routing, set to routing context to turn on server side routing (> 4.1)\n     * @return {RequestMessage} new HELLO message.\n     */\n    RequestMessage.hello5x2 = function (userAgent, notificationFilter, routing) {\n        if (notificationFilter === void 0) { notificationFilter = null; }\n        if (routing === void 0) { routing = null; }\n        var metadata = { user_agent: userAgent };\n        if (notificationFilter) {\n            if (notificationFilter.minimumSeverityLevel) {\n                metadata.notifications_minimum_severity = notificationFilter.minimumSeverityLevel;\n            }\n            if (notificationFilter.disabledCategories) {\n                metadata.notifications_disabled_categories = notificationFilter.disabledCategories;\n            }\n        }\n        if (routing) {\n            metadata.routing = routing;\n        }\n        return new RequestMessage(HELLO, [metadata], function () { return \"HELLO \".concat(neo4j_driver_core_1.json.stringify(metadata)); });\n    };\n    /**\n     * Create a new HELLO message.\n     * @param {string} userAgent the user agent.\n     * @param {string} boltAgent the bolt agent.\n     * @param {NotificationFilter} notificationFilter the notification filter configured\n     * @param {Object} routing server side routing, set to routing context to turn on server side routing (> 4.1)\n     * @return {RequestMessage} new HELLO message.\n     */\n    RequestMessage.hello5x3 = function (userAgent, boltAgent, notificationFilter, routing) {\n        if (notificationFilter === void 0) { notificationFilter = null; }\n        if (routing === void 0) { routing = null; }\n        var metadata = {};\n        if (userAgent) {\n            metadata.user_agent = userAgent;\n        }\n        if (boltAgent) {\n            metadata.bolt_agent = {\n                product: boltAgent.product,\n                platform: boltAgent.platform,\n                language: boltAgent.language,\n                language_details: boltAgent.languageDetails\n            };\n        }\n        if (notificationFilter) {\n            if (notificationFilter.minimumSeverityLevel) {\n                metadata.notifications_minimum_severity = notificationFilter.minimumSeverityLevel;\n            }\n            if (notificationFilter.disabledCategories) {\n                metadata.notifications_disabled_categories = notificationFilter.disabledCategories;\n            }\n        }\n        if (routing) {\n            metadata.routing = routing;\n        }\n        return new RequestMessage(HELLO, [metadata], function () { return \"HELLO \".concat(neo4j_driver_core_1.json.stringify(metadata)); });\n    };\n    /**\n     * Create a new LOGON message.\n     *\n     * @param {object} authToken The auth token\n     * @returns {RequestMessage} new LOGON message\n     */\n    RequestMessage.logon = function (authToken) {\n        return new RequestMessage(LOGON, [authToken], function () { return 'LOGON { ... }'; });\n    };\n    /**\n     * Create a new LOGOFF message.\n     *\n     * @returns {RequestMessage} new LOGOFF message\n     */\n    RequestMessage.logoff = function () {\n        return new RequestMessage(LOGOFF, [], function () { return 'LOGOFF'; });\n    };\n    /**\n     * Create a new BEGIN message.\n     * @param {Bookmarks} bookmarks the bookmarks.\n     * @param {TxConfig} txConfig the configuration.\n     * @param {string} database the database name.\n     * @param {string} mode the access mode.\n     * @param {string} impersonatedUser the impersonated user.\n     * @param {NotificationFilter} notificationFilter the notification filter\n     * @return {RequestMessage} new BEGIN message.\n     */\n    RequestMessage.begin = function (_a) {\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter;\n        var metadata = buildTxMetadata(bookmarks, txConfig, database, mode, impersonatedUser, notificationFilter);\n        return new RequestMessage(BEGIN, [metadata], function () { return \"BEGIN \".concat(neo4j_driver_core_1.json.stringify(metadata)); });\n    };\n    /**\n     * Get a COMMIT message.\n     * @return {RequestMessage} the COMMIT message.\n     */\n    RequestMessage.commit = function () {\n        return COMMIT_MESSAGE;\n    };\n    /**\n     * Get a ROLLBACK message.\n     * @return {RequestMessage} the ROLLBACK message.\n     */\n    RequestMessage.rollback = function () {\n        return ROLLBACK_MESSAGE;\n    };\n    /**\n     * Create a new RUN message with additional metadata.\n     * @param {string} query the cypher query.\n     * @param {Object} parameters the query parameters.\n     * @param {Bookmarks} bookmarks the bookmarks.\n     * @param {TxConfig} txConfig the configuration.\n     * @param {string} database the database name.\n     * @param {string} mode the access mode.\n     * @param {string} impersonatedUser the impersonated user.\n     * @return {RequestMessage} new RUN message with additional metadata.\n     */\n    RequestMessage.runWithMetadata = function (query, parameters, _a) {\n        var _b = _a === void 0 ? {} : _a, bookmarks = _b.bookmarks, txConfig = _b.txConfig, database = _b.database, mode = _b.mode, impersonatedUser = _b.impersonatedUser, notificationFilter = _b.notificationFilter;\n        var metadata = buildTxMetadata(bookmarks, txConfig, database, mode, impersonatedUser, notificationFilter);\n        return new RequestMessage(RUN, [query, parameters, metadata], function () {\n            return \"RUN \".concat(query, \" \").concat(neo4j_driver_core_1.json.stringify(parameters), \" \").concat(neo4j_driver_core_1.json.stringify(metadata));\n        });\n    };\n    /**\n     * Get a GOODBYE message.\n     * @return {RequestMessage} the GOODBYE message.\n     */\n    RequestMessage.goodbye = function () {\n        return GOODBYE_MESSAGE;\n    };\n    /**\n     * Generates a new PULL message with additional metadata.\n     * @param {Integer|number} stmtId\n     * @param {Integer|number} n\n     * @return {RequestMessage} the PULL message.\n     */\n    RequestMessage.pull = function (_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.stmtId, stmtId = _c === void 0 ? NO_STATEMENT_ID : _c, _d = _b.n, n = _d === void 0 ? FETCH_ALL : _d;\n        var metadata = buildStreamMetadata(stmtId === null || stmtId === undefined ? NO_STATEMENT_ID : stmtId, n || FETCH_ALL);\n        return new RequestMessage(PULL, [metadata], function () { return \"PULL \".concat(neo4j_driver_core_1.json.stringify(metadata)); });\n    };\n    /**\n     * Generates a new DISCARD message with additional metadata.\n     * @param {Integer|number} stmtId\n     * @param {Integer|number} n\n     * @return {RequestMessage} the PULL message.\n     */\n    RequestMessage.discard = function (_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.stmtId, stmtId = _c === void 0 ? NO_STATEMENT_ID : _c, _d = _b.n, n = _d === void 0 ? FETCH_ALL : _d;\n        var metadata = buildStreamMetadata(stmtId === null || stmtId === undefined ? NO_STATEMENT_ID : stmtId, n || FETCH_ALL);\n        return new RequestMessage(DISCARD, [metadata], function () { return \"DISCARD \".concat(neo4j_driver_core_1.json.stringify(metadata)); });\n    };\n    RequestMessage.telemetry = function (_a) {\n        var api = _a.api;\n        var parsedApi = (0, neo4j_driver_core_1.int)(api);\n        return new RequestMessage(TELEMETRY, [parsedApi], function () { return \"TELEMETRY \".concat(parsedApi.toString()); });\n    };\n    /**\n     * Generate the ROUTE message, this message is used to fetch the routing table from the server\n     *\n     * @param {object} routingContext The routing context used to define the routing table. Multi-datacenter deployments is one of its use cases\n     * @param {string[]} bookmarks The list of the bookmarks should be used\n     * @param {string} databaseName The name of the database to get the routing table for.\n     * @return {RequestMessage} the ROUTE message.\n     */\n    RequestMessage.route = function (routingContext, bookmarks, databaseName) {\n        if (routingContext === void 0) { routingContext = {}; }\n        if (bookmarks === void 0) { bookmarks = []; }\n        if (databaseName === void 0) { databaseName = null; }\n        return new RequestMessage(ROUTE, [routingContext, bookmarks, databaseName], function () {\n            return \"ROUTE \".concat(neo4j_driver_core_1.json.stringify(routingContext), \" \").concat(neo4j_driver_core_1.json.stringify(bookmarks), \" \").concat(databaseName);\n        });\n    };\n    /**\n     * Generate the ROUTE message, this message is used to fetch the routing table from the server\n     *\n     * @param {object} routingContext The routing context used to define the routing table. Multi-datacenter deployments is one of its use cases\n     * @param {string[]} bookmarks The list of the bookmarks should be used\n     * @param {object} databaseContext The context inforamtion of the database to get the routing table for.\n     * @param {string} databaseContext.databaseName The name of the database to get the routing table.\n     * @param {string} databaseContext.impersonatedUser The name of the user to impersonation when getting the routing table.\n     * @return {RequestMessage} the ROUTE message.\n     */\n    RequestMessage.routeV4x4 = function (routingContext, bookmarks, databaseContext) {\n        if (routingContext === void 0) { routingContext = {}; }\n        if (bookmarks === void 0) { bookmarks = []; }\n        if (databaseContext === void 0) { databaseContext = {}; }\n        var dbContext = {};\n        if (databaseContext.databaseName) {\n            dbContext.db = databaseContext.databaseName;\n        }\n        if (databaseContext.impersonatedUser) {\n            dbContext.imp_user = databaseContext.impersonatedUser;\n        }\n        return new RequestMessage(ROUTE, [routingContext, bookmarks, dbContext], function () {\n            return \"ROUTE \".concat(neo4j_driver_core_1.json.stringify(routingContext), \" \").concat(neo4j_driver_core_1.json.stringify(bookmarks), \" \").concat(neo4j_driver_core_1.json.stringify(dbContext));\n        });\n    };\n    return RequestMessage;\n}());\nexports[\"default\"] = RequestMessage;\n/**\n * Create an object that represent transaction metadata.\n * @param {Bookmarks} bookmarks the bookmarks.\n * @param {TxConfig} txConfig the configuration.\n * @param {string} database the database name.\n * @param {string} mode the access mode.\n * @param {string} impersonatedUser the impersonated user mode.\n * @param {notificationFilter} notificationFilter the notification filter\n * @return {Object} a metadata object.\n */\nfunction buildTxMetadata(bookmarks, txConfig, database, mode, impersonatedUser, notificationFilter) {\n    var metadata = {};\n    if (!bookmarks.isEmpty()) {\n        metadata.bookmarks = bookmarks.values();\n    }\n    if (txConfig.timeout !== null) {\n        metadata.tx_timeout = txConfig.timeout;\n    }\n    if (txConfig.metadata) {\n        metadata.tx_metadata = txConfig.metadata;\n    }\n    if (database) {\n        metadata.db = assertString(database, 'database');\n    }\n    if (impersonatedUser) {\n        metadata.imp_user = assertString(impersonatedUser, 'impersonatedUser');\n    }\n    if (mode === ACCESS_MODE_READ) {\n        metadata.mode = READ_MODE;\n    }\n    if (notificationFilter) {\n        if (notificationFilter.minimumSeverityLevel) {\n            metadata.notifications_minimum_severity = notificationFilter.minimumSeverityLevel;\n        }\n        if (notificationFilter.disabledCategories) {\n            metadata.notifications_disabled_categories = notificationFilter.disabledCategories;\n        }\n    }\n    return metadata;\n}\n/**\n * Create an object that represents streaming metadata.\n * @param {Integer|number} stmtId The query id to stream its results.\n * @param {Integer|number} n The number of records to stream.\n * @returns {Object} a metadata object.\n */\nfunction buildStreamMetadata(stmtId, n) {\n    var metadata = { n: (0, neo4j_driver_core_1.int)(n) };\n    if (stmtId !== NO_STATEMENT_ID) {\n        metadata.qid = (0, neo4j_driver_core_1.int)(stmtId);\n    }\n    return metadata;\n}\n// constants for messages that never change\nvar PULL_ALL_MESSAGE = new RequestMessage(PULL_ALL, [], function () { return 'PULL_ALL'; });\nvar RESET_MESSAGE = new RequestMessage(RESET, [], function () { return 'RESET'; });\nvar COMMIT_MESSAGE = new RequestMessage(COMMIT, [], function () { return 'COMMIT'; });\nvar ROLLBACK_MESSAGE = new RequestMessage(ROLLBACK, [], function () { return 'ROLLBACK'; });\nvar GOODBYE_MESSAGE = new RequestMessage(GOODBYE, [], function () { return 'GOODBYE'; });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9yZXF1ZXN0LW1lc3NhZ2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEIsMEJBQTBCLG1CQUFPLENBQUMsOEVBQW1CO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQix3QkFBd0I7QUFDeEIsa0JBQWtCO0FBQ2xCLGdCQUFnQjtBQUNoQix3QkFBd0I7QUFDeEIscUJBQXFCO0FBQ3JCLGtCQUFrQjtBQUNsQixvQkFBb0I7QUFDcEIsa0JBQWtCO0FBQ2xCLG1CQUFtQjtBQUNuQixxQkFBcUI7QUFDckIsc0JBQXNCO0FBQ3RCLGtCQUFrQjtBQUNsQixrQkFBa0I7QUFDbEIsbUJBQW1CO0FBQ25CLG9CQUFvQjtBQUNwQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGdCQUFnQixnQkFBZ0I7QUFDaEM7QUFDQTtBQUNBLCtFQUErRSxxQ0FBcUMsSUFBSSxLQUFLO0FBQzdIO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZ0JBQWdCLGdCQUFnQjtBQUNoQztBQUNBO0FBQ0EsMEVBQTBFLDBGQUEwRjtBQUNwSztBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsZ0JBQWdCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixnQkFBZ0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZ0JBQWdCLGdCQUFnQjtBQUNoQztBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDLGlDQUFpQztBQUNqQyx1Q0FBdUMsdUJBQXVCO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1FQUFtRSxlQUFlLHlDQUF5QyxLQUFLO0FBQ2hJO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZ0JBQWdCLGdCQUFnQjtBQUNoQztBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxtRUFBbUUsZUFBZSx5Q0FBeUMsS0FBSztBQUNoSTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxvQkFBb0I7QUFDbkMsZUFBZSxRQUFRO0FBQ3ZCLGdCQUFnQixnQkFBZ0I7QUFDaEM7QUFDQTtBQUNBLDZDQUE2QztBQUM3QyxrQ0FBa0M7QUFDbEMseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRUFBbUUsdUVBQXVFO0FBQzFJO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxvQkFBb0I7QUFDbkMsZUFBZSxRQUFRO0FBQ3ZCLGdCQUFnQixnQkFBZ0I7QUFDaEM7QUFDQTtBQUNBLDZDQUE2QztBQUM3QyxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1FQUFtRSx1RUFBdUU7QUFDMUk7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsaUJBQWlCLGdCQUFnQjtBQUNqQztBQUNBO0FBQ0Esb0VBQW9FLGdCQUFnQixLQUFLLElBQUk7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsZ0JBQWdCO0FBQ2pDO0FBQ0E7QUFDQSw0REFBNEQsa0JBQWtCO0FBQzlFO0FBQ0E7QUFDQTtBQUNBLGVBQWUsV0FBVztBQUMxQixlQUFlLFVBQVU7QUFDekIsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxvQkFBb0I7QUFDbkMsZ0JBQWdCLGdCQUFnQjtBQUNoQztBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0EsbUVBQW1FLHVFQUF1RTtBQUMxSTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsZ0JBQWdCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixnQkFBZ0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFdBQVc7QUFDMUIsZUFBZSxVQUFVO0FBQ3pCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGdCQUFnQixnQkFBZ0I7QUFDaEM7QUFDQTtBQUNBLG9DQUFvQztBQUNwQztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGdCQUFnQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQjtBQUMvQixlQUFlLGdCQUFnQjtBQUMvQixnQkFBZ0IsZ0JBQWdCO0FBQ2hDO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQSxrRUFBa0Usc0VBQXNFO0FBQ3hJO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0JBQWdCO0FBQy9CLGVBQWUsZ0JBQWdCO0FBQy9CLGdCQUFnQixnQkFBZ0I7QUFDaEM7QUFDQTtBQUNBLG9DQUFvQztBQUNwQztBQUNBLHFFQUFxRSx5RUFBeUU7QUFDOUk7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0UsbURBQW1EO0FBQzNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsVUFBVTtBQUN6QixlQUFlLFFBQVE7QUFDdkIsZ0JBQWdCLGdCQUFnQjtBQUNoQztBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDLG9DQUFvQztBQUNwQyx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLFVBQVU7QUFDekIsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZ0JBQWdCLGdCQUFnQjtBQUNoQztBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDLG9DQUFvQztBQUNwQywwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWU7QUFDZjtBQUNBO0FBQ0EsV0FBVyxXQUFXO0FBQ3RCLFdBQVcsVUFBVTtBQUNyQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLG9CQUFvQjtBQUMvQixZQUFZLFFBQVE7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnQkFBZ0I7QUFDM0IsV0FBVyxnQkFBZ0I7QUFDM0IsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0VBQXNFLG9CQUFvQjtBQUMxRixnRUFBZ0UsaUJBQWlCO0FBQ2pGLGtFQUFrRSxrQkFBa0I7QUFDcEYsc0VBQXNFLG9CQUFvQjtBQUMxRixvRUFBb0UsbUJBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmVvNGotbmV4dC1hcHAvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9yZXF1ZXN0LW1lc3NhZ2UuanM/MDllZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qKlxuICogQ29weXJpZ2h0IChjKSBcIk5lbzRqXCJcbiAqIE5lbzRqIFN3ZWRlbiBBQiBbaHR0cHM6Ly9uZW80ai5jb21dXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNJR05BVFVSRVMgPSB2b2lkIDA7XG52YXIgbmVvNGpfZHJpdmVyX2NvcmVfMSA9IHJlcXVpcmUoXCJuZW80ai1kcml2ZXItY29yZVwiKTtcbnZhciBfYSA9IG5lbzRqX2RyaXZlcl9jb3JlXzEuaW50ZXJuYWwuY29uc3RhbnRzLCBBQ0NFU1NfTU9ERV9SRUFEID0gX2EuQUNDRVNTX01PREVfUkVBRCwgRkVUQ0hfQUxMID0gX2EuRkVUQ0hfQUxMLCBhc3NlcnRTdHJpbmcgPSBuZW80al9kcml2ZXJfY29yZV8xLmludGVybmFsLnV0aWwuYXNzZXJ0U3RyaW5nO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbi8vIFNpZ25hdHVyZSBieXRlcyBmb3IgZWFjaCByZXF1ZXN0IG1lc3NhZ2UgdHlwZVxudmFyIElOSVQgPSAweDAxOyAvLyAwMDAwIDAwMDEgLy8gSU5JVCA8dXNlcl9hZ2VudD4gPGF1dGhlbnRpY2F0aW9uX3Rva2VuPlxudmFyIEFDS19GQUlMVVJFID0gMHgwZTsgLy8gMDAwMCAxMTEwIC8vIEFDS19GQUlMVVJFIC0gdW51c2VkXG52YXIgUkVTRVQgPSAweDBmOyAvLyAwMDAwIDExMTEgLy8gUkVTRVRcbnZhciBSVU4gPSAweDEwOyAvLyAwMDAxIDAwMDAgLy8gUlVOIDxxdWVyeT4gPHBhcmFtZXRlcnM+XG52YXIgRElTQ0FSRF9BTEwgPSAweDJmOyAvLyAwMDEwIDExMTEgLy8gRElTQ0FSRF9BTEwgLSB1bnVzZWRcbnZhciBQVUxMX0FMTCA9IDB4M2Y7IC8vIDAwMTEgMTExMSAvLyBQVUxMX0FMTFxudmFyIEhFTExPID0gMHgwMTsgLy8gMDAwMCAwMDAxIC8vIEhFTExPIDxtZXRhZGF0YT5cbnZhciBHT09EQllFID0gMHgwMjsgLy8gMDAwMCAwMDEwIC8vIEdPT0RCWUVcbnZhciBCRUdJTiA9IDB4MTE7IC8vIDAwMDEgMDAwMSAvLyBCRUdJTiA8bWV0YWRhdGE+XG52YXIgQ09NTUlUID0gMHgxMjsgLy8gMDAwMSAwMDEwIC8vIENPTU1JVFxudmFyIFJPTExCQUNLID0gMHgxMzsgLy8gMDAwMSAwMDExIC8vIFJPTExCQUNLXG52YXIgVEVMRU1FVFJZID0gMHg1NDsgLy8gMDEwMSAwMTAwIC8vIFRFTEVNRVRSWSA8YXBpPlxudmFyIFJPVVRFID0gMHg2NjsgLy8gMDExMCAwMTEwIC8vIFJPVVRFXG52YXIgTE9HT04gPSAweDZBOyAvLyBMT0dPTlxudmFyIExPR09GRiA9IDB4NkI7IC8vIExPR09GRlxudmFyIERJU0NBUkQgPSAweDJmOyAvLyAwMDEwIDExMTEgLy8gRElTQ0FSRFxudmFyIFBVTEwgPSAweDNmOyAvLyAwMDExIDExMTEgLy8gUFVMTFxudmFyIFJFQURfTU9ERSA9ICdyJztcbi8qIGVzbGludC1lbmFibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBOT19TVEFURU1FTlRfSUQgPSAtMTtcbnZhciBTSUdOQVRVUkVTID0gT2JqZWN0LmZyZWV6ZSh7XG4gICAgSU5JVDogSU5JVCxcbiAgICBSRVNFVDogUkVTRVQsXG4gICAgUlVOOiBSVU4sXG4gICAgUFVMTF9BTEw6IFBVTExfQUxMLFxuICAgIEhFTExPOiBIRUxMTyxcbiAgICBHT09EQllFOiBHT09EQllFLFxuICAgIEJFR0lOOiBCRUdJTixcbiAgICBDT01NSVQ6IENPTU1JVCxcbiAgICBST0xMQkFDSzogUk9MTEJBQ0ssXG4gICAgVEVMRU1FVFJZOiBURUxFTUVUUlksXG4gICAgUk9VVEU6IFJPVVRFLFxuICAgIExPR09OOiBMT0dPTixcbiAgICBMT0dPRkY6IExPR09GRixcbiAgICBESVNDQVJEOiBESVNDQVJELFxuICAgIFBVTEw6IFBVTExcbn0pO1xuZXhwb3J0cy5TSUdOQVRVUkVTID0gU0lHTkFUVVJFUztcbnZhciBSZXF1ZXN0TWVzc2FnZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBSZXF1ZXN0TWVzc2FnZShzaWduYXR1cmUsIGZpZWxkcywgdG9TdHJpbmcpIHtcbiAgICAgICAgdGhpcy5zaWduYXR1cmUgPSBzaWduYXR1cmU7XG4gICAgICAgIHRoaXMuZmllbGRzID0gZmllbGRzO1xuICAgICAgICB0aGlzLnRvU3RyaW5nID0gdG9TdHJpbmc7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyBJTklUIG1lc3NhZ2UuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNsaWVudE5hbWUgdGhlIGNsaWVudCBuYW1lLlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBhdXRoVG9rZW4gdGhlIGF1dGhlbnRpY2F0aW9uIHRva2VuLlxuICAgICAqIEByZXR1cm4ge1JlcXVlc3RNZXNzYWdlfSBuZXcgSU5JVCBtZXNzYWdlLlxuICAgICAqL1xuICAgIFJlcXVlc3RNZXNzYWdlLmluaXQgPSBmdW5jdGlvbiAoY2xpZW50TmFtZSwgYXV0aFRva2VuKSB7XG4gICAgICAgIHJldHVybiBuZXcgUmVxdWVzdE1lc3NhZ2UoSU5JVCwgW2NsaWVudE5hbWUsIGF1dGhUb2tlbl0sIGZ1bmN0aW9uICgpIHsgcmV0dXJuIFwiSU5JVCBcIi5jb25jYXQoY2xpZW50TmFtZSwgXCIgey4uLn1cIik7IH0pO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IFJVTiBtZXNzYWdlLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBxdWVyeSB0aGUgY3lwaGVyIHF1ZXJ5LlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbWV0ZXJzIHRoZSBxdWVyeSBwYXJhbWV0ZXJzLlxuICAgICAqIEByZXR1cm4ge1JlcXVlc3RNZXNzYWdlfSBuZXcgUlVOIG1lc3NhZ2UuXG4gICAgICovXG4gICAgUmVxdWVzdE1lc3NhZ2UucnVuID0gZnVuY3Rpb24gKHF1ZXJ5LCBwYXJhbWV0ZXJzKSB7XG4gICAgICAgIHJldHVybiBuZXcgUmVxdWVzdE1lc3NhZ2UoUlVOLCBbcXVlcnksIHBhcmFtZXRlcnNdLCBmdW5jdGlvbiAoKSB7IHJldHVybiBcIlJVTiBcIi5jb25jYXQocXVlcnksIFwiIFwiKS5jb25jYXQobmVvNGpfZHJpdmVyX2NvcmVfMS5qc29uLnN0cmluZ2lmeShwYXJhbWV0ZXJzKSk7IH0pO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogR2V0IGEgUFVMTF9BTEwgbWVzc2FnZS5cbiAgICAgKiBAcmV0dXJuIHtSZXF1ZXN0TWVzc2FnZX0gdGhlIFBVTExfQUxMIG1lc3NhZ2UuXG4gICAgICovXG4gICAgUmVxdWVzdE1lc3NhZ2UucHVsbEFsbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFBVTExfQUxMX01FU1NBR0U7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBHZXQgYSBSRVNFVCBtZXNzYWdlLlxuICAgICAqIEByZXR1cm4ge1JlcXVlc3RNZXNzYWdlfSB0aGUgUkVTRVQgbWVzc2FnZS5cbiAgICAgKi9cbiAgICBSZXF1ZXN0TWVzc2FnZS5yZXNldCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFJFU0VUX01FU1NBR0U7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBuZXcgSEVMTE8gbWVzc2FnZS5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlckFnZW50IHRoZSB1c2VyIGFnZW50LlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBhdXRoVG9rZW4gdGhlIGF1dGhlbnRpY2F0aW9uIHRva2VuLlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25hbCBzZXJ2ZXIgc2lkZSByb3V0aW5nLCBzZXQgdG8gcm91dGluZyBjb250ZXh0IHRvIHR1cm4gb24gc2VydmVyIHNpZGUgcm91dGluZyAoPiA0LjEpXG4gICAgICogQHJldHVybiB7UmVxdWVzdE1lc3NhZ2V9IG5ldyBIRUxMTyBtZXNzYWdlLlxuICAgICAqL1xuICAgIFJlcXVlc3RNZXNzYWdlLmhlbGxvID0gZnVuY3Rpb24gKHVzZXJBZ2VudCwgYXV0aFRva2VuLCByb3V0aW5nLCBwYXRjaHMpIHtcbiAgICAgICAgaWYgKHJvdXRpbmcgPT09IHZvaWQgMCkgeyByb3V0aW5nID0gbnVsbDsgfVxuICAgICAgICBpZiAocGF0Y2hzID09PSB2b2lkIDApIHsgcGF0Y2hzID0gbnVsbDsgfVxuICAgICAgICB2YXIgbWV0YWRhdGEgPSBPYmplY3QuYXNzaWduKHsgdXNlcl9hZ2VudDogdXNlckFnZW50IH0sIGF1dGhUb2tlbik7XG4gICAgICAgIGlmIChyb3V0aW5nKSB7XG4gICAgICAgICAgICBtZXRhZGF0YS5yb3V0aW5nID0gcm91dGluZztcbiAgICAgICAgfVxuICAgICAgICBpZiAocGF0Y2hzKSB7XG4gICAgICAgICAgICBtZXRhZGF0YS5wYXRjaF9ib2x0ID0gcGF0Y2hzO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUmVxdWVzdE1lc3NhZ2UoSEVMTE8sIFttZXRhZGF0YV0sIGZ1bmN0aW9uICgpIHsgcmV0dXJuIFwiSEVMTE8ge3VzZXJfYWdlbnQ6ICdcIi5jb25jYXQodXNlckFnZW50LCBcIicsIC4uLn1cIik7IH0pO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IEhFTExPIG1lc3NhZ2UuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJBZ2VudCB0aGUgdXNlciBhZ2VudC5cbiAgICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uYWwgc2VydmVyIHNpZGUgcm91dGluZywgc2V0IHRvIHJvdXRpbmcgY29udGV4dCB0byB0dXJuIG9uIHNlcnZlciBzaWRlIHJvdXRpbmcgKD4gNC4xKVxuICAgICAqIEByZXR1cm4ge1JlcXVlc3RNZXNzYWdlfSBuZXcgSEVMTE8gbWVzc2FnZS5cbiAgICAgKi9cbiAgICBSZXF1ZXN0TWVzc2FnZS5oZWxsbzV4MSA9IGZ1bmN0aW9uICh1c2VyQWdlbnQsIHJvdXRpbmcpIHtcbiAgICAgICAgaWYgKHJvdXRpbmcgPT09IHZvaWQgMCkgeyByb3V0aW5nID0gbnVsbDsgfVxuICAgICAgICB2YXIgbWV0YWRhdGEgPSB7IHVzZXJfYWdlbnQ6IHVzZXJBZ2VudCB9O1xuICAgICAgICBpZiAocm91dGluZykge1xuICAgICAgICAgICAgbWV0YWRhdGEucm91dGluZyA9IHJvdXRpbmc7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBSZXF1ZXN0TWVzc2FnZShIRUxMTywgW21ldGFkYXRhXSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gXCJIRUxMTyB7dXNlcl9hZ2VudDogJ1wiLmNvbmNhdCh1c2VyQWdlbnQsIFwiJywgLi4ufVwiKTsgfSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBuZXcgSEVMTE8gbWVzc2FnZS5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlckFnZW50IHRoZSB1c2VyIGFnZW50LlxuICAgICAqIEBwYXJhbSB7Tm90aWZpY2F0aW9uRmlsdGVyfSBub3RpZmljYXRpb25GaWx0ZXIgdGhlIG5vdGlmaWNhdGlvbiBmaWx0ZXIgY29uZmlndXJlZFxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSByb3V0aW5nIHNlcnZlciBzaWRlIHJvdXRpbmcsIHNldCB0byByb3V0aW5nIGNvbnRleHQgdG8gdHVybiBvbiBzZXJ2ZXIgc2lkZSByb3V0aW5nICg+IDQuMSlcbiAgICAgKiBAcmV0dXJuIHtSZXF1ZXN0TWVzc2FnZX0gbmV3IEhFTExPIG1lc3NhZ2UuXG4gICAgICovXG4gICAgUmVxdWVzdE1lc3NhZ2UuaGVsbG81eDIgPSBmdW5jdGlvbiAodXNlckFnZW50LCBub3RpZmljYXRpb25GaWx0ZXIsIHJvdXRpbmcpIHtcbiAgICAgICAgaWYgKG5vdGlmaWNhdGlvbkZpbHRlciA9PT0gdm9pZCAwKSB7IG5vdGlmaWNhdGlvbkZpbHRlciA9IG51bGw7IH1cbiAgICAgICAgaWYgKHJvdXRpbmcgPT09IHZvaWQgMCkgeyByb3V0aW5nID0gbnVsbDsgfVxuICAgICAgICB2YXIgbWV0YWRhdGEgPSB7IHVzZXJfYWdlbnQ6IHVzZXJBZ2VudCB9O1xuICAgICAgICBpZiAobm90aWZpY2F0aW9uRmlsdGVyKSB7XG4gICAgICAgICAgICBpZiAobm90aWZpY2F0aW9uRmlsdGVyLm1pbmltdW1TZXZlcml0eUxldmVsKSB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGEubm90aWZpY2F0aW9uc19taW5pbXVtX3NldmVyaXR5ID0gbm90aWZpY2F0aW9uRmlsdGVyLm1pbmltdW1TZXZlcml0eUxldmVsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG5vdGlmaWNhdGlvbkZpbHRlci5kaXNhYmxlZENhdGVnb3JpZXMpIHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YS5ub3RpZmljYXRpb25zX2Rpc2FibGVkX2NhdGVnb3JpZXMgPSBub3RpZmljYXRpb25GaWx0ZXIuZGlzYWJsZWRDYXRlZ29yaWVzO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChyb3V0aW5nKSB7XG4gICAgICAgICAgICBtZXRhZGF0YS5yb3V0aW5nID0gcm91dGluZztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IFJlcXVlc3RNZXNzYWdlKEhFTExPLCBbbWV0YWRhdGFdLCBmdW5jdGlvbiAoKSB7IHJldHVybiBcIkhFTExPIFwiLmNvbmNhdChuZW80al9kcml2ZXJfY29yZV8xLmpzb24uc3RyaW5naWZ5KG1ldGFkYXRhKSk7IH0pO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IEhFTExPIG1lc3NhZ2UuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJBZ2VudCB0aGUgdXNlciBhZ2VudC5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gYm9sdEFnZW50IHRoZSBib2x0IGFnZW50LlxuICAgICAqIEBwYXJhbSB7Tm90aWZpY2F0aW9uRmlsdGVyfSBub3RpZmljYXRpb25GaWx0ZXIgdGhlIG5vdGlmaWNhdGlvbiBmaWx0ZXIgY29uZmlndXJlZFxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSByb3V0aW5nIHNlcnZlciBzaWRlIHJvdXRpbmcsIHNldCB0byByb3V0aW5nIGNvbnRleHQgdG8gdHVybiBvbiBzZXJ2ZXIgc2lkZSByb3V0aW5nICg+IDQuMSlcbiAgICAgKiBAcmV0dXJuIHtSZXF1ZXN0TWVzc2FnZX0gbmV3IEhFTExPIG1lc3NhZ2UuXG4gICAgICovXG4gICAgUmVxdWVzdE1lc3NhZ2UuaGVsbG81eDMgPSBmdW5jdGlvbiAodXNlckFnZW50LCBib2x0QWdlbnQsIG5vdGlmaWNhdGlvbkZpbHRlciwgcm91dGluZykge1xuICAgICAgICBpZiAobm90aWZpY2F0aW9uRmlsdGVyID09PSB2b2lkIDApIHsgbm90aWZpY2F0aW9uRmlsdGVyID0gbnVsbDsgfVxuICAgICAgICBpZiAocm91dGluZyA9PT0gdm9pZCAwKSB7IHJvdXRpbmcgPSBudWxsOyB9XG4gICAgICAgIHZhciBtZXRhZGF0YSA9IHt9O1xuICAgICAgICBpZiAodXNlckFnZW50KSB7XG4gICAgICAgICAgICBtZXRhZGF0YS51c2VyX2FnZW50ID0gdXNlckFnZW50O1xuICAgICAgICB9XG4gICAgICAgIGlmIChib2x0QWdlbnQpIHtcbiAgICAgICAgICAgIG1ldGFkYXRhLmJvbHRfYWdlbnQgPSB7XG4gICAgICAgICAgICAgICAgcHJvZHVjdDogYm9sdEFnZW50LnByb2R1Y3QsXG4gICAgICAgICAgICAgICAgcGxhdGZvcm06IGJvbHRBZ2VudC5wbGF0Zm9ybSxcbiAgICAgICAgICAgICAgICBsYW5ndWFnZTogYm9sdEFnZW50Lmxhbmd1YWdlLFxuICAgICAgICAgICAgICAgIGxhbmd1YWdlX2RldGFpbHM6IGJvbHRBZ2VudC5sYW5ndWFnZURldGFpbHNcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG5vdGlmaWNhdGlvbkZpbHRlcikge1xuICAgICAgICAgICAgaWYgKG5vdGlmaWNhdGlvbkZpbHRlci5taW5pbXVtU2V2ZXJpdHlMZXZlbCkge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhLm5vdGlmaWNhdGlvbnNfbWluaW11bV9zZXZlcml0eSA9IG5vdGlmaWNhdGlvbkZpbHRlci5taW5pbXVtU2V2ZXJpdHlMZXZlbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChub3RpZmljYXRpb25GaWx0ZXIuZGlzYWJsZWRDYXRlZ29yaWVzKSB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGEubm90aWZpY2F0aW9uc19kaXNhYmxlZF9jYXRlZ29yaWVzID0gbm90aWZpY2F0aW9uRmlsdGVyLmRpc2FibGVkQ2F0ZWdvcmllcztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAocm91dGluZykge1xuICAgICAgICAgICAgbWV0YWRhdGEucm91dGluZyA9IHJvdXRpbmc7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBSZXF1ZXN0TWVzc2FnZShIRUxMTywgW21ldGFkYXRhXSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gXCJIRUxMTyBcIi5jb25jYXQobmVvNGpfZHJpdmVyX2NvcmVfMS5qc29uLnN0cmluZ2lmeShtZXRhZGF0YSkpOyB9KTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyBMT0dPTiBtZXNzYWdlLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGF1dGhUb2tlbiBUaGUgYXV0aCB0b2tlblxuICAgICAqIEByZXR1cm5zIHtSZXF1ZXN0TWVzc2FnZX0gbmV3IExPR09OIG1lc3NhZ2VcbiAgICAgKi9cbiAgICBSZXF1ZXN0TWVzc2FnZS5sb2dvbiA9IGZ1bmN0aW9uIChhdXRoVG9rZW4pIHtcbiAgICAgICAgcmV0dXJuIG5ldyBSZXF1ZXN0TWVzc2FnZShMT0dPTiwgW2F1dGhUb2tlbl0sIGZ1bmN0aW9uICgpIHsgcmV0dXJuICdMT0dPTiB7IC4uLiB9JzsgfSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBuZXcgTE9HT0ZGIG1lc3NhZ2UuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7UmVxdWVzdE1lc3NhZ2V9IG5ldyBMT0dPRkYgbWVzc2FnZVxuICAgICAqL1xuICAgIFJlcXVlc3RNZXNzYWdlLmxvZ29mZiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBSZXF1ZXN0TWVzc2FnZShMT0dPRkYsIFtdLCBmdW5jdGlvbiAoKSB7IHJldHVybiAnTE9HT0ZGJzsgfSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBuZXcgQkVHSU4gbWVzc2FnZS5cbiAgICAgKiBAcGFyYW0ge0Jvb2ttYXJrc30gYm9va21hcmtzIHRoZSBib29rbWFya3MuXG4gICAgICogQHBhcmFtIHtUeENvbmZpZ30gdHhDb25maWcgdGhlIGNvbmZpZ3VyYXRpb24uXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGFiYXNlIHRoZSBkYXRhYmFzZSBuYW1lLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtb2RlIHRoZSBhY2Nlc3MgbW9kZS5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gaW1wZXJzb25hdGVkVXNlciB0aGUgaW1wZXJzb25hdGVkIHVzZXIuXG4gICAgICogQHBhcmFtIHtOb3RpZmljYXRpb25GaWx0ZXJ9IG5vdGlmaWNhdGlvbkZpbHRlciB0aGUgbm90aWZpY2F0aW9uIGZpbHRlclxuICAgICAqIEByZXR1cm4ge1JlcXVlc3RNZXNzYWdlfSBuZXcgQkVHSU4gbWVzc2FnZS5cbiAgICAgKi9cbiAgICBSZXF1ZXN0TWVzc2FnZS5iZWdpbiA9IGZ1bmN0aW9uIChfYSkge1xuICAgICAgICB2YXIgX2IgPSBfYSA9PT0gdm9pZCAwID8ge30gOiBfYSwgYm9va21hcmtzID0gX2IuYm9va21hcmtzLCB0eENvbmZpZyA9IF9iLnR4Q29uZmlnLCBkYXRhYmFzZSA9IF9iLmRhdGFiYXNlLCBtb2RlID0gX2IubW9kZSwgaW1wZXJzb25hdGVkVXNlciA9IF9iLmltcGVyc29uYXRlZFVzZXIsIG5vdGlmaWNhdGlvbkZpbHRlciA9IF9iLm5vdGlmaWNhdGlvbkZpbHRlcjtcbiAgICAgICAgdmFyIG1ldGFkYXRhID0gYnVpbGRUeE1ldGFkYXRhKGJvb2ttYXJrcywgdHhDb25maWcsIGRhdGFiYXNlLCBtb2RlLCBpbXBlcnNvbmF0ZWRVc2VyLCBub3RpZmljYXRpb25GaWx0ZXIpO1xuICAgICAgICByZXR1cm4gbmV3IFJlcXVlc3RNZXNzYWdlKEJFR0lOLCBbbWV0YWRhdGFdLCBmdW5jdGlvbiAoKSB7IHJldHVybiBcIkJFR0lOIFwiLmNvbmNhdChuZW80al9kcml2ZXJfY29yZV8xLmpzb24uc3RyaW5naWZ5KG1ldGFkYXRhKSk7IH0pO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogR2V0IGEgQ09NTUlUIG1lc3NhZ2UuXG4gICAgICogQHJldHVybiB7UmVxdWVzdE1lc3NhZ2V9IHRoZSBDT01NSVQgbWVzc2FnZS5cbiAgICAgKi9cbiAgICBSZXF1ZXN0TWVzc2FnZS5jb21taXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBDT01NSVRfTUVTU0FHRTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEdldCBhIFJPTExCQUNLIG1lc3NhZ2UuXG4gICAgICogQHJldHVybiB7UmVxdWVzdE1lc3NhZ2V9IHRoZSBST0xMQkFDSyBtZXNzYWdlLlxuICAgICAqL1xuICAgIFJlcXVlc3RNZXNzYWdlLnJvbGxiYWNrID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gUk9MTEJBQ0tfTUVTU0FHRTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyBSVU4gbWVzc2FnZSB3aXRoIGFkZGl0aW9uYWwgbWV0YWRhdGEuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHF1ZXJ5IHRoZSBjeXBoZXIgcXVlcnkuXG4gICAgICogQHBhcmFtIHtPYmplY3R9IHBhcmFtZXRlcnMgdGhlIHF1ZXJ5IHBhcmFtZXRlcnMuXG4gICAgICogQHBhcmFtIHtCb29rbWFya3N9IGJvb2ttYXJrcyB0aGUgYm9va21hcmtzLlxuICAgICAqIEBwYXJhbSB7VHhDb25maWd9IHR4Q29uZmlnIHRoZSBjb25maWd1cmF0aW9uLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZSB0aGUgZGF0YWJhc2UgbmFtZS5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbW9kZSB0aGUgYWNjZXNzIG1vZGUuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGltcGVyc29uYXRlZFVzZXIgdGhlIGltcGVyc29uYXRlZCB1c2VyLlxuICAgICAqIEByZXR1cm4ge1JlcXVlc3RNZXNzYWdlfSBuZXcgUlVOIG1lc3NhZ2Ugd2l0aCBhZGRpdGlvbmFsIG1ldGFkYXRhLlxuICAgICAqL1xuICAgIFJlcXVlc3RNZXNzYWdlLnJ1bldpdGhNZXRhZGF0YSA9IGZ1bmN0aW9uIChxdWVyeSwgcGFyYW1ldGVycywgX2EpIHtcbiAgICAgICAgdmFyIF9iID0gX2EgPT09IHZvaWQgMCA/IHt9IDogX2EsIGJvb2ttYXJrcyA9IF9iLmJvb2ttYXJrcywgdHhDb25maWcgPSBfYi50eENvbmZpZywgZGF0YWJhc2UgPSBfYi5kYXRhYmFzZSwgbW9kZSA9IF9iLm1vZGUsIGltcGVyc29uYXRlZFVzZXIgPSBfYi5pbXBlcnNvbmF0ZWRVc2VyLCBub3RpZmljYXRpb25GaWx0ZXIgPSBfYi5ub3RpZmljYXRpb25GaWx0ZXI7XG4gICAgICAgIHZhciBtZXRhZGF0YSA9IGJ1aWxkVHhNZXRhZGF0YShib29rbWFya3MsIHR4Q29uZmlnLCBkYXRhYmFzZSwgbW9kZSwgaW1wZXJzb25hdGVkVXNlciwgbm90aWZpY2F0aW9uRmlsdGVyKTtcbiAgICAgICAgcmV0dXJuIG5ldyBSZXF1ZXN0TWVzc2FnZShSVU4sIFtxdWVyeSwgcGFyYW1ldGVycywgbWV0YWRhdGFdLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gXCJSVU4gXCIuY29uY2F0KHF1ZXJ5LCBcIiBcIikuY29uY2F0KG5lbzRqX2RyaXZlcl9jb3JlXzEuanNvbi5zdHJpbmdpZnkocGFyYW1ldGVycyksIFwiIFwiKS5jb25jYXQobmVvNGpfZHJpdmVyX2NvcmVfMS5qc29uLnN0cmluZ2lmeShtZXRhZGF0YSkpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEdldCBhIEdPT0RCWUUgbWVzc2FnZS5cbiAgICAgKiBAcmV0dXJuIHtSZXF1ZXN0TWVzc2FnZX0gdGhlIEdPT0RCWUUgbWVzc2FnZS5cbiAgICAgKi9cbiAgICBSZXF1ZXN0TWVzc2FnZS5nb29kYnllID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gR09PREJZRV9NRVNTQUdFO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogR2VuZXJhdGVzIGEgbmV3IFBVTEwgbWVzc2FnZSB3aXRoIGFkZGl0aW9uYWwgbWV0YWRhdGEuXG4gICAgICogQHBhcmFtIHtJbnRlZ2VyfG51bWJlcn0gc3RtdElkXG4gICAgICogQHBhcmFtIHtJbnRlZ2VyfG51bWJlcn0gblxuICAgICAqIEByZXR1cm4ge1JlcXVlc3RNZXNzYWdlfSB0aGUgUFVMTCBtZXNzYWdlLlxuICAgICAqL1xuICAgIFJlcXVlc3RNZXNzYWdlLnB1bGwgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgdmFyIF9iID0gX2EgPT09IHZvaWQgMCA/IHt9IDogX2EsIF9jID0gX2Iuc3RtdElkLCBzdG10SWQgPSBfYyA9PT0gdm9pZCAwID8gTk9fU1RBVEVNRU5UX0lEIDogX2MsIF9kID0gX2IubiwgbiA9IF9kID09PSB2b2lkIDAgPyBGRVRDSF9BTEwgOiBfZDtcbiAgICAgICAgdmFyIG1ldGFkYXRhID0gYnVpbGRTdHJlYW1NZXRhZGF0YShzdG10SWQgPT09IG51bGwgfHwgc3RtdElkID09PSB1bmRlZmluZWQgPyBOT19TVEFURU1FTlRfSUQgOiBzdG10SWQsIG4gfHwgRkVUQ0hfQUxMKTtcbiAgICAgICAgcmV0dXJuIG5ldyBSZXF1ZXN0TWVzc2FnZShQVUxMLCBbbWV0YWRhdGFdLCBmdW5jdGlvbiAoKSB7IHJldHVybiBcIlBVTEwgXCIuY29uY2F0KG5lbzRqX2RyaXZlcl9jb3JlXzEuanNvbi5zdHJpbmdpZnkobWV0YWRhdGEpKTsgfSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZXMgYSBuZXcgRElTQ0FSRCBtZXNzYWdlIHdpdGggYWRkaXRpb25hbCBtZXRhZGF0YS5cbiAgICAgKiBAcGFyYW0ge0ludGVnZXJ8bnVtYmVyfSBzdG10SWRcbiAgICAgKiBAcGFyYW0ge0ludGVnZXJ8bnVtYmVyfSBuXG4gICAgICogQHJldHVybiB7UmVxdWVzdE1lc3NhZ2V9IHRoZSBQVUxMIG1lc3NhZ2UuXG4gICAgICovXG4gICAgUmVxdWVzdE1lc3NhZ2UuZGlzY2FyZCA9IGZ1bmN0aW9uIChfYSkge1xuICAgICAgICB2YXIgX2IgPSBfYSA9PT0gdm9pZCAwID8ge30gOiBfYSwgX2MgPSBfYi5zdG10SWQsIHN0bXRJZCA9IF9jID09PSB2b2lkIDAgPyBOT19TVEFURU1FTlRfSUQgOiBfYywgX2QgPSBfYi5uLCBuID0gX2QgPT09IHZvaWQgMCA/IEZFVENIX0FMTCA6IF9kO1xuICAgICAgICB2YXIgbWV0YWRhdGEgPSBidWlsZFN0cmVhbU1ldGFkYXRhKHN0bXRJZCA9PT0gbnVsbCB8fCBzdG10SWQgPT09IHVuZGVmaW5lZCA/IE5PX1NUQVRFTUVOVF9JRCA6IHN0bXRJZCwgbiB8fCBGRVRDSF9BTEwpO1xuICAgICAgICByZXR1cm4gbmV3IFJlcXVlc3RNZXNzYWdlKERJU0NBUkQsIFttZXRhZGF0YV0sIGZ1bmN0aW9uICgpIHsgcmV0dXJuIFwiRElTQ0FSRCBcIi5jb25jYXQobmVvNGpfZHJpdmVyX2NvcmVfMS5qc29uLnN0cmluZ2lmeShtZXRhZGF0YSkpOyB9KTtcbiAgICB9O1xuICAgIFJlcXVlc3RNZXNzYWdlLnRlbGVtZXRyeSA9IGZ1bmN0aW9uIChfYSkge1xuICAgICAgICB2YXIgYXBpID0gX2EuYXBpO1xuICAgICAgICB2YXIgcGFyc2VkQXBpID0gKDAsIG5lbzRqX2RyaXZlcl9jb3JlXzEuaW50KShhcGkpO1xuICAgICAgICByZXR1cm4gbmV3IFJlcXVlc3RNZXNzYWdlKFRFTEVNRVRSWSwgW3BhcnNlZEFwaV0sIGZ1bmN0aW9uICgpIHsgcmV0dXJuIFwiVEVMRU1FVFJZIFwiLmNvbmNhdChwYXJzZWRBcGkudG9TdHJpbmcoKSk7IH0pO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogR2VuZXJhdGUgdGhlIFJPVVRFIG1lc3NhZ2UsIHRoaXMgbWVzc2FnZSBpcyB1c2VkIHRvIGZldGNoIHRoZSByb3V0aW5nIHRhYmxlIGZyb20gdGhlIHNlcnZlclxuICAgICAqXG4gICAgICogQHBhcmFtIHtvYmplY3R9IHJvdXRpbmdDb250ZXh0IFRoZSByb3V0aW5nIGNvbnRleHQgdXNlZCB0byBkZWZpbmUgdGhlIHJvdXRpbmcgdGFibGUuIE11bHRpLWRhdGFjZW50ZXIgZGVwbG95bWVudHMgaXMgb25lIG9mIGl0cyB1c2UgY2FzZXNcbiAgICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBib29rbWFya3MgVGhlIGxpc3Qgb2YgdGhlIGJvb2ttYXJrcyBzaG91bGQgYmUgdXNlZFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZU5hbWUgVGhlIG5hbWUgb2YgdGhlIGRhdGFiYXNlIHRvIGdldCB0aGUgcm91dGluZyB0YWJsZSBmb3IuXG4gICAgICogQHJldHVybiB7UmVxdWVzdE1lc3NhZ2V9IHRoZSBST1VURSBtZXNzYWdlLlxuICAgICAqL1xuICAgIFJlcXVlc3RNZXNzYWdlLnJvdXRlID0gZnVuY3Rpb24gKHJvdXRpbmdDb250ZXh0LCBib29rbWFya3MsIGRhdGFiYXNlTmFtZSkge1xuICAgICAgICBpZiAocm91dGluZ0NvbnRleHQgPT09IHZvaWQgMCkgeyByb3V0aW5nQ29udGV4dCA9IHt9OyB9XG4gICAgICAgIGlmIChib29rbWFya3MgPT09IHZvaWQgMCkgeyBib29rbWFya3MgPSBbXTsgfVxuICAgICAgICBpZiAoZGF0YWJhc2VOYW1lID09PSB2b2lkIDApIHsgZGF0YWJhc2VOYW1lID0gbnVsbDsgfVxuICAgICAgICByZXR1cm4gbmV3IFJlcXVlc3RNZXNzYWdlKFJPVVRFLCBbcm91dGluZ0NvbnRleHQsIGJvb2ttYXJrcywgZGF0YWJhc2VOYW1lXSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIFwiUk9VVEUgXCIuY29uY2F0KG5lbzRqX2RyaXZlcl9jb3JlXzEuanNvbi5zdHJpbmdpZnkocm91dGluZ0NvbnRleHQpLCBcIiBcIikuY29uY2F0KG5lbzRqX2RyaXZlcl9jb3JlXzEuanNvbi5zdHJpbmdpZnkoYm9va21hcmtzKSwgXCIgXCIpLmNvbmNhdChkYXRhYmFzZU5hbWUpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlIHRoZSBST1VURSBtZXNzYWdlLCB0aGlzIG1lc3NhZ2UgaXMgdXNlZCB0byBmZXRjaCB0aGUgcm91dGluZyB0YWJsZSBmcm9tIHRoZSBzZXJ2ZXJcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSByb3V0aW5nQ29udGV4dCBUaGUgcm91dGluZyBjb250ZXh0IHVzZWQgdG8gZGVmaW5lIHRoZSByb3V0aW5nIHRhYmxlLiBNdWx0aS1kYXRhY2VudGVyIGRlcGxveW1lbnRzIGlzIG9uZSBvZiBpdHMgdXNlIGNhc2VzXG4gICAgICogQHBhcmFtIHtzdHJpbmdbXX0gYm9va21hcmtzIFRoZSBsaXN0IG9mIHRoZSBib29rbWFya3Mgc2hvdWxkIGJlIHVzZWRcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gZGF0YWJhc2VDb250ZXh0IFRoZSBjb250ZXh0IGluZm9yYW10aW9uIG9mIHRoZSBkYXRhYmFzZSB0byBnZXQgdGhlIHJvdXRpbmcgdGFibGUgZm9yLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZUNvbnRleHQuZGF0YWJhc2VOYW1lIFRoZSBuYW1lIG9mIHRoZSBkYXRhYmFzZSB0byBnZXQgdGhlIHJvdXRpbmcgdGFibGUuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGFiYXNlQ29udGV4dC5pbXBlcnNvbmF0ZWRVc2VyIFRoZSBuYW1lIG9mIHRoZSB1c2VyIHRvIGltcGVyc29uYXRpb24gd2hlbiBnZXR0aW5nIHRoZSByb3V0aW5nIHRhYmxlLlxuICAgICAqIEByZXR1cm4ge1JlcXVlc3RNZXNzYWdlfSB0aGUgUk9VVEUgbWVzc2FnZS5cbiAgICAgKi9cbiAgICBSZXF1ZXN0TWVzc2FnZS5yb3V0ZVY0eDQgPSBmdW5jdGlvbiAocm91dGluZ0NvbnRleHQsIGJvb2ttYXJrcywgZGF0YWJhc2VDb250ZXh0KSB7XG4gICAgICAgIGlmIChyb3V0aW5nQ29udGV4dCA9PT0gdm9pZCAwKSB7IHJvdXRpbmdDb250ZXh0ID0ge307IH1cbiAgICAgICAgaWYgKGJvb2ttYXJrcyA9PT0gdm9pZCAwKSB7IGJvb2ttYXJrcyA9IFtdOyB9XG4gICAgICAgIGlmIChkYXRhYmFzZUNvbnRleHQgPT09IHZvaWQgMCkgeyBkYXRhYmFzZUNvbnRleHQgPSB7fTsgfVxuICAgICAgICB2YXIgZGJDb250ZXh0ID0ge307XG4gICAgICAgIGlmIChkYXRhYmFzZUNvbnRleHQuZGF0YWJhc2VOYW1lKSB7XG4gICAgICAgICAgICBkYkNvbnRleHQuZGIgPSBkYXRhYmFzZUNvbnRleHQuZGF0YWJhc2VOYW1lO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkYXRhYmFzZUNvbnRleHQuaW1wZXJzb25hdGVkVXNlcikge1xuICAgICAgICAgICAgZGJDb250ZXh0LmltcF91c2VyID0gZGF0YWJhc2VDb250ZXh0LmltcGVyc29uYXRlZFVzZXI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBSZXF1ZXN0TWVzc2FnZShST1VURSwgW3JvdXRpbmdDb250ZXh0LCBib29rbWFya3MsIGRiQ29udGV4dF0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBcIlJPVVRFIFwiLmNvbmNhdChuZW80al9kcml2ZXJfY29yZV8xLmpzb24uc3RyaW5naWZ5KHJvdXRpbmdDb250ZXh0KSwgXCIgXCIpLmNvbmNhdChuZW80al9kcml2ZXJfY29yZV8xLmpzb24uc3RyaW5naWZ5KGJvb2ttYXJrcyksIFwiIFwiKS5jb25jYXQobmVvNGpfZHJpdmVyX2NvcmVfMS5qc29uLnN0cmluZ2lmeShkYkNvbnRleHQpKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gUmVxdWVzdE1lc3NhZ2U7XG59KCkpO1xuZXhwb3J0cy5kZWZhdWx0ID0gUmVxdWVzdE1lc3NhZ2U7XG4vKipcbiAqIENyZWF0ZSBhbiBvYmplY3QgdGhhdCByZXByZXNlbnQgdHJhbnNhY3Rpb24gbWV0YWRhdGEuXG4gKiBAcGFyYW0ge0Jvb2ttYXJrc30gYm9va21hcmtzIHRoZSBib29rbWFya3MuXG4gKiBAcGFyYW0ge1R4Q29uZmlnfSB0eENvbmZpZyB0aGUgY29uZmlndXJhdGlvbi5cbiAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZSB0aGUgZGF0YWJhc2UgbmFtZS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBtb2RlIHRoZSBhY2Nlc3MgbW9kZS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBpbXBlcnNvbmF0ZWRVc2VyIHRoZSBpbXBlcnNvbmF0ZWQgdXNlciBtb2RlLlxuICogQHBhcmFtIHtub3RpZmljYXRpb25GaWx0ZXJ9IG5vdGlmaWNhdGlvbkZpbHRlciB0aGUgbm90aWZpY2F0aW9uIGZpbHRlclxuICogQHJldHVybiB7T2JqZWN0fSBhIG1ldGFkYXRhIG9iamVjdC5cbiAqL1xuZnVuY3Rpb24gYnVpbGRUeE1ldGFkYXRhKGJvb2ttYXJrcywgdHhDb25maWcsIGRhdGFiYXNlLCBtb2RlLCBpbXBlcnNvbmF0ZWRVc2VyLCBub3RpZmljYXRpb25GaWx0ZXIpIHtcbiAgICB2YXIgbWV0YWRhdGEgPSB7fTtcbiAgICBpZiAoIWJvb2ttYXJrcy5pc0VtcHR5KCkpIHtcbiAgICAgICAgbWV0YWRhdGEuYm9va21hcmtzID0gYm9va21hcmtzLnZhbHVlcygpO1xuICAgIH1cbiAgICBpZiAodHhDb25maWcudGltZW91dCAhPT0gbnVsbCkge1xuICAgICAgICBtZXRhZGF0YS50eF90aW1lb3V0ID0gdHhDb25maWcudGltZW91dDtcbiAgICB9XG4gICAgaWYgKHR4Q29uZmlnLm1ldGFkYXRhKSB7XG4gICAgICAgIG1ldGFkYXRhLnR4X21ldGFkYXRhID0gdHhDb25maWcubWV0YWRhdGE7XG4gICAgfVxuICAgIGlmIChkYXRhYmFzZSkge1xuICAgICAgICBtZXRhZGF0YS5kYiA9IGFzc2VydFN0cmluZyhkYXRhYmFzZSwgJ2RhdGFiYXNlJyk7XG4gICAgfVxuICAgIGlmIChpbXBlcnNvbmF0ZWRVc2VyKSB7XG4gICAgICAgIG1ldGFkYXRhLmltcF91c2VyID0gYXNzZXJ0U3RyaW5nKGltcGVyc29uYXRlZFVzZXIsICdpbXBlcnNvbmF0ZWRVc2VyJyk7XG4gICAgfVxuICAgIGlmIChtb2RlID09PSBBQ0NFU1NfTU9ERV9SRUFEKSB7XG4gICAgICAgIG1ldGFkYXRhLm1vZGUgPSBSRUFEX01PREU7XG4gICAgfVxuICAgIGlmIChub3RpZmljYXRpb25GaWx0ZXIpIHtcbiAgICAgICAgaWYgKG5vdGlmaWNhdGlvbkZpbHRlci5taW5pbXVtU2V2ZXJpdHlMZXZlbCkge1xuICAgICAgICAgICAgbWV0YWRhdGEubm90aWZpY2F0aW9uc19taW5pbXVtX3NldmVyaXR5ID0gbm90aWZpY2F0aW9uRmlsdGVyLm1pbmltdW1TZXZlcml0eUxldmVsO1xuICAgICAgICB9XG4gICAgICAgIGlmIChub3RpZmljYXRpb25GaWx0ZXIuZGlzYWJsZWRDYXRlZ29yaWVzKSB7XG4gICAgICAgICAgICBtZXRhZGF0YS5ub3RpZmljYXRpb25zX2Rpc2FibGVkX2NhdGVnb3JpZXMgPSBub3RpZmljYXRpb25GaWx0ZXIuZGlzYWJsZWRDYXRlZ29yaWVzO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBtZXRhZGF0YTtcbn1cbi8qKlxuICogQ3JlYXRlIGFuIG9iamVjdCB0aGF0IHJlcHJlc2VudHMgc3RyZWFtaW5nIG1ldGFkYXRhLlxuICogQHBhcmFtIHtJbnRlZ2VyfG51bWJlcn0gc3RtdElkIFRoZSBxdWVyeSBpZCB0byBzdHJlYW0gaXRzIHJlc3VsdHMuXG4gKiBAcGFyYW0ge0ludGVnZXJ8bnVtYmVyfSBuIFRoZSBudW1iZXIgb2YgcmVjb3JkcyB0byBzdHJlYW0uXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBhIG1ldGFkYXRhIG9iamVjdC5cbiAqL1xuZnVuY3Rpb24gYnVpbGRTdHJlYW1NZXRhZGF0YShzdG10SWQsIG4pIHtcbiAgICB2YXIgbWV0YWRhdGEgPSB7IG46ICgwLCBuZW80al9kcml2ZXJfY29yZV8xLmludCkobikgfTtcbiAgICBpZiAoc3RtdElkICE9PSBOT19TVEFURU1FTlRfSUQpIHtcbiAgICAgICAgbWV0YWRhdGEucWlkID0gKDAsIG5lbzRqX2RyaXZlcl9jb3JlXzEuaW50KShzdG10SWQpO1xuICAgIH1cbiAgICByZXR1cm4gbWV0YWRhdGE7XG59XG4vLyBjb25zdGFudHMgZm9yIG1lc3NhZ2VzIHRoYXQgbmV2ZXIgY2hhbmdlXG52YXIgUFVMTF9BTExfTUVTU0FHRSA9IG5ldyBSZXF1ZXN0TWVzc2FnZShQVUxMX0FMTCwgW10sIGZ1bmN0aW9uICgpIHsgcmV0dXJuICdQVUxMX0FMTCc7IH0pO1xudmFyIFJFU0VUX01FU1NBR0UgPSBuZXcgUmVxdWVzdE1lc3NhZ2UoUkVTRVQsIFtdLCBmdW5jdGlvbiAoKSB7IHJldHVybiAnUkVTRVQnOyB9KTtcbnZhciBDT01NSVRfTUVTU0FHRSA9IG5ldyBSZXF1ZXN0TWVzc2FnZShDT01NSVQsIFtdLCBmdW5jdGlvbiAoKSB7IHJldHVybiAnQ09NTUlUJzsgfSk7XG52YXIgUk9MTEJBQ0tfTUVTU0FHRSA9IG5ldyBSZXF1ZXN0TWVzc2FnZShST0xMQkFDSywgW10sIGZ1bmN0aW9uICgpIHsgcmV0dXJuICdST0xMQkFDSyc7IH0pO1xudmFyIEdPT0RCWUVfTUVTU0FHRSA9IG5ldyBSZXF1ZXN0TWVzc2FnZShHT09EQllFLCBbXSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gJ0dPT0RCWUUnOyB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/request-message.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/response-handler.js":
/*!********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/response-handler.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\n// Signature bytes for each response message type\nvar SUCCESS = 0x70; // 0111 0000 // SUCCESS <metadata>\nvar RECORD = 0x71; // 0111 0001 // RECORD <value>\nvar IGNORED = 0x7e; // 0111 1110 // IGNORED <metadata>\nvar FAILURE = 0x7f; // 0111 1111 // FAILURE <metadata>\nfunction NO_OP() { }\nfunction NO_OP_IDENTITY(subject) {\n    return subject;\n}\nvar NO_OP_OBSERVER = {\n    onNext: NO_OP,\n    onCompleted: NO_OP,\n    onError: NO_OP\n};\n/**\n * Treat the protocol responses and notify the observers\n */\nvar ResponseHandler = /** @class */ (function () {\n    /**\n     * Called when something went wrong with the connectio\n     * @callback ResponseHandler~Observer~OnErrorApplyTransformation\n     * @param {any} error The error\n     * @returns {any} The new error\n     */\n    /**\n     * Called when something went wrong with the connectio\n     * @callback ResponseHandler~Observer~OnError\n     * @param {any} error The error\n     */\n    /**\n     * Called when something went wrong with the connectio\n     * @callback ResponseHandler~MetadataTransformer\n     * @param {any} metadata The metadata got onSuccess\n     * @returns {any} The transformed metadata\n     */\n    /**\n     * @typedef {Object} ResponseHandler~Observer\n     * @property {ResponseHandler~Observer~OnError} onError Invoke when a connection error occurs\n     * @property {ResponseHandler~Observer~OnError} onFailure Invoke when a protocol failure occurs\n     * @property {ResponseHandler~Observer~OnErrorApplyTransformation} onErrorApplyTransformation Invoke just after the failure occurs,\n     *  before notify to respective observer. This method should transform the failure reason to the approprited one.\n     */\n    /**\n     * Constructor\n     * @param {Object} param The params\n     * @param {ResponseHandler~MetadataTransformer} transformMetadata Transform metadata when the SUCCESS is received.\n     * @param {Channel} channel The channel used to exchange messages\n     * @param {Logger} log The logger\n     * @param {ResponseHandler~Observer} observer Object which will be notified about errors\n     */\n    function ResponseHandler(_a) {\n        var _b = _a === void 0 ? {} : _a, transformMetadata = _b.transformMetadata, log = _b.log, observer = _b.observer;\n        this._pendingObservers = [];\n        this._log = log;\n        this._transformMetadata = transformMetadata || NO_OP_IDENTITY;\n        this._observer = Object.assign({\n            onObserversCountChange: NO_OP,\n            onError: NO_OP,\n            onFailure: NO_OP,\n            onErrorApplyTransformation: NO_OP_IDENTITY\n        }, observer);\n    }\n    Object.defineProperty(ResponseHandler.prototype, \"currentFailure\", {\n        get: function () {\n            return this._currentFailure;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ResponseHandler.prototype.handleResponse = function (msg) {\n        var payload = msg.fields[0];\n        switch (msg.signature) {\n            case RECORD:\n                if (this._log.isDebugEnabled()) {\n                    this._log.debug(\"S: RECORD \".concat(neo4j_driver_core_1.json.stringify(msg)));\n                }\n                this._currentObserver.onNext(payload);\n                break;\n            case SUCCESS:\n                if (this._log.isDebugEnabled()) {\n                    this._log.debug(\"S: SUCCESS \".concat(neo4j_driver_core_1.json.stringify(msg)));\n                }\n                try {\n                    var metadata = this._transformMetadata(payload);\n                    this._currentObserver.onCompleted(metadata);\n                }\n                finally {\n                    this._updateCurrentObserver();\n                }\n                break;\n            case FAILURE:\n                if (this._log.isDebugEnabled()) {\n                    this._log.debug(\"S: FAILURE \".concat(neo4j_driver_core_1.json.stringify(msg)));\n                }\n                try {\n                    var standardizedCode = _standardizeCode(payload.code);\n                    var error = (0, neo4j_driver_core_1.newError)(payload.message, standardizedCode);\n                    this._currentFailure = this._observer.onErrorApplyTransformation(error);\n                    this._currentObserver.onError(this._currentFailure);\n                }\n                finally {\n                    this._updateCurrentObserver();\n                    // Things are now broken. Pending observers will get FAILURE messages routed until we are done handling this failure.\n                    this._observer.onFailure(this._currentFailure);\n                }\n                break;\n            case IGNORED:\n                if (this._log.isDebugEnabled()) {\n                    this._log.debug(\"S: IGNORED \".concat(neo4j_driver_core_1.json.stringify(msg)));\n                }\n                try {\n                    if (this._currentFailure && this._currentObserver.onError) {\n                        this._currentObserver.onError(this._currentFailure);\n                    }\n                    else if (this._currentObserver.onError) {\n                        this._currentObserver.onError((0, neo4j_driver_core_1.newError)('Ignored either because of an error or RESET'));\n                    }\n                }\n                finally {\n                    this._updateCurrentObserver();\n                }\n                break;\n            default:\n                this._observer.onError((0, neo4j_driver_core_1.newError)('Unknown Bolt protocol message: ' + msg));\n        }\n    };\n    /*\n     * Pop next pending observer form the list of observers and make it current observer.\n     * @protected\n     */\n    ResponseHandler.prototype._updateCurrentObserver = function () {\n        this._currentObserver = this._pendingObservers.shift();\n        this._observer.onObserversCountChange(this._observersCount);\n    };\n    Object.defineProperty(ResponseHandler.prototype, \"_observersCount\", {\n        get: function () {\n            return this._currentObserver == null ? this._pendingObservers.length : this._pendingObservers.length + 1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ResponseHandler.prototype._queueObserver = function (observer) {\n        observer = observer || NO_OP_OBSERVER;\n        observer.onCompleted = observer.onCompleted || NO_OP;\n        observer.onError = observer.onError || NO_OP;\n        observer.onNext = observer.onNext || NO_OP;\n        if (this._currentObserver === undefined) {\n            this._currentObserver = observer;\n        }\n        else {\n            this._pendingObservers.push(observer);\n        }\n        this._observer.onObserversCountChange(this._observersCount);\n        return true;\n    };\n    ResponseHandler.prototype._notifyErrorToObservers = function (error) {\n        if (this._currentObserver && this._currentObserver.onError) {\n            this._currentObserver.onError(error);\n        }\n        while (this._pendingObservers.length > 0) {\n            var observer = this._pendingObservers.shift();\n            if (observer && observer.onError) {\n                observer.onError(error);\n            }\n        }\n    };\n    ResponseHandler.prototype.hasOngoingObservableRequests = function () {\n        return this._currentObserver != null || this._pendingObservers.length > 0;\n    };\n    ResponseHandler.prototype._resetFailure = function () {\n        this._currentFailure = null;\n    };\n    return ResponseHandler;\n}());\nexports[\"default\"] = ResponseHandler;\n/**\n * Standardize error classification that are different between 5.x and previous versions.\n *\n * The transient error were clean-up for being retrieable and because of this\n * `Terminated` and `LockClientStopped` were reclassified as `ClientError`.\n *\n * @param {string} code\n * @returns {string} the standardized error code\n */\nfunction _standardizeCode(code) {\n    if (code === 'Neo.TransientError.Transaction.Terminated') {\n        return 'Neo.ClientError.Transaction.Terminated';\n    }\n    else if (code === 'Neo.TransientError.Transaction.LockClientStopped') {\n        return 'Neo.ClientError.Transaction.LockClientStopped';\n    }\n    return code;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/response-handler.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/routing-table-raw.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/routing-table-raw.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line no-unused-vars\nvar neo4j_driver_core_1 = __importDefault(__webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\"));\n/**\n * Represente the raw version of the routing table\n */\nvar RawRoutingTable = /** @class */ (function () {\n    function RawRoutingTable() {\n    }\n    /**\n     * Constructs the raw routing table for Record based result\n     * @param {Record} record The record which will be used get the raw routing table\n     * @returns {RawRoutingTable} The raw routing table\n     */\n    RawRoutingTable.ofRecord = function (record) {\n        if (record === null) {\n            return RawRoutingTable.ofNull();\n        }\n        return new RecordRawRoutingTable(record);\n    };\n    /**\n     * Constructs the raw routing table for Success result for a Routing Message\n     * @param {object} response The result\n     * @returns {RawRoutingTable} The raw routing table\n     */\n    RawRoutingTable.ofMessageResponse = function (response) {\n        if (response === null) {\n            return RawRoutingTable.ofNull();\n        }\n        return new ResponseRawRoutingTable(response);\n    };\n    /**\n     * Construct the raw routing table of a null response\n     *\n     * @returns {RawRoutingTable} the raw routing table\n     */\n    RawRoutingTable.ofNull = function () {\n        return new NullRawRoutingTable();\n    };\n    Object.defineProperty(RawRoutingTable.prototype, \"ttl\", {\n        /**\n         * Get raw ttl\n         *\n         * @returns {number|string} ttl Time to live\n         */\n        get: function () {\n            throw new Error('Not implemented');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RawRoutingTable.prototype, \"db\", {\n        /**\n         * Get raw db\n         *\n         * @returns {string?} The database name\n         */\n        get: function () {\n            throw new Error('Not implemented');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RawRoutingTable.prototype, \"servers\", {\n        /**\n         *\n         * @typedef {Object} ServerRole\n         * @property {string} role the role of the address on the cluster\n         * @property {string[]} addresses the address within the role\n         *\n         * @return {ServerRole[]} list of servers addresses\n         */\n        get: function () {\n            throw new Error('Not implemented');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RawRoutingTable.prototype, \"isNull\", {\n        /**\n         * Indicates the result is null\n         *\n         * @returns {boolean} Is null\n         */\n        get: function () {\n            throw new Error('Not implemented');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return RawRoutingTable;\n}());\nexports[\"default\"] = RawRoutingTable;\n/**\n * Get the raw routing table information from route message response\n */\nvar ResponseRawRoutingTable = /** @class */ (function (_super) {\n    __extends(ResponseRawRoutingTable, _super);\n    function ResponseRawRoutingTable(response) {\n        var _this = _super.call(this) || this;\n        _this._response = response;\n        return _this;\n    }\n    Object.defineProperty(ResponseRawRoutingTable.prototype, \"ttl\", {\n        get: function () {\n            return this._response.rt.ttl;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ResponseRawRoutingTable.prototype, \"servers\", {\n        get: function () {\n            return this._response.rt.servers;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ResponseRawRoutingTable.prototype, \"db\", {\n        get: function () {\n            return this._response.rt.db;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ResponseRawRoutingTable.prototype, \"isNull\", {\n        get: function () {\n            return this._response === null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return ResponseRawRoutingTable;\n}(RawRoutingTable));\n/**\n * Null routing table\n */\nvar NullRawRoutingTable = /** @class */ (function (_super) {\n    __extends(NullRawRoutingTable, _super);\n    function NullRawRoutingTable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(NullRawRoutingTable.prototype, \"isNull\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return NullRawRoutingTable;\n}(RawRoutingTable));\n/**\n * Get the raw routing table information from the record\n */\nvar RecordRawRoutingTable = /** @class */ (function (_super) {\n    __extends(RecordRawRoutingTable, _super);\n    function RecordRawRoutingTable(record) {\n        var _this = _super.call(this) || this;\n        _this._record = record;\n        return _this;\n    }\n    Object.defineProperty(RecordRawRoutingTable.prototype, \"ttl\", {\n        get: function () {\n            return this._record.get('ttl');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RecordRawRoutingTable.prototype, \"servers\", {\n        get: function () {\n            return this._record.get('servers');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RecordRawRoutingTable.prototype, \"db\", {\n        get: function () {\n            return this._record.has('db') ? this._record.get('db') : null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RecordRawRoutingTable.prototype, \"isNull\", {\n        get: function () {\n            return this._record === null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return RecordRawRoutingTable;\n}(RawRoutingTable));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC9yb3V0aW5nLXRhYmxlLXJhdy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0JBQWdCLHNDQUFzQyxrQkFBa0I7QUFDdkYsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsbUJBQU8sQ0FBQyw4RUFBbUI7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixpQkFBaUIsaUJBQWlCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixpQkFBaUIsaUJBQWlCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGlCQUFpQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGVBQWU7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsU0FBUztBQUM5QjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsUUFBUTtBQUM3QixzQkFBc0IsUUFBUTtBQUM5QixzQkFBc0IsVUFBVTtBQUNoQztBQUNBLG9CQUFvQixjQUFjO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLFNBQVM7QUFDOUI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDO0FBQ0Qsa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25lbzRqLW5leHQtYXBwLy4vbm9kZV9tb2R1bGVzL25lbzRqLWRyaXZlci1ib2x0LWNvbm5lY3Rpb24vbGliL2JvbHQvcm91dGluZy10YWJsZS1yYXcuanM/ZDJhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChiLCBwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgICAgIHJldHVybiBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgIH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYiAhPT0gXCJmdW5jdGlvblwiICYmIGIgIT09IG51bGwpXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIiArIFN0cmluZyhiKSArIFwiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKipcbiAqIENvcHlyaWdodCAoYykgXCJOZW80alwiXG4gKiBOZW80aiBTd2VkZW4gQUIgW2h0dHBzOi8vbmVvNGouY29tXVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG52YXIgbmVvNGpfZHJpdmVyX2NvcmVfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwibmVvNGotZHJpdmVyLWNvcmVcIikpO1xuLyoqXG4gKiBSZXByZXNlbnRlIHRoZSByYXcgdmVyc2lvbiBvZiB0aGUgcm91dGluZyB0YWJsZVxuICovXG52YXIgUmF3Um91dGluZ1RhYmxlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFJhd1JvdXRpbmdUYWJsZSgpIHtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0cyB0aGUgcmF3IHJvdXRpbmcgdGFibGUgZm9yIFJlY29yZCBiYXNlZCByZXN1bHRcbiAgICAgKiBAcGFyYW0ge1JlY29yZH0gcmVjb3JkIFRoZSByZWNvcmQgd2hpY2ggd2lsbCBiZSB1c2VkIGdldCB0aGUgcmF3IHJvdXRpbmcgdGFibGVcbiAgICAgKiBAcmV0dXJucyB7UmF3Um91dGluZ1RhYmxlfSBUaGUgcmF3IHJvdXRpbmcgdGFibGVcbiAgICAgKi9cbiAgICBSYXdSb3V0aW5nVGFibGUub2ZSZWNvcmQgPSBmdW5jdGlvbiAocmVjb3JkKSB7XG4gICAgICAgIGlmIChyZWNvcmQgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBSYXdSb3V0aW5nVGFibGUub2ZOdWxsKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBSZWNvcmRSYXdSb3V0aW5nVGFibGUocmVjb3JkKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdHMgdGhlIHJhdyByb3V0aW5nIHRhYmxlIGZvciBTdWNjZXNzIHJlc3VsdCBmb3IgYSBSb3V0aW5nIE1lc3NhZ2VcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gcmVzcG9uc2UgVGhlIHJlc3VsdFxuICAgICAqIEByZXR1cm5zIHtSYXdSb3V0aW5nVGFibGV9IFRoZSByYXcgcm91dGluZyB0YWJsZVxuICAgICAqL1xuICAgIFJhd1JvdXRpbmdUYWJsZS5vZk1lc3NhZ2VSZXNwb25zZSA9IGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICBpZiAocmVzcG9uc2UgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBSYXdSb3V0aW5nVGFibGUub2ZOdWxsKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBSZXNwb25zZVJhd1JvdXRpbmdUYWJsZShyZXNwb25zZSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgdGhlIHJhdyByb3V0aW5nIHRhYmxlIG9mIGEgbnVsbCByZXNwb25zZVxuICAgICAqXG4gICAgICogQHJldHVybnMge1Jhd1JvdXRpbmdUYWJsZX0gdGhlIHJhdyByb3V0aW5nIHRhYmxlXG4gICAgICovXG4gICAgUmF3Um91dGluZ1RhYmxlLm9mTnVsbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBOdWxsUmF3Um91dGluZ1RhYmxlKCk7XG4gICAgfTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoUmF3Um91dGluZ1RhYmxlLnByb3RvdHlwZSwgXCJ0dGxcIiwge1xuICAgICAgICAvKipcbiAgICAgICAgICogR2V0IHJhdyB0dGxcbiAgICAgICAgICpcbiAgICAgICAgICogQHJldHVybnMge251bWJlcnxzdHJpbmd9IHR0bCBUaW1lIHRvIGxpdmVcbiAgICAgICAgICovXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdOb3QgaW1wbGVtZW50ZWQnKTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShSYXdSb3V0aW5nVGFibGUucHJvdG90eXBlLCBcImRiXCIsIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldCByYXcgZGJcbiAgICAgICAgICpcbiAgICAgICAgICogQHJldHVybnMge3N0cmluZz99IFRoZSBkYXRhYmFzZSBuYW1lXG4gICAgICAgICAqL1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTm90IGltcGxlbWVudGVkJyk7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoUmF3Um91dGluZ1RhYmxlLnByb3RvdHlwZSwgXCJzZXJ2ZXJzXCIsIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqXG4gICAgICAgICAqIEB0eXBlZGVmIHtPYmplY3R9IFNlcnZlclJvbGVcbiAgICAgICAgICogQHByb3BlcnR5IHtzdHJpbmd9IHJvbGUgdGhlIHJvbGUgb2YgdGhlIGFkZHJlc3Mgb24gdGhlIGNsdXN0ZXJcbiAgICAgICAgICogQHByb3BlcnR5IHtzdHJpbmdbXX0gYWRkcmVzc2VzIHRoZSBhZGRyZXNzIHdpdGhpbiB0aGUgcm9sZVxuICAgICAgICAgKlxuICAgICAgICAgKiBAcmV0dXJuIHtTZXJ2ZXJSb2xlW119IGxpc3Qgb2Ygc2VydmVycyBhZGRyZXNzZXNcbiAgICAgICAgICovXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdOb3QgaW1wbGVtZW50ZWQnKTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShSYXdSb3V0aW5nVGFibGUucHJvdG90eXBlLCBcImlzTnVsbFwiLCB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBJbmRpY2F0ZXMgdGhlIHJlc3VsdCBpcyBudWxsXG4gICAgICAgICAqXG4gICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSBJcyBudWxsXG4gICAgICAgICAqL1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTm90IGltcGxlbWVudGVkJyk7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gUmF3Um91dGluZ1RhYmxlO1xufSgpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IFJhd1JvdXRpbmdUYWJsZTtcbi8qKlxuICogR2V0IHRoZSByYXcgcm91dGluZyB0YWJsZSBpbmZvcm1hdGlvbiBmcm9tIHJvdXRlIG1lc3NhZ2UgcmVzcG9uc2VcbiAqL1xudmFyIFJlc3BvbnNlUmF3Um91dGluZ1RhYmxlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhSZXNwb25zZVJhd1JvdXRpbmdUYWJsZSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBSZXNwb25zZVJhd1JvdXRpbmdUYWJsZShyZXNwb25zZSkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5fcmVzcG9uc2UgPSByZXNwb25zZTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoUmVzcG9uc2VSYXdSb3V0aW5nVGFibGUucHJvdG90eXBlLCBcInR0bFwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3Jlc3BvbnNlLnJ0LnR0bDtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShSZXNwb25zZVJhd1JvdXRpbmdUYWJsZS5wcm90b3R5cGUsIFwic2VydmVyc1wiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3Jlc3BvbnNlLnJ0LnNlcnZlcnM7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoUmVzcG9uc2VSYXdSb3V0aW5nVGFibGUucHJvdG90eXBlLCBcImRiXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fcmVzcG9uc2UucnQuZGI7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoUmVzcG9uc2VSYXdSb3V0aW5nVGFibGUucHJvdG90eXBlLCBcImlzTnVsbFwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3Jlc3BvbnNlID09PSBudWxsO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIFJlc3BvbnNlUmF3Um91dGluZ1RhYmxlO1xufShSYXdSb3V0aW5nVGFibGUpKTtcbi8qKlxuICogTnVsbCByb3V0aW5nIHRhYmxlXG4gKi9cbnZhciBOdWxsUmF3Um91dGluZ1RhYmxlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhOdWxsUmF3Um91dGluZ1RhYmxlLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIE51bGxSYXdSb3V0aW5nVGFibGUoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE51bGxSYXdSb3V0aW5nVGFibGUucHJvdG90eXBlLCBcImlzTnVsbFwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gTnVsbFJhd1JvdXRpbmdUYWJsZTtcbn0oUmF3Um91dGluZ1RhYmxlKSk7XG4vKipcbiAqIEdldCB0aGUgcmF3IHJvdXRpbmcgdGFibGUgaW5mb3JtYXRpb24gZnJvbSB0aGUgcmVjb3JkXG4gKi9cbnZhciBSZWNvcmRSYXdSb3V0aW5nVGFibGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFJlY29yZFJhd1JvdXRpbmdUYWJsZSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBSZWNvcmRSYXdSb3V0aW5nVGFibGUocmVjb3JkKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLl9yZWNvcmQgPSByZWNvcmQ7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFJlY29yZFJhd1JvdXRpbmdUYWJsZS5wcm90b3R5cGUsIFwidHRsXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fcmVjb3JkLmdldCgndHRsJyk7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoUmVjb3JkUmF3Um91dGluZ1RhYmxlLnByb3RvdHlwZSwgXCJzZXJ2ZXJzXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fcmVjb3JkLmdldCgnc2VydmVycycpO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFJlY29yZFJhd1JvdXRpbmdUYWJsZS5wcm90b3R5cGUsIFwiZGJcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9yZWNvcmQuaGFzKCdkYicpID8gdGhpcy5fcmVjb3JkLmdldCgnZGInKSA6IG51bGw7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoUmVjb3JkUmF3Um91dGluZ1RhYmxlLnByb3RvdHlwZSwgXCJpc051bGxcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9yZWNvcmQgPT09IG51bGw7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gUmVjb3JkUmF3Um91dGluZ1RhYmxlO1xufShSYXdSb3V0aW5nVGFibGUpKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/routing-table-raw.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/stream-observers.js":
/*!********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/stream-observers.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TelemetryObserver = exports.ProcedureRouteObserver = exports.RouteObserver = exports.CompletedObserver = exports.FailedObserver = exports.ResetObserver = exports.LogoffObserver = exports.LoginObserver = exports.ResultStreamObserver = exports.StreamObserver = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar routing_table_raw_1 = __importDefault(__webpack_require__(/*! ./routing-table-raw */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/routing-table-raw.js\"));\nvar FETCH_ALL = neo4j_driver_core_1.internal.constants.FETCH_ALL;\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\nvar StreamObserver = /** @class */ (function () {\n    function StreamObserver() {\n    }\n    StreamObserver.prototype.onNext = function (rawRecord) { };\n    StreamObserver.prototype.onError = function (_error) { };\n    StreamObserver.prototype.onCompleted = function (meta) { };\n    return StreamObserver;\n}());\nexports.StreamObserver = StreamObserver;\n/**\n * Handles a RUN/PULL_ALL, or RUN/DISCARD_ALL requests, maps the responses\n * in a way that a user-provided observer can see these as a clean Stream\n * of records.\n * This class will queue up incoming messages until a user-provided observer\n * for the incoming stream is registered. Thus, we keep fields around\n * for tracking head/records/tail. These are only used if there is no\n * observer registered.\n * @access private\n */\nvar ResultStreamObserver = /** @class */ (function (_super) {\n    __extends(ResultStreamObserver, _super);\n    /**\n     *\n     * @param {Object} param\n     * @param {Object} param.server\n     * @param {boolean} param.reactive\n     * @param {function(stmtId: number|Integer, n: number|Integer, observer: StreamObserver)} param.moreFunction -\n     * @param {function(stmtId: number|Integer, observer: StreamObserver)} param.discardFunction -\n     * @param {number|Integer} param.fetchSize -\n     * @param {function(err: Error): Promise|void} param.beforeError -\n     * @param {function(err: Error): Promise|void} param.afterError -\n     * @param {function(keys: string[]): Promise|void} param.beforeKeys -\n     * @param {function(keys: string[]): Promise|void} param.afterKeys -\n     * @param {function(metadata: Object): Promise|void} param.beforeComplete -\n     * @param {function(metadata: Object): Promise|void} param.afterComplete -\n     */\n    function ResultStreamObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.reactive, reactive = _c === void 0 ? false : _c, moreFunction = _b.moreFunction, discardFunction = _b.discardFunction, _d = _b.fetchSize, fetchSize = _d === void 0 ? FETCH_ALL : _d, beforeError = _b.beforeError, afterError = _b.afterError, beforeKeys = _b.beforeKeys, afterKeys = _b.afterKeys, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete, server = _b.server, _e = _b.highRecordWatermark, highRecordWatermark = _e === void 0 ? Number.MAX_VALUE : _e, _f = _b.lowRecordWatermark, lowRecordWatermark = _f === void 0 ? Number.MAX_VALUE : _f;\n        var _this = _super.call(this) || this;\n        _this._fieldKeys = null;\n        _this._fieldLookup = null;\n        _this._head = null;\n        _this._queuedRecords = [];\n        _this._tail = null;\n        _this._error = null;\n        _this._observers = [];\n        _this._meta = {};\n        _this._server = server;\n        _this._beforeError = beforeError;\n        _this._afterError = afterError;\n        _this._beforeKeys = beforeKeys;\n        _this._afterKeys = afterKeys;\n        _this._beforeComplete = beforeComplete;\n        _this._afterComplete = afterComplete;\n        _this._queryId = null;\n        _this._moreFunction = moreFunction;\n        _this._discardFunction = discardFunction;\n        _this._discard = false;\n        _this._fetchSize = fetchSize;\n        _this._lowRecordWatermark = lowRecordWatermark;\n        _this._highRecordWatermark = highRecordWatermark;\n        _this._setState(reactive ? _states.READY : _states.READY_STREAMING);\n        _this._setupAutoPull();\n        _this._paused = false;\n        return _this;\n    }\n    /**\n     * Pause the record consuming\n     *\n     * This function will supend the record consuming. It will not cancel the stream and the already\n     * requested records will be sent to the subscriber.\n     */\n    ResultStreamObserver.prototype.pause = function () {\n        this._paused = true;\n    };\n    /**\n     * Resume the record consuming\n     *\n     * This function will resume the record consuming fetching more records from the server.\n     */\n    ResultStreamObserver.prototype.resume = function () {\n        this._paused = false;\n        this._setupAutoPull(true);\n        this._state.pull(this);\n    };\n    /**\n     * Will be called on every record that comes in and transform a raw record\n     * to a Object. If user-provided observer is present, pass transformed record\n     * to it's onNext method, otherwise, push to record que.\n     * @param {Array} rawRecord - An array with the raw record\n     */\n    ResultStreamObserver.prototype.onNext = function (rawRecord) {\n        var record = new neo4j_driver_core_1.Record(this._fieldKeys, rawRecord, this._fieldLookup);\n        if (this._observers.some(function (o) { return o.onNext; })) {\n            this._observers.forEach(function (o) {\n                if (o.onNext) {\n                    o.onNext(record);\n                }\n            });\n        }\n        else {\n            this._queuedRecords.push(record);\n            if (this._queuedRecords.length > this._highRecordWatermark) {\n                this._autoPull = false;\n            }\n        }\n    };\n    ResultStreamObserver.prototype.onCompleted = function (meta) {\n        this._state.onSuccess(this, meta);\n    };\n    /**\n     * Will be called on errors.\n     * If user-provided observer is present, pass the error\n     * to it's onError method, otherwise set instance variable _error.\n     * @param {Object} error - An error object\n     */\n    ResultStreamObserver.prototype.onError = function (error) {\n        this._state.onError(this, error);\n    };\n    /**\n     * Cancel pending record stream\n     */\n    ResultStreamObserver.prototype.cancel = function () {\n        this._discard = true;\n    };\n    /**\n     * Stream observer defaults to handling responses for two messages: RUN + PULL_ALL or RUN + DISCARD_ALL.\n     * Response for RUN initializes query keys. Response for PULL_ALL / DISCARD_ALL exposes the result stream.\n     *\n     * However, some operations can be represented as a single message which receives full metadata in a single response.\n     * For example, operations to begin, commit and rollback an explicit transaction use two messages in Bolt V1 but a single message in Bolt V3.\n     * Messages are `RUN \"BEGIN\" {}` + `PULL_ALL` in Bolt V1 and `BEGIN` in Bolt V3.\n     *\n     * This function prepares the observer to only handle a single response message.\n     */\n    ResultStreamObserver.prototype.prepareToHandleSingleResponse = function () {\n        this._head = [];\n        this._fieldKeys = [];\n        this._setState(_states.STREAMING);\n    };\n    /**\n     * Mark this observer as if it has completed with no metadata.\n     */\n    ResultStreamObserver.prototype.markCompleted = function () {\n        this._head = [];\n        this._fieldKeys = [];\n        this._tail = {};\n        this._setState(_states.SUCCEEDED);\n    };\n    /**\n     * Subscribe to events with provided observer.\n     * @param {Object} observer - Observer object\n     * @param {function(keys: String[])} observer.onKeys - Handle stream header, field keys.\n     * @param {function(record: Object)} observer.onNext - Handle records, one by one.\n     * @param {function(metadata: Object)} observer.onCompleted - Handle stream tail, the metadata.\n     * @param {function(error: Object)} observer.onError - Handle errors, should always be provided.\n     */\n    ResultStreamObserver.prototype.subscribe = function (observer) {\n        if (this._head && observer.onKeys) {\n            observer.onKeys(this._head);\n        }\n        if (this._queuedRecords.length > 0 && observer.onNext) {\n            for (var i = 0; i < this._queuedRecords.length; i++) {\n                observer.onNext(this._queuedRecords[i]);\n                if (this._queuedRecords.length - i - 1 <= this._lowRecordWatermark) {\n                    this._autoPull = true;\n                    if (this._state === _states.READY) {\n                        this._handleStreaming();\n                    }\n                }\n            }\n        }\n        if (this._tail && observer.onCompleted) {\n            observer.onCompleted(this._tail);\n        }\n        if (this._error) {\n            observer.onError(this._error);\n        }\n        this._observers.push(observer);\n        if (this._state === _states.READY) {\n            this._handleStreaming();\n        }\n    };\n    ResultStreamObserver.prototype._handleHasMore = function (meta) {\n        // We've consumed current batch and server notified us that there're more\n        // records to stream. Let's invoke more or discard function based on whether\n        // the user wants to discard streaming or not\n        this._setState(_states.READY); // we've done streaming\n        this._handleStreaming();\n        delete meta.has_more;\n    };\n    ResultStreamObserver.prototype._handlePullSuccess = function (meta) {\n        var _this = this;\n        var completionMetadata = Object.assign(this._server ? { server: this._server } : {}, this._meta, meta);\n        if (![undefined, null, 'r', 'w', 'rw', 's'].includes(completionMetadata.type)) {\n            this.onError((0, neo4j_driver_core_1.newError)(\"Server returned invalid query type. Expected one of [undefined, null, \\\"r\\\", \\\"w\\\", \\\"rw\\\", \\\"s\\\"] but got '\".concat(completionMetadata.type, \"'\"), PROTOCOL_ERROR));\n            return;\n        }\n        this._setState(_states.SUCCEEDED);\n        var beforeHandlerResult = null;\n        if (this._beforeComplete) {\n            beforeHandlerResult = this._beforeComplete(completionMetadata);\n        }\n        var continuation = function () {\n            // End of stream\n            _this._tail = completionMetadata;\n            if (_this._observers.some(function (o) { return o.onCompleted; })) {\n                _this._observers.forEach(function (o) {\n                    if (o.onCompleted) {\n                        o.onCompleted(completionMetadata);\n                    }\n                });\n            }\n            if (_this._afterComplete) {\n                _this._afterComplete(completionMetadata);\n            }\n        };\n        if (beforeHandlerResult) {\n            Promise.resolve(beforeHandlerResult).then(function () { return continuation(); });\n        }\n        else {\n            continuation();\n        }\n    };\n    ResultStreamObserver.prototype._handleRunSuccess = function (meta, afterSuccess) {\n        var _this = this;\n        if (this._fieldKeys === null) {\n            // Stream header, build a name->index field lookup table\n            // to be used by records. This is an optimization to make it\n            // faster to look up fields in a record by name, rather than by index.\n            // Since the records we get back via Bolt are just arrays of values.\n            this._fieldKeys = [];\n            this._fieldLookup = {};\n            if (meta.fields && meta.fields.length > 0) {\n                this._fieldKeys = meta.fields;\n                for (var i = 0; i < meta.fields.length; i++) {\n                    this._fieldLookup[meta.fields[i]] = i;\n                }\n                // remove fields key from metadata object\n                delete meta.fields;\n            }\n            // Extract server generated query id for use in requestMore and discard\n            // functions\n            if (meta.qid !== null && meta.qid !== undefined) {\n                this._queryId = meta.qid;\n                // remove qid from metadata object\n                delete meta.qid;\n            }\n            this._storeMetadataForCompletion(meta);\n            var beforeHandlerResult = null;\n            if (this._beforeKeys) {\n                beforeHandlerResult = this._beforeKeys(this._fieldKeys);\n            }\n            var continuation_1 = function () {\n                _this._head = _this._fieldKeys;\n                if (_this._observers.some(function (o) { return o.onKeys; })) {\n                    _this._observers.forEach(function (o) {\n                        if (o.onKeys) {\n                            o.onKeys(_this._fieldKeys);\n                        }\n                    });\n                }\n                if (_this._afterKeys) {\n                    _this._afterKeys(_this._fieldKeys);\n                }\n                afterSuccess();\n            };\n            if (beforeHandlerResult) {\n                Promise.resolve(beforeHandlerResult).then(function () { return continuation_1(); });\n            }\n            else {\n                continuation_1();\n            }\n        }\n    };\n    ResultStreamObserver.prototype._handleError = function (error) {\n        var _this = this;\n        this._setState(_states.FAILED);\n        this._error = error;\n        var beforeHandlerResult = null;\n        if (this._beforeError) {\n            beforeHandlerResult = this._beforeError(error);\n        }\n        var continuation = function () {\n            if (_this._observers.some(function (o) { return o.onError; })) {\n                _this._observers.forEach(function (o) {\n                    if (o.onError) {\n                        o.onError(error);\n                    }\n                });\n            }\n            if (_this._afterError) {\n                _this._afterError(error);\n            }\n        };\n        if (beforeHandlerResult) {\n            Promise.resolve(beforeHandlerResult).then(function () { return continuation(); });\n        }\n        else {\n            continuation();\n        }\n    };\n    ResultStreamObserver.prototype._handleStreaming = function () {\n        if (this._head && this._observers.some(function (o) { return o.onNext || o.onCompleted; })) {\n            if (!this._paused && (this._discard || this._autoPull)) {\n                this._more();\n            }\n        }\n    };\n    ResultStreamObserver.prototype._more = function () {\n        if (this._discard) {\n            this._discardFunction(this._queryId, this);\n        }\n        else {\n            this._moreFunction(this._queryId, this._fetchSize, this);\n        }\n        this._setState(_states.STREAMING);\n    };\n    ResultStreamObserver.prototype._storeMetadataForCompletion = function (meta) {\n        var keys = Object.keys(meta);\n        var index = keys.length;\n        var key = '';\n        while (index--) {\n            key = keys[index];\n            this._meta[key] = meta[key];\n        }\n    };\n    ResultStreamObserver.prototype._setState = function (state) {\n        this._state = state;\n    };\n    ResultStreamObserver.prototype._setupAutoPull = function () {\n        this._autoPull = true;\n    };\n    return ResultStreamObserver;\n}(StreamObserver));\nexports.ResultStreamObserver = ResultStreamObserver;\nvar LoginObserver = /** @class */ (function (_super) {\n    __extends(LoginObserver, _super);\n    /**\n     *\n     * @param {Object} param -\n     * @param {function(err: Error)} param.onError\n     * @param {function(metadata)} param.onCompleted\n     */\n    function LoginObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, onError = _b.onError, onCompleted = _b.onCompleted;\n        var _this = _super.call(this) || this;\n        _this._onError = onError;\n        _this._onCompleted = onCompleted;\n        return _this;\n    }\n    LoginObserver.prototype.onNext = function (record) {\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when initializing ' + neo4j_driver_core_1.json.stringify(record)));\n    };\n    LoginObserver.prototype.onError = function (error) {\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    LoginObserver.prototype.onCompleted = function (metadata) {\n        if (this._onCompleted) {\n            this._onCompleted(metadata);\n        }\n    };\n    return LoginObserver;\n}(StreamObserver));\nexports.LoginObserver = LoginObserver;\nvar LogoffObserver = /** @class */ (function (_super) {\n    __extends(LogoffObserver, _super);\n    /**\n     *\n     * @param {Object} param -\n     * @param {function(err: Error)} param.onError\n     * @param {function(metadata)} param.onCompleted\n     */\n    function LogoffObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, onError = _b.onError, onCompleted = _b.onCompleted;\n        var _this = _super.call(this) || this;\n        _this._onError = onError;\n        _this._onCompleted = onCompleted;\n        return _this;\n    }\n    LogoffObserver.prototype.onNext = function (record) {\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when logging off ' + neo4j_driver_core_1.json.stringify(record)));\n    };\n    LogoffObserver.prototype.onError = function (error) {\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    LogoffObserver.prototype.onCompleted = function (metadata) {\n        if (this._onCompleted) {\n            this._onCompleted(metadata);\n        }\n    };\n    return LogoffObserver;\n}(StreamObserver));\nexports.LogoffObserver = LogoffObserver;\nvar ResetObserver = /** @class */ (function (_super) {\n    __extends(ResetObserver, _super);\n    /**\n     *\n     * @param {Object} param -\n     * @param {function(err: String)} param.onProtocolError\n     * @param {function(err: Error)} param.onError\n     * @param {function(metadata)} param.onComplete\n     */\n    function ResetObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, onProtocolError = _b.onProtocolError, onError = _b.onError, onComplete = _b.onComplete;\n        var _this = _super.call(this) || this;\n        _this._onProtocolError = onProtocolError;\n        _this._onError = onError;\n        _this._onComplete = onComplete;\n        return _this;\n    }\n    ResetObserver.prototype.onNext = function (record) {\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when resetting: received record is: ' +\n            neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n    };\n    ResetObserver.prototype.onError = function (error) {\n        if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n            this._onProtocolError(error.message);\n        }\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    ResetObserver.prototype.onCompleted = function (metadata) {\n        if (this._onComplete) {\n            this._onComplete(metadata);\n        }\n    };\n    return ResetObserver;\n}(StreamObserver));\nexports.ResetObserver = ResetObserver;\nvar TelemetryObserver = /** @class */ (function (_super) {\n    __extends(TelemetryObserver, _super);\n    /**\n     *\n     * @param {Object} param -\n     * @param {function(err: Error)} param.onError\n     * @param {function(metadata)} param.onCompleted\n     */\n    function TelemetryObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, onError = _b.onError, onCompleted = _b.onCompleted;\n        var _this = _super.call(this) || this;\n        _this._onError = onError;\n        _this._onCompleted = onCompleted;\n        return _this;\n    }\n    TelemetryObserver.prototype.onNext = function (record) {\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when sending telemetry ' + neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n    };\n    TelemetryObserver.prototype.onError = function (error) {\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    TelemetryObserver.prototype.onCompleted = function (metadata) {\n        if (this._onCompleted) {\n            this._onCompleted(metadata);\n        }\n    };\n    return TelemetryObserver;\n}(ResultStreamObserver));\nexports.TelemetryObserver = TelemetryObserver;\nvar FailedObserver = /** @class */ (function (_super) {\n    __extends(FailedObserver, _super);\n    function FailedObserver(_a) {\n        var error = _a.error, onError = _a.onError;\n        var _this = _super.call(this, { beforeError: onError }) || this;\n        _this.onError(error);\n        return _this;\n    }\n    return FailedObserver;\n}(ResultStreamObserver));\nexports.FailedObserver = FailedObserver;\nvar CompletedObserver = /** @class */ (function (_super) {\n    __extends(CompletedObserver, _super);\n    function CompletedObserver() {\n        var _this = _super.call(this) || this;\n        _super.prototype.markCompleted.call(_this);\n        return _this;\n    }\n    return CompletedObserver;\n}(ResultStreamObserver));\nexports.CompletedObserver = CompletedObserver;\nvar ProcedureRouteObserver = /** @class */ (function (_super) {\n    __extends(ProcedureRouteObserver, _super);\n    function ProcedureRouteObserver(_a) {\n        var resultObserver = _a.resultObserver, onProtocolError = _a.onProtocolError, onError = _a.onError, onCompleted = _a.onCompleted;\n        var _this = _super.call(this) || this;\n        _this._resultObserver = resultObserver;\n        _this._onError = onError;\n        _this._onCompleted = onCompleted;\n        _this._records = [];\n        _this._onProtocolError = onProtocolError;\n        resultObserver.subscribe(_this);\n        return _this;\n    }\n    ProcedureRouteObserver.prototype.onNext = function (record) {\n        this._records.push(record);\n    };\n    ProcedureRouteObserver.prototype.onError = function (error) {\n        if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n            this._onProtocolError(error.message);\n        }\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    ProcedureRouteObserver.prototype.onCompleted = function () {\n        if (this._records !== null && this._records.length !== 1) {\n            this.onError((0, neo4j_driver_core_1.newError)('Illegal response from router. Received ' +\n                this._records.length +\n                ' records but expected only one.\\n' +\n                neo4j_driver_core_1.json.stringify(this._records), PROTOCOL_ERROR));\n            return;\n        }\n        if (this._onCompleted) {\n            this._onCompleted(routing_table_raw_1.default.ofRecord(this._records[0]));\n        }\n    };\n    return ProcedureRouteObserver;\n}(StreamObserver));\nexports.ProcedureRouteObserver = ProcedureRouteObserver;\nvar RouteObserver = /** @class */ (function (_super) {\n    __extends(RouteObserver, _super);\n    /**\n     *\n     * @param {Object} param -\n     * @param {function(err: String)} param.onProtocolError\n     * @param {function(err: Error)} param.onError\n     * @param {function(RawRoutingTable)} param.onCompleted\n     */\n    function RouteObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, onProtocolError = _b.onProtocolError, onError = _b.onError, onCompleted = _b.onCompleted;\n        var _this = _super.call(this) || this;\n        _this._onProtocolError = onProtocolError;\n        _this._onError = onError;\n        _this._onCompleted = onCompleted;\n        return _this;\n    }\n    RouteObserver.prototype.onNext = function (record) {\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when resetting: received record is: ' +\n            neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n    };\n    RouteObserver.prototype.onError = function (error) {\n        if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n            this._onProtocolError(error.message);\n        }\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    RouteObserver.prototype.onCompleted = function (metadata) {\n        if (this._onCompleted) {\n            this._onCompleted(routing_table_raw_1.default.ofMessageResponse(metadata));\n        }\n    };\n    return RouteObserver;\n}(StreamObserver));\nexports.RouteObserver = RouteObserver;\nvar _states = {\n    READY_STREAMING: {\n        // async start state\n        onSuccess: function (streamObserver, meta) {\n            streamObserver._handleRunSuccess(meta, function () {\n                streamObserver._setState(_states.STREAMING);\n            } // after run succeeded, async directly move to streaming\n            // state\n            );\n        },\n        onError: function (streamObserver, error) {\n            streamObserver._handleError(error);\n        },\n        name: function () {\n            return 'READY_STREAMING';\n        },\n        pull: function () { }\n    },\n    READY: {\n        // reactive start state\n        onSuccess: function (streamObserver, meta) {\n            streamObserver._handleRunSuccess(meta, function () { return streamObserver._handleStreaming(); } // after run succeeded received, reactive shall start pulling\n            );\n        },\n        onError: function (streamObserver, error) {\n            streamObserver._handleError(error);\n        },\n        name: function () {\n            return 'READY';\n        },\n        pull: function (streamObserver) { return streamObserver._more(); }\n    },\n    STREAMING: {\n        onSuccess: function (streamObserver, meta) {\n            if (meta.has_more) {\n                streamObserver._handleHasMore(meta);\n            }\n            else {\n                streamObserver._handlePullSuccess(meta);\n            }\n        },\n        onError: function (streamObserver, error) {\n            streamObserver._handleError(error);\n        },\n        name: function () {\n            return 'STREAMING';\n        },\n        pull: function () { }\n    },\n    FAILED: {\n        onError: function (_error) {\n            // more errors are ignored\n        },\n        name: function () {\n            return 'FAILED';\n        },\n        pull: function () { }\n    },\n    SUCCEEDED: {\n        name: function () {\n            return 'SUCCEEDED';\n        },\n        pull: function () { }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/stream-observers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/temporal-factory.js":
/*!********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/temporal-factory.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.epochSecondAndNanoToLocalDateTime = exports.nanoOfDayToLocalTime = exports.epochDayToDate = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar _a = neo4j_driver_core_1.internal.temporalUtil, DAYS_0000_TO_1970 = _a.DAYS_0000_TO_1970, DAYS_PER_400_YEAR_CYCLE = _a.DAYS_PER_400_YEAR_CYCLE, NANOS_PER_HOUR = _a.NANOS_PER_HOUR, NANOS_PER_MINUTE = _a.NANOS_PER_MINUTE, NANOS_PER_SECOND = _a.NANOS_PER_SECOND, SECONDS_PER_DAY = _a.SECONDS_PER_DAY, floorDiv = _a.floorDiv, floorMod = _a.floorMod;\n/**\n * Converts given epoch day to a local date.\n * @param {Integer|number|string} epochDay the epoch day to convert.\n * @return {Date} the date representing the epoch day in years, months and days.\n */\nfunction epochDayToDate(epochDay) {\n    epochDay = (0, neo4j_driver_core_1.int)(epochDay);\n    var zeroDay = epochDay.add(DAYS_0000_TO_1970).subtract(60);\n    var adjust = (0, neo4j_driver_core_1.int)(0);\n    if (zeroDay.lessThan(0)) {\n        var adjustCycles = zeroDay\n            .add(1)\n            .div(DAYS_PER_400_YEAR_CYCLE)\n            .subtract(1);\n        adjust = adjustCycles.multiply(400);\n        zeroDay = zeroDay.add(adjustCycles.multiply(-DAYS_PER_400_YEAR_CYCLE));\n    }\n    var year = zeroDay\n        .multiply(400)\n        .add(591)\n        .div(DAYS_PER_400_YEAR_CYCLE);\n    var dayOfYearEst = zeroDay.subtract(year\n        .multiply(365)\n        .add(year.div(4))\n        .subtract(year.div(100))\n        .add(year.div(400)));\n    if (dayOfYearEst.lessThan(0)) {\n        year = year.subtract(1);\n        dayOfYearEst = zeroDay.subtract(year\n            .multiply(365)\n            .add(year.div(4))\n            .subtract(year.div(100))\n            .add(year.div(400)));\n    }\n    year = year.add(adjust);\n    var marchDayOfYear = dayOfYearEst;\n    var marchMonth = marchDayOfYear\n        .multiply(5)\n        .add(2)\n        .div(153);\n    var month = marchMonth\n        .add(2)\n        .modulo(12)\n        .add(1);\n    var day = marchDayOfYear\n        .subtract(marchMonth\n        .multiply(306)\n        .add(5)\n        .div(10))\n        .add(1);\n    year = year.add(marchMonth.div(10));\n    return new neo4j_driver_core_1.Date(year, month, day);\n}\nexports.epochDayToDate = epochDayToDate;\n/**\n * Converts nanoseconds of the day into local time.\n * @param {Integer|number|string} nanoOfDay the nanoseconds of the day to convert.\n * @return {LocalTime} the local time representing given nanoseconds of the day.\n */\nfunction nanoOfDayToLocalTime(nanoOfDay) {\n    nanoOfDay = (0, neo4j_driver_core_1.int)(nanoOfDay);\n    var hour = nanoOfDay.div(NANOS_PER_HOUR);\n    nanoOfDay = nanoOfDay.subtract(hour.multiply(NANOS_PER_HOUR));\n    var minute = nanoOfDay.div(NANOS_PER_MINUTE);\n    nanoOfDay = nanoOfDay.subtract(minute.multiply(NANOS_PER_MINUTE));\n    var second = nanoOfDay.div(NANOS_PER_SECOND);\n    var nanosecond = nanoOfDay.subtract(second.multiply(NANOS_PER_SECOND));\n    return new neo4j_driver_core_1.LocalTime(hour, minute, second, nanosecond);\n}\nexports.nanoOfDayToLocalTime = nanoOfDayToLocalTime;\n/**\n * Converts given epoch second and nanosecond adjustment into a local date time object.\n * @param {Integer|number|string} epochSecond the epoch second to use.\n * @param {Integer|number|string} nano the nanosecond to use.\n * @return {LocalDateTime} the local date time representing given epoch second and nano.\n */\nfunction epochSecondAndNanoToLocalDateTime(epochSecond, nano) {\n    var epochDay = floorDiv(epochSecond, SECONDS_PER_DAY);\n    var secondsOfDay = floorMod(epochSecond, SECONDS_PER_DAY);\n    var nanoOfDay = secondsOfDay.multiply(NANOS_PER_SECOND).add(nano);\n    var localDate = epochDayToDate(epochDay);\n    var localTime = nanoOfDayToLocalTime(nanoOfDay);\n    return new neo4j_driver_core_1.LocalDateTime(localDate.year, localDate.month, localDate.day, localTime.hour, localTime.minute, localTime.second, localTime.nanosecond);\n}\nexports.epochSecondAndNanoToLocalDateTime = epochSecondAndNanoToLocalDateTime;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC90ZW1wb3JhbC1mYWN0b3J5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlDQUF5QyxHQUFHLDRCQUE0QixHQUFHLHNCQUFzQjtBQUNqRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixtQkFBTyxDQUFDLDhFQUFtQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQSxXQUFXLHVCQUF1QjtBQUNsQyxZQUFZLE1BQU07QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBLFdBQVcsdUJBQXVCO0FBQ2xDLFlBQVksV0FBVztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQSxXQUFXLHVCQUF1QjtBQUNsQyxXQUFXLHVCQUF1QjtBQUNsQyxZQUFZLGVBQWU7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmVvNGotbmV4dC1hcHAvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYm9sdC90ZW1wb3JhbC1mYWN0b3J5LmpzP2ZiYTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmVwb2NoU2Vjb25kQW5kTmFub1RvTG9jYWxEYXRlVGltZSA9IGV4cG9ydHMubmFub09mRGF5VG9Mb2NhbFRpbWUgPSBleHBvcnRzLmVwb2NoRGF5VG9EYXRlID0gdm9pZCAwO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBuZW80al9kcml2ZXJfY29yZV8xID0gcmVxdWlyZShcIm5lbzRqLWRyaXZlci1jb3JlXCIpO1xudmFyIF9hID0gbmVvNGpfZHJpdmVyX2NvcmVfMS5pbnRlcm5hbC50ZW1wb3JhbFV0aWwsIERBWVNfMDAwMF9UT18xOTcwID0gX2EuREFZU18wMDAwX1RPXzE5NzAsIERBWVNfUEVSXzQwMF9ZRUFSX0NZQ0xFID0gX2EuREFZU19QRVJfNDAwX1lFQVJfQ1lDTEUsIE5BTk9TX1BFUl9IT1VSID0gX2EuTkFOT1NfUEVSX0hPVVIsIE5BTk9TX1BFUl9NSU5VVEUgPSBfYS5OQU5PU19QRVJfTUlOVVRFLCBOQU5PU19QRVJfU0VDT05EID0gX2EuTkFOT1NfUEVSX1NFQ09ORCwgU0VDT05EU19QRVJfREFZID0gX2EuU0VDT05EU19QRVJfREFZLCBmbG9vckRpdiA9IF9hLmZsb29yRGl2LCBmbG9vck1vZCA9IF9hLmZsb29yTW9kO1xuLyoqXG4gKiBDb252ZXJ0cyBnaXZlbiBlcG9jaCBkYXkgdG8gYSBsb2NhbCBkYXRlLlxuICogQHBhcmFtIHtJbnRlZ2VyfG51bWJlcnxzdHJpbmd9IGVwb2NoRGF5IHRoZSBlcG9jaCBkYXkgdG8gY29udmVydC5cbiAqIEByZXR1cm4ge0RhdGV9IHRoZSBkYXRlIHJlcHJlc2VudGluZyB0aGUgZXBvY2ggZGF5IGluIHllYXJzLCBtb250aHMgYW5kIGRheXMuXG4gKi9cbmZ1bmN0aW9uIGVwb2NoRGF5VG9EYXRlKGVwb2NoRGF5KSB7XG4gICAgZXBvY2hEYXkgPSAoMCwgbmVvNGpfZHJpdmVyX2NvcmVfMS5pbnQpKGVwb2NoRGF5KTtcbiAgICB2YXIgemVyb0RheSA9IGVwb2NoRGF5LmFkZChEQVlTXzAwMDBfVE9fMTk3MCkuc3VidHJhY3QoNjApO1xuICAgIHZhciBhZGp1c3QgPSAoMCwgbmVvNGpfZHJpdmVyX2NvcmVfMS5pbnQpKDApO1xuICAgIGlmICh6ZXJvRGF5Lmxlc3NUaGFuKDApKSB7XG4gICAgICAgIHZhciBhZGp1c3RDeWNsZXMgPSB6ZXJvRGF5XG4gICAgICAgICAgICAuYWRkKDEpXG4gICAgICAgICAgICAuZGl2KERBWVNfUEVSXzQwMF9ZRUFSX0NZQ0xFKVxuICAgICAgICAgICAgLnN1YnRyYWN0KDEpO1xuICAgICAgICBhZGp1c3QgPSBhZGp1c3RDeWNsZXMubXVsdGlwbHkoNDAwKTtcbiAgICAgICAgemVyb0RheSA9IHplcm9EYXkuYWRkKGFkanVzdEN5Y2xlcy5tdWx0aXBseSgtREFZU19QRVJfNDAwX1lFQVJfQ1lDTEUpKTtcbiAgICB9XG4gICAgdmFyIHllYXIgPSB6ZXJvRGF5XG4gICAgICAgIC5tdWx0aXBseSg0MDApXG4gICAgICAgIC5hZGQoNTkxKVxuICAgICAgICAuZGl2KERBWVNfUEVSXzQwMF9ZRUFSX0NZQ0xFKTtcbiAgICB2YXIgZGF5T2ZZZWFyRXN0ID0gemVyb0RheS5zdWJ0cmFjdCh5ZWFyXG4gICAgICAgIC5tdWx0aXBseSgzNjUpXG4gICAgICAgIC5hZGQoeWVhci5kaXYoNCkpXG4gICAgICAgIC5zdWJ0cmFjdCh5ZWFyLmRpdigxMDApKVxuICAgICAgICAuYWRkKHllYXIuZGl2KDQwMCkpKTtcbiAgICBpZiAoZGF5T2ZZZWFyRXN0Lmxlc3NUaGFuKDApKSB7XG4gICAgICAgIHllYXIgPSB5ZWFyLnN1YnRyYWN0KDEpO1xuICAgICAgICBkYXlPZlllYXJFc3QgPSB6ZXJvRGF5LnN1YnRyYWN0KHllYXJcbiAgICAgICAgICAgIC5tdWx0aXBseSgzNjUpXG4gICAgICAgICAgICAuYWRkKHllYXIuZGl2KDQpKVxuICAgICAgICAgICAgLnN1YnRyYWN0KHllYXIuZGl2KDEwMCkpXG4gICAgICAgICAgICAuYWRkKHllYXIuZGl2KDQwMCkpKTtcbiAgICB9XG4gICAgeWVhciA9IHllYXIuYWRkKGFkanVzdCk7XG4gICAgdmFyIG1hcmNoRGF5T2ZZZWFyID0gZGF5T2ZZZWFyRXN0O1xuICAgIHZhciBtYXJjaE1vbnRoID0gbWFyY2hEYXlPZlllYXJcbiAgICAgICAgLm11bHRpcGx5KDUpXG4gICAgICAgIC5hZGQoMilcbiAgICAgICAgLmRpdigxNTMpO1xuICAgIHZhciBtb250aCA9IG1hcmNoTW9udGhcbiAgICAgICAgLmFkZCgyKVxuICAgICAgICAubW9kdWxvKDEyKVxuICAgICAgICAuYWRkKDEpO1xuICAgIHZhciBkYXkgPSBtYXJjaERheU9mWWVhclxuICAgICAgICAuc3VidHJhY3QobWFyY2hNb250aFxuICAgICAgICAubXVsdGlwbHkoMzA2KVxuICAgICAgICAuYWRkKDUpXG4gICAgICAgIC5kaXYoMTApKVxuICAgICAgICAuYWRkKDEpO1xuICAgIHllYXIgPSB5ZWFyLmFkZChtYXJjaE1vbnRoLmRpdigxMCkpO1xuICAgIHJldHVybiBuZXcgbmVvNGpfZHJpdmVyX2NvcmVfMS5EYXRlKHllYXIsIG1vbnRoLCBkYXkpO1xufVxuZXhwb3J0cy5lcG9jaERheVRvRGF0ZSA9IGVwb2NoRGF5VG9EYXRlO1xuLyoqXG4gKiBDb252ZXJ0cyBuYW5vc2Vjb25kcyBvZiB0aGUgZGF5IGludG8gbG9jYWwgdGltZS5cbiAqIEBwYXJhbSB7SW50ZWdlcnxudW1iZXJ8c3RyaW5nfSBuYW5vT2ZEYXkgdGhlIG5hbm9zZWNvbmRzIG9mIHRoZSBkYXkgdG8gY29udmVydC5cbiAqIEByZXR1cm4ge0xvY2FsVGltZX0gdGhlIGxvY2FsIHRpbWUgcmVwcmVzZW50aW5nIGdpdmVuIG5hbm9zZWNvbmRzIG9mIHRoZSBkYXkuXG4gKi9cbmZ1bmN0aW9uIG5hbm9PZkRheVRvTG9jYWxUaW1lKG5hbm9PZkRheSkge1xuICAgIG5hbm9PZkRheSA9ICgwLCBuZW80al9kcml2ZXJfY29yZV8xLmludCkobmFub09mRGF5KTtcbiAgICB2YXIgaG91ciA9IG5hbm9PZkRheS5kaXYoTkFOT1NfUEVSX0hPVVIpO1xuICAgIG5hbm9PZkRheSA9IG5hbm9PZkRheS5zdWJ0cmFjdChob3VyLm11bHRpcGx5KE5BTk9TX1BFUl9IT1VSKSk7XG4gICAgdmFyIG1pbnV0ZSA9IG5hbm9PZkRheS5kaXYoTkFOT1NfUEVSX01JTlVURSk7XG4gICAgbmFub09mRGF5ID0gbmFub09mRGF5LnN1YnRyYWN0KG1pbnV0ZS5tdWx0aXBseShOQU5PU19QRVJfTUlOVVRFKSk7XG4gICAgdmFyIHNlY29uZCA9IG5hbm9PZkRheS5kaXYoTkFOT1NfUEVSX1NFQ09ORCk7XG4gICAgdmFyIG5hbm9zZWNvbmQgPSBuYW5vT2ZEYXkuc3VidHJhY3Qoc2Vjb25kLm11bHRpcGx5KE5BTk9TX1BFUl9TRUNPTkQpKTtcbiAgICByZXR1cm4gbmV3IG5lbzRqX2RyaXZlcl9jb3JlXzEuTG9jYWxUaW1lKGhvdXIsIG1pbnV0ZSwgc2Vjb25kLCBuYW5vc2Vjb25kKTtcbn1cbmV4cG9ydHMubmFub09mRGF5VG9Mb2NhbFRpbWUgPSBuYW5vT2ZEYXlUb0xvY2FsVGltZTtcbi8qKlxuICogQ29udmVydHMgZ2l2ZW4gZXBvY2ggc2Vjb25kIGFuZCBuYW5vc2Vjb25kIGFkanVzdG1lbnQgaW50byBhIGxvY2FsIGRhdGUgdGltZSBvYmplY3QuXG4gKiBAcGFyYW0ge0ludGVnZXJ8bnVtYmVyfHN0cmluZ30gZXBvY2hTZWNvbmQgdGhlIGVwb2NoIHNlY29uZCB0byB1c2UuXG4gKiBAcGFyYW0ge0ludGVnZXJ8bnVtYmVyfHN0cmluZ30gbmFubyB0aGUgbmFub3NlY29uZCB0byB1c2UuXG4gKiBAcmV0dXJuIHtMb2NhbERhdGVUaW1lfSB0aGUgbG9jYWwgZGF0ZSB0aW1lIHJlcHJlc2VudGluZyBnaXZlbiBlcG9jaCBzZWNvbmQgYW5kIG5hbm8uXG4gKi9cbmZ1bmN0aW9uIGVwb2NoU2Vjb25kQW5kTmFub1RvTG9jYWxEYXRlVGltZShlcG9jaFNlY29uZCwgbmFubykge1xuICAgIHZhciBlcG9jaERheSA9IGZsb29yRGl2KGVwb2NoU2Vjb25kLCBTRUNPTkRTX1BFUl9EQVkpO1xuICAgIHZhciBzZWNvbmRzT2ZEYXkgPSBmbG9vck1vZChlcG9jaFNlY29uZCwgU0VDT05EU19QRVJfREFZKTtcbiAgICB2YXIgbmFub09mRGF5ID0gc2Vjb25kc09mRGF5Lm11bHRpcGx5KE5BTk9TX1BFUl9TRUNPTkQpLmFkZChuYW5vKTtcbiAgICB2YXIgbG9jYWxEYXRlID0gZXBvY2hEYXlUb0RhdGUoZXBvY2hEYXkpO1xuICAgIHZhciBsb2NhbFRpbWUgPSBuYW5vT2ZEYXlUb0xvY2FsVGltZShuYW5vT2ZEYXkpO1xuICAgIHJldHVybiBuZXcgbmVvNGpfZHJpdmVyX2NvcmVfMS5Mb2NhbERhdGVUaW1lKGxvY2FsRGF0ZS55ZWFyLCBsb2NhbERhdGUubW9udGgsIGxvY2FsRGF0ZS5kYXksIGxvY2FsVGltZS5ob3VyLCBsb2NhbFRpbWUubWludXRlLCBsb2NhbFRpbWUuc2Vjb25kLCBsb2NhbFRpbWUubmFub3NlY29uZCk7XG59XG5leHBvcnRzLmVwb2NoU2Vjb25kQW5kTmFub1RvTG9jYWxEYXRlVGltZSA9IGVwb2NoU2Vjb25kQW5kTmFub1RvTG9jYWxEYXRlVGltZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/temporal-factory.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/transformer.js":
/*!***************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/bolt/transformer.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TypeTransformer = void 0;\nvar packstream_1 = __webpack_require__(/*! ../packstream */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/packstream/index.js\");\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar objectUtil = neo4j_driver_core_1.internal.objectUtil;\n/**\n * Class responsible for applying the expected {@link TypeTransformer} to\n * transform the driver types from and to {@link struct.Structure}\n */\nvar Transformer = /** @class */ (function () {\n    /**\n     * Constructor\n     * @param {TypeTransformer[]} transformers The type transformers\n     */\n    function Transformer(transformers) {\n        this._transformers = transformers;\n        this._transformersPerSignature = new Map(transformers.map(function (typeTransformer) { return [typeTransformer.signature, typeTransformer]; }));\n        this.fromStructure = this.fromStructure.bind(this);\n        this.toStructure = this.toStructure.bind(this);\n        Object.freeze(this);\n    }\n    /**\n     * Transform from structure to specific object\n     *\n     * @param {struct.Structure} struct The structure\n     * @returns {<T>|structure.Structure} The driver object or the structure if the transformer was not found.\n     */\n    Transformer.prototype.fromStructure = function (struct) {\n        try {\n            if (struct instanceof packstream_1.structure.Structure && this._transformersPerSignature.has(struct.signature)) {\n                var fromStructure = this._transformersPerSignature.get(struct.signature).fromStructure;\n                return fromStructure(struct);\n            }\n            return struct;\n        }\n        catch (error) {\n            return objectUtil.createBrokenObject(error);\n        }\n    };\n    /**\n     * Transform from object to structure\n     * @param {<T>} type The object to be transoformed in structure\n     * @returns {<T>|structure.Structure} The structure or the object, if any transformer was found\n     */\n    Transformer.prototype.toStructure = function (type) {\n        var transformer = this._transformers.find(function (_a) {\n            var isTypeInstance = _a.isTypeInstance;\n            return isTypeInstance(type);\n        });\n        if (transformer !== undefined) {\n            return transformer.toStructure(type);\n        }\n        return type;\n    };\n    return Transformer;\n}());\nexports[\"default\"] = Transformer;\n/**\n * @callback isTypeInstanceFunction\n * @param {any} object The object\n * @return {boolean} is instance of\n */\n/**\n * @callback toStructureFunction\n * @param {any} object The object\n * @return {structure.Structure} The structure\n */\n/**\n * @callback fromStructureFunction\n * @param {structure.Structure} struct The structure\n * @return {any} The object\n */\n/**\n * Class responsible for grouping the properties of a TypeTransformer\n */\nvar TypeTransformer = /** @class */ (function () {\n    /**\n     * @param {Object} param\n     * @param {number} param.signature The signature of the structure\n     * @param {isTypeInstanceFunction} param.isTypeInstance The function which checks if object is\n     *                instance of the type described by the TypeTransformer\n     * @param {toStructureFunction} param.toStructure The function which gets the object and converts to structure\n     * @param {fromStructureFunction} param.fromStructure The function which get the structure and covnverts to object\n     */\n    function TypeTransformer(_a) {\n        var signature = _a.signature, fromStructure = _a.fromStructure, toStructure = _a.toStructure, isTypeInstance = _a.isTypeInstance;\n        this.signature = signature;\n        this.isTypeInstance = isTypeInstance;\n        this.fromStructure = fromStructure;\n        this.toStructure = toStructure;\n        Object.freeze(this);\n    }\n    /**\n     * @param {Object} param\n     * @param {number} [param.signature] The signature of the structure\n     * @param {isTypeInstanceFunction} [param.isTypeInstance] The function which checks if object is\n     *                instance of the type described by the TypeTransformer\n     * @param {toStructureFunction} [param.toStructure] The function which gets the object and converts to structure\n     * @param {fromStructureFunction} pparam.fromStructure] The function which get the structure and covnverts to object\n     * @returns {TypeTransformer} A new type transform extends with new methods\n     */\n    TypeTransformer.prototype.extendsWith = function (_a) {\n        var signature = _a.signature, fromStructure = _a.fromStructure, toStructure = _a.toStructure, isTypeInstance = _a.isTypeInstance;\n        return new TypeTransformer({\n            signature: signature || this.signature,\n            fromStructure: fromStructure || this.fromStructure,\n            toStructure: toStructure || this.toStructure,\n            isTypeInstance: isTypeInstance || this.isTypeInstance\n        });\n    };\n    return TypeTransformer;\n}());\nexports.TypeTransformer = TypeTransformer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/transformer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/buf/base-buf.js":
/*!***********************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/buf/base-buf.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Common base with default implementation for most buffer methods.\n * Buffers are stateful - they track a current \"position\", this helps greatly\n * when reading and writing from them incrementally. You can also ignore the\n * stateful read/write methods.\n * readXXX and writeXXX-methods move the inner position of the buffer.\n * putXXX and getXXX-methods do not.\n * @access private\n */\nvar BaseBuffer = /** @class */ (function () {\n    /**\n     * Create a instance with the injected size.\n     * @constructor\n     * @param {Integer} size\n     */\n    function BaseBuffer(size) {\n        this.position = 0;\n        this.length = size;\n    }\n    BaseBuffer.prototype.getUInt8 = function (position) {\n        throw new Error('Not implemented');\n    };\n    BaseBuffer.prototype.getInt8 = function (position) {\n        throw new Error('Not implemented');\n    };\n    BaseBuffer.prototype.getFloat64 = function (position) {\n        throw new Error('Not implemented');\n    };\n    BaseBuffer.prototype.putUInt8 = function (position, val) {\n        throw new Error('Not implemented');\n    };\n    BaseBuffer.prototype.putInt8 = function (position, val) {\n        throw new Error('Not implemented');\n    };\n    BaseBuffer.prototype.putFloat64 = function (position, val) {\n        throw new Error('Not implemented');\n    };\n    /**\n     * @param p\n     */\n    BaseBuffer.prototype.getInt16 = function (p) {\n        return (this.getInt8(p) << 8) | this.getUInt8(p + 1);\n    };\n    /**\n     * @param p\n     */\n    BaseBuffer.prototype.getUInt16 = function (p) {\n        return (this.getUInt8(p) << 8) | this.getUInt8(p + 1);\n    };\n    /**\n     * @param p\n     */\n    BaseBuffer.prototype.getInt32 = function (p) {\n        return ((this.getInt8(p) << 24) |\n            (this.getUInt8(p + 1) << 16) |\n            (this.getUInt8(p + 2) << 8) |\n            this.getUInt8(p + 3));\n    };\n    /**\n     * @param p\n     */\n    BaseBuffer.prototype.getUInt32 = function (p) {\n        return ((this.getUInt8(p) << 24) |\n            (this.getUInt8(p + 1) << 16) |\n            (this.getUInt8(p + 2) << 8) |\n            this.getUInt8(p + 3));\n    };\n    /**\n     * @param p\n     */\n    BaseBuffer.prototype.getInt64 = function (p) {\n        return ((this.getInt8(p) << 56) |\n            (this.getUInt8(p + 1) << 48) |\n            (this.getUInt8(p + 2) << 40) |\n            (this.getUInt8(p + 3) << 32) |\n            (this.getUInt8(p + 4) << 24) |\n            (this.getUInt8(p + 5) << 16) |\n            (this.getUInt8(p + 6) << 8) |\n            this.getUInt8(p + 7));\n    };\n    /**\n     * Get a slice of this buffer. This method does not copy any data,\n     * but simply provides a slice view of this buffer\n     * @param start\n     * @param length\n     */\n    BaseBuffer.prototype.getSlice = function (start, length) {\n        return new SliceBuffer(start, length, this);\n    };\n    /**\n     * @param p\n     * @param val\n     */\n    BaseBuffer.prototype.putInt16 = function (p, val) {\n        this.putInt8(p, val >> 8);\n        this.putUInt8(p + 1, val & 0xff);\n    };\n    /**\n     * @param p\n     * @param val\n     */\n    BaseBuffer.prototype.putUInt16 = function (p, val) {\n        this.putUInt8(p, (val >> 8) & 0xff);\n        this.putUInt8(p + 1, val & 0xff);\n    };\n    /**\n     * @param p\n     * @param val\n     */\n    BaseBuffer.prototype.putInt32 = function (p, val) {\n        this.putInt8(p, val >> 24);\n        this.putUInt8(p + 1, (val >> 16) & 0xff);\n        this.putUInt8(p + 2, (val >> 8) & 0xff);\n        this.putUInt8(p + 3, val & 0xff);\n    };\n    /**\n     * @param p\n     * @param val\n     */\n    BaseBuffer.prototype.putUInt32 = function (p, val) {\n        this.putUInt8(p, (val >> 24) & 0xff);\n        this.putUInt8(p + 1, (val >> 16) & 0xff);\n        this.putUInt8(p + 2, (val >> 8) & 0xff);\n        this.putUInt8(p + 3, val & 0xff);\n    };\n    /**\n     * @param p\n     * @param val\n     */\n    BaseBuffer.prototype.putInt64 = function (p, val) {\n        this.putInt8(p, val >> 48);\n        this.putUInt8(p + 1, (val >> 42) & 0xff);\n        this.putUInt8(p + 2, (val >> 36) & 0xff);\n        this.putUInt8(p + 3, (val >> 30) & 0xff);\n        this.putUInt8(p + 4, (val >> 24) & 0xff);\n        this.putUInt8(p + 5, (val >> 16) & 0xff);\n        this.putUInt8(p + 6, (val >> 8) & 0xff);\n        this.putUInt8(p + 7, val & 0xff);\n    };\n    /**\n     * @param position\n     * @param other\n     */\n    BaseBuffer.prototype.putBytes = function (position, other) {\n        for (var i = 0, end = other.remaining(); i < end; i++) {\n            this.putUInt8(position + i, other.readUInt8());\n        }\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readUInt8 = function () {\n        return this.getUInt8(this._updatePos(1));\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readInt8 = function () {\n        return this.getInt8(this._updatePos(1));\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readUInt16 = function () {\n        return this.getUInt16(this._updatePos(2));\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readUInt32 = function () {\n        return this.getUInt32(this._updatePos(4));\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readInt16 = function () {\n        return this.getInt16(this._updatePos(2));\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readInt32 = function () {\n        return this.getInt32(this._updatePos(4));\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readInt64 = function () {\n        return this.getInt32(this._updatePos(8));\n    };\n    /**\n     * Read from state position.\n     */\n    BaseBuffer.prototype.readFloat64 = function () {\n        return this.getFloat64(this._updatePos(8));\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeUInt8 = function (val) {\n        this.putUInt8(this._updatePos(1), val);\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeInt8 = function (val) {\n        this.putInt8(this._updatePos(1), val);\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeInt16 = function (val) {\n        this.putInt16(this._updatePos(2), val);\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeInt32 = function (val) {\n        this.putInt32(this._updatePos(4), val);\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeUInt32 = function (val) {\n        this.putUInt32(this._updatePos(4), val);\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeInt64 = function (val) {\n        this.putInt64(this._updatePos(8), val);\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeFloat64 = function (val) {\n        this.putFloat64(this._updatePos(8), val);\n    };\n    /**\n     * Write to state position.\n     * @param val\n     */\n    BaseBuffer.prototype.writeBytes = function (val) {\n        this.putBytes(this._updatePos(val.remaining()), val);\n    };\n    /**\n     * Get a slice of this buffer. This method does not copy any data,\n     * but simply provides a slice view of this buffer\n     * @param length\n     */\n    BaseBuffer.prototype.readSlice = function (length) {\n        return this.getSlice(this._updatePos(length), length);\n    };\n    BaseBuffer.prototype._updatePos = function (length) {\n        var p = this.position;\n        this.position += length;\n        return p;\n    };\n    /**\n     * Get remaining\n     */\n    BaseBuffer.prototype.remaining = function () {\n        return this.length - this.position;\n    };\n    /**\n     * Has remaining\n     */\n    BaseBuffer.prototype.hasRemaining = function () {\n        return this.remaining() > 0;\n    };\n    /**\n     * Reset position state\n     */\n    BaseBuffer.prototype.reset = function () {\n        this.position = 0;\n    };\n    /**\n     * Get string representation of buffer and it's state.\n     * @return {string} Buffer as a string\n     */\n    BaseBuffer.prototype.toString = function () {\n        return (this.constructor.name +\n            '( position=' +\n            this.position +\n            ' )\\n  ' +\n            this.toHex());\n    };\n    /**\n     * Get string representation of buffer.\n     * @return {string} Buffer as a string\n     */\n    BaseBuffer.prototype.toHex = function () {\n        var out = '';\n        for (var i = 0; i < this.length; i++) {\n            var hexByte = this.getUInt8(i).toString(16);\n            if (hexByte.length === 1) {\n                hexByte = '0' + hexByte;\n            }\n            out += hexByte;\n            if (i !== this.length - 1) {\n                out += ' ';\n            }\n        }\n        return out;\n    };\n    return BaseBuffer;\n}());\nexports[\"default\"] = BaseBuffer;\n/**\n * Represents a view as slice of another buffer.\n * @access private\n */\nvar SliceBuffer = /** @class */ (function (_super) {\n    __extends(SliceBuffer, _super);\n    function SliceBuffer(start, length, inner) {\n        var _this = _super.call(this, length) || this;\n        _this._start = start;\n        _this._inner = inner;\n        return _this;\n    }\n    SliceBuffer.prototype.putUInt8 = function (position, val) {\n        this._inner.putUInt8(this._start + position, val);\n    };\n    SliceBuffer.prototype.getUInt8 = function (position) {\n        return this._inner.getUInt8(this._start + position);\n    };\n    SliceBuffer.prototype.putInt8 = function (position, val) {\n        this._inner.putInt8(this._start + position, val);\n    };\n    SliceBuffer.prototype.putFloat64 = function (position, val) {\n        this._inner.putFloat64(this._start + position, val);\n    };\n    SliceBuffer.prototype.getInt8 = function (position) {\n        return this._inner.getInt8(this._start + position);\n    };\n    SliceBuffer.prototype.getFloat64 = function (position) {\n        return this._inner.getFloat64(this._start + position);\n    };\n    return SliceBuffer;\n}(BaseBuffer));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/buf/base-buf.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/buf/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/buf/index.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BaseBuffer = void 0;\nvar base_buf_1 = __importDefault(__webpack_require__(/*! ./base-buf */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/buf/base-buf.js\"));\nexports.BaseBuffer = base_buf_1.default;\nexports[\"default\"] = base_buf_1.default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYnVmL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEIsaUNBQWlDLG1CQUFPLENBQUMseUZBQVk7QUFDckQsa0JBQWtCO0FBQ2xCLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmVvNGotbmV4dC1hcHAvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvYnVmL2luZGV4LmpzP2ZkNzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIENvcHlyaWdodCAoYykgXCJOZW80alwiXG4gKiBOZW80aiBTd2VkZW4gQUIgW2h0dHBzOi8vbmVvNGouY29tXVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CYXNlQnVmZmVyID0gdm9pZCAwO1xudmFyIGJhc2VfYnVmXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vYmFzZS1idWZcIikpO1xuZXhwb3J0cy5CYXNlQnVmZmVyID0gYmFzZV9idWZfMS5kZWZhdWx0O1xuZXhwb3J0cy5kZWZhdWx0ID0gYmFzZV9idWZfMS5kZWZhdWx0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/buf/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/channel-buf.js":
/*!******************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/channel/channel-buf.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.alloc = void 0;\nvar buffer_1 = __importDefault(__webpack_require__(/*! buffer */ \"buffer\"));\nvar buf_1 = __importDefault(__webpack_require__(/*! ../buf */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/buf/index.js\"));\nvar ChannelBuffer = /** @class */ (function (_super) {\n    __extends(ChannelBuffer, _super);\n    function ChannelBuffer(arg) {\n        var _this = this;\n        var buffer = newChannelJSBuffer(arg);\n        _this = _super.call(this, buffer.length) || this;\n        _this._buffer = buffer;\n        return _this;\n    }\n    ChannelBuffer.prototype.getUInt8 = function (position) {\n        return this._buffer.readUInt8(position);\n    };\n    ChannelBuffer.prototype.getInt8 = function (position) {\n        return this._buffer.readInt8(position);\n    };\n    ChannelBuffer.prototype.getFloat64 = function (position) {\n        return this._buffer.readDoubleBE(position);\n    };\n    ChannelBuffer.prototype.putUInt8 = function (position, val) {\n        this._buffer.writeUInt8(val, position);\n    };\n    ChannelBuffer.prototype.putInt8 = function (position, val) {\n        this._buffer.writeInt8(val, position);\n    };\n    ChannelBuffer.prototype.putFloat64 = function (position, val) {\n        this._buffer.writeDoubleBE(val, position);\n    };\n    ChannelBuffer.prototype.putBytes = function (position, val) {\n        if (val instanceof ChannelBuffer) {\n            var bytesToCopy = Math.min(val.length - val.position, this.length - position);\n            val._buffer.copy(this._buffer, position, val.position, val.position + bytesToCopy);\n            val.position += bytesToCopy;\n        }\n        else {\n            _super.prototype.putBytes.call(this, position, val);\n        }\n    };\n    ChannelBuffer.prototype.getSlice = function (start, length) {\n        return new ChannelBuffer(this._buffer.slice(start, start + length));\n    };\n    return ChannelBuffer;\n}(buf_1.default));\nexports[\"default\"] = ChannelBuffer;\n/**\n * Allocate a buffer\n *\n * @param {number} size The buffer sizzer\n * @returns {BaseBuffer} The buffer\n */\nfunction alloc(size) {\n    return new ChannelBuffer(size);\n}\nexports.alloc = alloc;\nfunction newChannelJSBuffer(arg) {\n    if (arg instanceof buffer_1.default.Buffer) {\n        return arg;\n    }\n    else if (typeof arg === 'number' &&\n        typeof buffer_1.default.Buffer.alloc === 'function') {\n        // use static factory function present in newer NodeJS versions to allocate new buffer with specified size\n        return buffer_1.default.Buffer.alloc(arg);\n    }\n    else {\n        // fallback to the old, potentially deprecated constructor\n        // eslint-disable-next-line n/no-deprecated-api\n        return new buffer_1.default.Buffer(arg);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvY2hhbm5lbC9jaGFubmVsLWJ1Zi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnQkFBZ0Isc0NBQXNDLGtCQUFrQjtBQUN2Riw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYTtBQUNiLCtCQUErQixtQkFBTyxDQUFDLHNCQUFRO0FBQy9DLDRCQUE0QixtQkFBTyxDQUFDLGtGQUFRO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxZQUFZO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25lbzRqLW5leHQtYXBwLy4vbm9kZV9tb2R1bGVzL25lbzRqLWRyaXZlci1ib2x0LWNvbm5lY3Rpb24vbGliL2NoYW5uZWwvY2hhbm5lbC1idWYuanM/YmJjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qKlxuICogQ29weXJpZ2h0IChjKSBcIk5lbzRqXCJcbiAqIE5lbzRqIFN3ZWRlbiBBQiBbaHR0cHM6Ly9uZW80ai5jb21dXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hbGxvYyA9IHZvaWQgMDtcbnZhciBidWZmZXJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiYnVmZmVyXCIpKTtcbnZhciBidWZfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vYnVmXCIpKTtcbnZhciBDaGFubmVsQnVmZmVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhDaGFubmVsQnVmZmVyLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIENoYW5uZWxCdWZmZXIoYXJnKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciBidWZmZXIgPSBuZXdDaGFubmVsSlNCdWZmZXIoYXJnKTtcbiAgICAgICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBidWZmZXIubGVuZ3RoKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5fYnVmZmVyID0gYnVmZmVyO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIENoYW5uZWxCdWZmZXIucHJvdG90eXBlLmdldFVJbnQ4ID0gZnVuY3Rpb24gKHBvc2l0aW9uKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9idWZmZXIucmVhZFVJbnQ4KHBvc2l0aW9uKTtcbiAgICB9O1xuICAgIENoYW5uZWxCdWZmZXIucHJvdG90eXBlLmdldEludDggPSBmdW5jdGlvbiAocG9zaXRpb24pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2J1ZmZlci5yZWFkSW50OChwb3NpdGlvbik7XG4gICAgfTtcbiAgICBDaGFubmVsQnVmZmVyLnByb3RvdHlwZS5nZXRGbG9hdDY0ID0gZnVuY3Rpb24gKHBvc2l0aW9uKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9idWZmZXIucmVhZERvdWJsZUJFKHBvc2l0aW9uKTtcbiAgICB9O1xuICAgIENoYW5uZWxCdWZmZXIucHJvdG90eXBlLnB1dFVJbnQ4ID0gZnVuY3Rpb24gKHBvc2l0aW9uLCB2YWwpIHtcbiAgICAgICAgdGhpcy5fYnVmZmVyLndyaXRlVUludDgodmFsLCBwb3NpdGlvbik7XG4gICAgfTtcbiAgICBDaGFubmVsQnVmZmVyLnByb3RvdHlwZS5wdXRJbnQ4ID0gZnVuY3Rpb24gKHBvc2l0aW9uLCB2YWwpIHtcbiAgICAgICAgdGhpcy5fYnVmZmVyLndyaXRlSW50OCh2YWwsIHBvc2l0aW9uKTtcbiAgICB9O1xuICAgIENoYW5uZWxCdWZmZXIucHJvdG90eXBlLnB1dEZsb2F0NjQgPSBmdW5jdGlvbiAocG9zaXRpb24sIHZhbCkge1xuICAgICAgICB0aGlzLl9idWZmZXIud3JpdGVEb3VibGVCRSh2YWwsIHBvc2l0aW9uKTtcbiAgICB9O1xuICAgIENoYW5uZWxCdWZmZXIucHJvdG90eXBlLnB1dEJ5dGVzID0gZnVuY3Rpb24gKHBvc2l0aW9uLCB2YWwpIHtcbiAgICAgICAgaWYgKHZhbCBpbnN0YW5jZW9mIENoYW5uZWxCdWZmZXIpIHtcbiAgICAgICAgICAgIHZhciBieXRlc1RvQ29weSA9IE1hdGgubWluKHZhbC5sZW5ndGggLSB2YWwucG9zaXRpb24sIHRoaXMubGVuZ3RoIC0gcG9zaXRpb24pO1xuICAgICAgICAgICAgdmFsLl9idWZmZXIuY29weSh0aGlzLl9idWZmZXIsIHBvc2l0aW9uLCB2YWwucG9zaXRpb24sIHZhbC5wb3NpdGlvbiArIGJ5dGVzVG9Db3B5KTtcbiAgICAgICAgICAgIHZhbC5wb3NpdGlvbiArPSBieXRlc1RvQ29weTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIF9zdXBlci5wcm90b3R5cGUucHV0Qnl0ZXMuY2FsbCh0aGlzLCBwb3NpdGlvbiwgdmFsKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgQ2hhbm5lbEJ1ZmZlci5wcm90b3R5cGUuZ2V0U2xpY2UgPSBmdW5jdGlvbiAoc3RhcnQsIGxlbmd0aCkge1xuICAgICAgICByZXR1cm4gbmV3IENoYW5uZWxCdWZmZXIodGhpcy5fYnVmZmVyLnNsaWNlKHN0YXJ0LCBzdGFydCArIGxlbmd0aCkpO1xuICAgIH07XG4gICAgcmV0dXJuIENoYW5uZWxCdWZmZXI7XG59KGJ1Zl8xLmRlZmF1bHQpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IENoYW5uZWxCdWZmZXI7XG4vKipcbiAqIEFsbG9jYXRlIGEgYnVmZmVyXG4gKlxuICogQHBhcmFtIHtudW1iZXJ9IHNpemUgVGhlIGJ1ZmZlciBzaXp6ZXJcbiAqIEByZXR1cm5zIHtCYXNlQnVmZmVyfSBUaGUgYnVmZmVyXG4gKi9cbmZ1bmN0aW9uIGFsbG9jKHNpemUpIHtcbiAgICByZXR1cm4gbmV3IENoYW5uZWxCdWZmZXIoc2l6ZSk7XG59XG5leHBvcnRzLmFsbG9jID0gYWxsb2M7XG5mdW5jdGlvbiBuZXdDaGFubmVsSlNCdWZmZXIoYXJnKSB7XG4gICAgaWYgKGFyZyBpbnN0YW5jZW9mIGJ1ZmZlcl8xLmRlZmF1bHQuQnVmZmVyKSB7XG4gICAgICAgIHJldHVybiBhcmc7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiBhcmcgPT09ICdudW1iZXInICYmXG4gICAgICAgIHR5cGVvZiBidWZmZXJfMS5kZWZhdWx0LkJ1ZmZlci5hbGxvYyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAvLyB1c2Ugc3RhdGljIGZhY3RvcnkgZnVuY3Rpb24gcHJlc2VudCBpbiBuZXdlciBOb2RlSlMgdmVyc2lvbnMgdG8gYWxsb2NhdGUgbmV3IGJ1ZmZlciB3aXRoIHNwZWNpZmllZCBzaXplXG4gICAgICAgIHJldHVybiBidWZmZXJfMS5kZWZhdWx0LkJ1ZmZlci5hbGxvYyhhcmcpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgLy8gZmFsbGJhY2sgdG8gdGhlIG9sZCwgcG90ZW50aWFsbHkgZGVwcmVjYXRlZCBjb25zdHJ1Y3RvclxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbi9uby1kZXByZWNhdGVkLWFwaVxuICAgICAgICByZXR1cm4gbmV3IGJ1ZmZlcl8xLmRlZmF1bHQuQnVmZmVyKGFyZyk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/channel-buf.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/channel-config.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/channel/channel-config.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar _a = neo4j_driver_core_1.internal.util, ENCRYPTION_OFF = _a.ENCRYPTION_OFF, ENCRYPTION_ON = _a.ENCRYPTION_ON;\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE;\nvar ALLOWED_VALUES_ENCRYPTED = [\n    null,\n    undefined,\n    true,\n    false,\n    ENCRYPTION_ON,\n    ENCRYPTION_OFF\n];\nvar ALLOWED_VALUES_TRUST = [\n    null,\n    undefined,\n    'TRUST_ALL_CERTIFICATES',\n    'TRUST_CUSTOM_CA_SIGNED_CERTIFICATES',\n    'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES'\n];\nvar ChannelConfig = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param {ServerAddress} address the address for the channel to connect to.\n     * @param {Object} driverConfig the driver config provided by the user when driver is created.\n     * @param {string} connectionErrorCode the default error code to use on connection errors.\n     * @param {object} clientCertificate the client certificate\n     */\n    function ChannelConfig(address, driverConfig, connectionErrorCode, clientCertificate) {\n        this.address = address;\n        this.encrypted = extractEncrypted(driverConfig);\n        this.trust = extractTrust(driverConfig);\n        this.trustedCertificates = extractTrustedCertificates(driverConfig);\n        this.knownHostsPath = extractKnownHostsPath(driverConfig);\n        this.connectionErrorCode = connectionErrorCode || SERVICE_UNAVAILABLE;\n        this.connectionTimeout = driverConfig.connectionTimeout;\n        this.clientCertificate = clientCertificate;\n    }\n    return ChannelConfig;\n}());\nexports[\"default\"] = ChannelConfig;\nfunction extractEncrypted(driverConfig) {\n    var value = driverConfig.encrypted;\n    if (ALLOWED_VALUES_ENCRYPTED.indexOf(value) === -1) {\n        throw (0, neo4j_driver_core_1.newError)(\"Illegal value of the encrypted setting \".concat(value, \". Expected one of \").concat(ALLOWED_VALUES_ENCRYPTED));\n    }\n    return value;\n}\nfunction extractTrust(driverConfig) {\n    var value = driverConfig.trust;\n    if (ALLOWED_VALUES_TRUST.indexOf(value) === -1) {\n        throw (0, neo4j_driver_core_1.newError)(\"Illegal value of the trust setting \".concat(value, \". Expected one of \").concat(ALLOWED_VALUES_TRUST));\n    }\n    return value;\n}\nfunction extractTrustedCertificates(driverConfig) {\n    return driverConfig.trustedCertificates || [];\n}\nfunction extractKnownHostsPath(driverConfig) {\n    return driverConfig.knownHosts || null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvY2hhbm5lbC9jaGFubmVsLWNvbmZpZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQixtQkFBTyxDQUFDLDhFQUFtQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxlQUFlO0FBQzlCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9jaGFubmVsL2NoYW5uZWwtY29uZmlnLmpzPzk2YmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIENvcHlyaWdodCAoYykgXCJOZW80alwiXG4gKiBOZW80aiBTd2VkZW4gQUIgW2h0dHBzOi8vbmVvNGouY29tXVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIG5lbzRqX2RyaXZlcl9jb3JlXzEgPSByZXF1aXJlKFwibmVvNGotZHJpdmVyLWNvcmVcIik7XG52YXIgX2EgPSBuZW80al9kcml2ZXJfY29yZV8xLmludGVybmFsLnV0aWwsIEVOQ1JZUFRJT05fT0ZGID0gX2EuRU5DUllQVElPTl9PRkYsIEVOQ1JZUFRJT05fT04gPSBfYS5FTkNSWVBUSU9OX09OO1xudmFyIFNFUlZJQ0VfVU5BVkFJTEFCTEUgPSBuZW80al9kcml2ZXJfY29yZV8xLmVycm9yLlNFUlZJQ0VfVU5BVkFJTEFCTEU7XG52YXIgQUxMT1dFRF9WQUxVRVNfRU5DUllQVEVEID0gW1xuICAgIG51bGwsXG4gICAgdW5kZWZpbmVkLFxuICAgIHRydWUsXG4gICAgZmFsc2UsXG4gICAgRU5DUllQVElPTl9PTixcbiAgICBFTkNSWVBUSU9OX09GRlxuXTtcbnZhciBBTExPV0VEX1ZBTFVFU19UUlVTVCA9IFtcbiAgICBudWxsLFxuICAgIHVuZGVmaW5lZCxcbiAgICAnVFJVU1RfQUxMX0NFUlRJRklDQVRFUycsXG4gICAgJ1RSVVNUX0NVU1RPTV9DQV9TSUdORURfQ0VSVElGSUNBVEVTJyxcbiAgICAnVFJVU1RfU1lTVEVNX0NBX1NJR05FRF9DRVJUSUZJQ0FURVMnXG5dO1xudmFyIENoYW5uZWxDb25maWcgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgLyoqXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtTZXJ2ZXJBZGRyZXNzfSBhZGRyZXNzIHRoZSBhZGRyZXNzIGZvciB0aGUgY2hhbm5lbCB0byBjb25uZWN0IHRvLlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBkcml2ZXJDb25maWcgdGhlIGRyaXZlciBjb25maWcgcHJvdmlkZWQgYnkgdGhlIHVzZXIgd2hlbiBkcml2ZXIgaXMgY3JlYXRlZC5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29ubmVjdGlvbkVycm9yQ29kZSB0aGUgZGVmYXVsdCBlcnJvciBjb2RlIHRvIHVzZSBvbiBjb25uZWN0aW9uIGVycm9ycy5cbiAgICAgKiBAcGFyYW0ge29iamVjdH0gY2xpZW50Q2VydGlmaWNhdGUgdGhlIGNsaWVudCBjZXJ0aWZpY2F0ZVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIENoYW5uZWxDb25maWcoYWRkcmVzcywgZHJpdmVyQ29uZmlnLCBjb25uZWN0aW9uRXJyb3JDb2RlLCBjbGllbnRDZXJ0aWZpY2F0ZSkge1xuICAgICAgICB0aGlzLmFkZHJlc3MgPSBhZGRyZXNzO1xuICAgICAgICB0aGlzLmVuY3J5cHRlZCA9IGV4dHJhY3RFbmNyeXB0ZWQoZHJpdmVyQ29uZmlnKTtcbiAgICAgICAgdGhpcy50cnVzdCA9IGV4dHJhY3RUcnVzdChkcml2ZXJDb25maWcpO1xuICAgICAgICB0aGlzLnRydXN0ZWRDZXJ0aWZpY2F0ZXMgPSBleHRyYWN0VHJ1c3RlZENlcnRpZmljYXRlcyhkcml2ZXJDb25maWcpO1xuICAgICAgICB0aGlzLmtub3duSG9zdHNQYXRoID0gZXh0cmFjdEtub3duSG9zdHNQYXRoKGRyaXZlckNvbmZpZyk7XG4gICAgICAgIHRoaXMuY29ubmVjdGlvbkVycm9yQ29kZSA9IGNvbm5lY3Rpb25FcnJvckNvZGUgfHwgU0VSVklDRV9VTkFWQUlMQUJMRTtcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uVGltZW91dCA9IGRyaXZlckNvbmZpZy5jb25uZWN0aW9uVGltZW91dDtcbiAgICAgICAgdGhpcy5jbGllbnRDZXJ0aWZpY2F0ZSA9IGNsaWVudENlcnRpZmljYXRlO1xuICAgIH1cbiAgICByZXR1cm4gQ2hhbm5lbENvbmZpZztcbn0oKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBDaGFubmVsQ29uZmlnO1xuZnVuY3Rpb24gZXh0cmFjdEVuY3J5cHRlZChkcml2ZXJDb25maWcpIHtcbiAgICB2YXIgdmFsdWUgPSBkcml2ZXJDb25maWcuZW5jcnlwdGVkO1xuICAgIGlmIChBTExPV0VEX1ZBTFVFU19FTkNSWVBURUQuaW5kZXhPZih2YWx1ZSkgPT09IC0xKSB7XG4gICAgICAgIHRocm93ICgwLCBuZW80al9kcml2ZXJfY29yZV8xLm5ld0Vycm9yKShcIklsbGVnYWwgdmFsdWUgb2YgdGhlIGVuY3J5cHRlZCBzZXR0aW5nIFwiLmNvbmNhdCh2YWx1ZSwgXCIuIEV4cGVjdGVkIG9uZSBvZiBcIikuY29uY2F0KEFMTE9XRURfVkFMVUVTX0VOQ1JZUFRFRCkpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWU7XG59XG5mdW5jdGlvbiBleHRyYWN0VHJ1c3QoZHJpdmVyQ29uZmlnKSB7XG4gICAgdmFyIHZhbHVlID0gZHJpdmVyQ29uZmlnLnRydXN0O1xuICAgIGlmIChBTExPV0VEX1ZBTFVFU19UUlVTVC5pbmRleE9mKHZhbHVlKSA9PT0gLTEpIHtcbiAgICAgICAgdGhyb3cgKDAsIG5lbzRqX2RyaXZlcl9jb3JlXzEubmV3RXJyb3IpKFwiSWxsZWdhbCB2YWx1ZSBvZiB0aGUgdHJ1c3Qgc2V0dGluZyBcIi5jb25jYXQodmFsdWUsIFwiLiBFeHBlY3RlZCBvbmUgb2YgXCIpLmNvbmNhdChBTExPV0VEX1ZBTFVFU19UUlVTVCkpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWU7XG59XG5mdW5jdGlvbiBleHRyYWN0VHJ1c3RlZENlcnRpZmljYXRlcyhkcml2ZXJDb25maWcpIHtcbiAgICByZXR1cm4gZHJpdmVyQ29uZmlnLnRydXN0ZWRDZXJ0aWZpY2F0ZXMgfHwgW107XG59XG5mdW5jdGlvbiBleHRyYWN0S25vd25Ib3N0c1BhdGgoZHJpdmVyQ29uZmlnKSB7XG4gICAgcmV0dXJuIGRyaXZlckNvbmZpZy5rbm93bkhvc3RzIHx8IG51bGw7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/channel-config.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/chunking.js":
/*!***************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/channel/chunking.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Dechunker = exports.Chunker = void 0;\nvar base_buf_1 = __importDefault(__webpack_require__(/*! ../buf/base-buf */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/buf/base-buf.js\"));\nvar channel_buf_1 = __webpack_require__(/*! ./channel-buf */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/channel-buf.js\");\nvar combined_buf_1 = __importDefault(__webpack_require__(/*! ./combined-buf */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/combined-buf.js\"));\nvar _CHUNK_HEADER_SIZE = 2;\nvar _MESSAGE_BOUNDARY = 0x00;\nvar _DEFAULT_BUFFER_SIZE = 1400; // http://stackoverflow.com/questions/2613734/maximum-packet-size-for-a-tcp-connection\n/**\n * Looks like a writable buffer, chunks output transparently into a channel below.\n * @access private\n */\nvar Chunker = /** @class */ (function (_super) {\n    __extends(Chunker, _super);\n    function Chunker(channel, bufferSize) {\n        var _this = _super.call(this, 0) || this;\n        _this._bufferSize = bufferSize || _DEFAULT_BUFFER_SIZE;\n        _this._ch = channel;\n        _this._buffer = (0, channel_buf_1.alloc)(_this._bufferSize);\n        _this._currentChunkStart = 0;\n        _this._chunkOpen = false;\n        return _this;\n    }\n    Chunker.prototype.putUInt8 = function (position, val) {\n        this._ensure(1);\n        this._buffer.writeUInt8(val);\n    };\n    Chunker.prototype.putInt8 = function (position, val) {\n        this._ensure(1);\n        this._buffer.writeInt8(val);\n    };\n    Chunker.prototype.putFloat64 = function (position, val) {\n        this._ensure(8);\n        this._buffer.writeFloat64(val);\n    };\n    Chunker.prototype.putBytes = function (position, data) {\n        // TODO: If data is larger than our chunk size or so, we're very likely better off just passing this buffer on\n        // rather than doing the copy here TODO: *however* note that we need some way to find out when the data has been\n        // written (and thus the buffer can be re-used) if we take that approach\n        while (data.remaining() > 0) {\n            // Ensure there is an open chunk, and that it has at least one byte of space left\n            this._ensure(1);\n            if (this._buffer.remaining() > data.remaining()) {\n                this._buffer.writeBytes(data);\n            }\n            else {\n                this._buffer.writeBytes(data.readSlice(this._buffer.remaining()));\n            }\n        }\n        return this;\n    };\n    Chunker.prototype.flush = function () {\n        if (this._buffer.position > 0) {\n            this._closeChunkIfOpen();\n            // Local copy and clear the buffer field. This ensures that the buffer is not re-released if the flush call fails\n            var out = this._buffer;\n            this._buffer = null;\n            this._ch.write(out.getSlice(0, out.position));\n            // Alloc a new output buffer. We assume we're using NodeJS's buffer pooling under the hood here!\n            this._buffer = (0, channel_buf_1.alloc)(this._bufferSize);\n            this._chunkOpen = false;\n        }\n        return this;\n    };\n    /**\n     * Bolt messages are encoded in one or more chunks, and the boundary between two messages\n     * is encoded as a 0-length chunk, `00 00`. This inserts such a message boundary, closing\n     * any currently open chunk as needed\n     */\n    Chunker.prototype.messageBoundary = function () {\n        this._closeChunkIfOpen();\n        if (this._buffer.remaining() < _CHUNK_HEADER_SIZE) {\n            this.flush();\n        }\n        // Write message boundary\n        this._buffer.writeInt16(_MESSAGE_BOUNDARY);\n    };\n    /** Ensure at least the given size is available for writing */\n    Chunker.prototype._ensure = function (size) {\n        var toWriteSize = this._chunkOpen ? size : size + _CHUNK_HEADER_SIZE;\n        if (this._buffer.remaining() < toWriteSize) {\n            this.flush();\n        }\n        if (!this._chunkOpen) {\n            this._currentChunkStart = this._buffer.position;\n            this._buffer.position = this._buffer.position + _CHUNK_HEADER_SIZE;\n            this._chunkOpen = true;\n        }\n    };\n    Chunker.prototype._closeChunkIfOpen = function () {\n        if (this._chunkOpen) {\n            var chunkSize = this._buffer.position - (this._currentChunkStart + _CHUNK_HEADER_SIZE);\n            this._buffer.putUInt16(this._currentChunkStart, chunkSize);\n            this._chunkOpen = false;\n        }\n    };\n    return Chunker;\n}(base_buf_1.default));\nexports.Chunker = Chunker;\n/**\n * Combines chunks until a complete message is gathered up, and then forwards that\n * message to an 'onmessage' listener.\n * @access private\n */\nvar Dechunker = /** @class */ (function () {\n    function Dechunker() {\n        this._currentMessage = [];\n        this._partialChunkHeader = 0;\n        this._state = this.AWAITING_CHUNK;\n    }\n    Dechunker.prototype.AWAITING_CHUNK = function (buf) {\n        if (buf.remaining() >= 2) {\n            // Whole header available, read that\n            return this._onHeader(buf.readUInt16());\n        }\n        else {\n            // Only one byte available, read that and wait for the second byte\n            this._partialChunkHeader = buf.readUInt8() << 8;\n            return this.IN_HEADER;\n        }\n    };\n    Dechunker.prototype.IN_HEADER = function (buf) {\n        // First header byte read, now we read the next one\n        return this._onHeader((this._partialChunkHeader | buf.readUInt8()) & 0xffff);\n    };\n    Dechunker.prototype.IN_CHUNK = function (buf) {\n        if (this._chunkSize <= buf.remaining()) {\n            // Current packet is larger than current chunk, or same size:\n            this._currentMessage.push(buf.readSlice(this._chunkSize));\n            return this.AWAITING_CHUNK;\n        }\n        else {\n            // Current packet is smaller than the chunk we're reading, split the current chunk itself up\n            this._chunkSize -= buf.remaining();\n            this._currentMessage.push(buf.readSlice(buf.remaining()));\n            return this.IN_CHUNK;\n        }\n    };\n    Dechunker.prototype.CLOSED = function (buf) {\n        // no-op\n    };\n    /** Called when a complete chunk header has been received */\n    Dechunker.prototype._onHeader = function (header) {\n        if (header === 0) {\n            // Message boundary\n            var message = void 0;\n            switch (this._currentMessage.length) {\n                case 0:\n                    // Keep alive chunk, sent by server to keep network alive.\n                    return this.AWAITING_CHUNK;\n                case 1:\n                    // All data in one chunk, this signals the end of that chunk.\n                    message = this._currentMessage[0];\n                    break;\n                default:\n                    // A large chunk of data received, this signals that the last chunk has been received.\n                    message = new combined_buf_1.default(this._currentMessage);\n                    break;\n            }\n            this._currentMessage = [];\n            this.onmessage(message);\n            return this.AWAITING_CHUNK;\n        }\n        else {\n            this._chunkSize = header;\n            return this.IN_CHUNK;\n        }\n    };\n    Dechunker.prototype.write = function (buf) {\n        while (buf.hasRemaining()) {\n            this._state = this._state(buf);\n        }\n    };\n    return Dechunker;\n}());\nexports.Dechunker = Dechunker;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/chunking.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/combined-buf.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/channel/combined-buf.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar buf_1 = __webpack_require__(/*! ../buf */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/buf/index.js\");\nvar channel_buf_1 = __webpack_require__(/*! ./channel-buf */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/channel-buf.js\");\n/**\n * Buffer that combines multiple buffers, exposing them as one single buffer.\n */\nvar CombinedBuffer = /** @class */ (function (_super) {\n    __extends(CombinedBuffer, _super);\n    function CombinedBuffer(buffers) {\n        var _this = this;\n        var length = 0;\n        for (var i = 0; i < buffers.length; i++) {\n            length += buffers[i].length;\n        }\n        _this = _super.call(this, length) || this;\n        _this._buffers = buffers;\n        return _this;\n    }\n    CombinedBuffer.prototype.getUInt8 = function (position) {\n        // Surely there's a faster way to do this.. some sort of lookup table thing?\n        for (var i = 0; i < this._buffers.length; i++) {\n            var buffer = this._buffers[i];\n            // If the position is not in the current buffer, skip the current buffer\n            if (position >= buffer.length) {\n                position -= buffer.length;\n            }\n            else {\n                return buffer.getUInt8(position);\n            }\n        }\n    };\n    CombinedBuffer.prototype.getInt8 = function (position) {\n        // Surely there's a faster way to do this.. some sort of lookup table thing?\n        for (var i = 0; i < this._buffers.length; i++) {\n            var buffer = this._buffers[i];\n            // If the position is not in the current buffer, skip the current buffer\n            if (position >= buffer.length) {\n                position -= buffer.length;\n            }\n            else {\n                return buffer.getInt8(position);\n            }\n        }\n    };\n    CombinedBuffer.prototype.getFloat64 = function (position) {\n        // At some point, a more efficient impl. For now, we copy the 8 bytes\n        // we want to read and depend on the platform impl of IEEE 754.\n        var b = (0, channel_buf_1.alloc)(8);\n        for (var i = 0; i < 8; i++) {\n            b.putUInt8(i, this.getUInt8(position + i));\n        }\n        return b.getFloat64(0);\n    };\n    return CombinedBuffer;\n}(buf_1.BaseBuffer));\nexports[\"default\"] = CombinedBuffer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvY2hhbm5lbC9jb21iaW5lZC1idWYuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0JBQWdCLHNDQUFzQyxrQkFBa0I7QUFDdkYsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsQ0FBQztBQUNELDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxZQUFZLG1CQUFPLENBQUMsa0ZBQVE7QUFDNUIsb0JBQW9CLG1CQUFPLENBQUMsbUdBQWU7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixvQkFBb0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwwQkFBMEI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDBCQUEwQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLE9BQU87QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL25lbzRqLW5leHQtYXBwLy4vbm9kZV9tb2R1bGVzL25lbzRqLWRyaXZlci1ib2x0LWNvbm5lY3Rpb24vbGliL2NoYW5uZWwvY29tYmluZWQtYnVmLmpzP2NhNTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIENvcHlyaWdodCAoYykgXCJOZW80alwiXG4gKiBOZW80aiBTd2VkZW4gQUIgW2h0dHBzOi8vbmVvNGouY29tXVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBidWZfMSA9IHJlcXVpcmUoXCIuLi9idWZcIik7XG52YXIgY2hhbm5lbF9idWZfMSA9IHJlcXVpcmUoXCIuL2NoYW5uZWwtYnVmXCIpO1xuLyoqXG4gKiBCdWZmZXIgdGhhdCBjb21iaW5lcyBtdWx0aXBsZSBidWZmZXJzLCBleHBvc2luZyB0aGVtIGFzIG9uZSBzaW5nbGUgYnVmZmVyLlxuICovXG52YXIgQ29tYmluZWRCdWZmZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKENvbWJpbmVkQnVmZmVyLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIENvbWJpbmVkQnVmZmVyKGJ1ZmZlcnMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIGxlbmd0aCA9IDA7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYnVmZmVycy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgbGVuZ3RoICs9IGJ1ZmZlcnNbaV0ubGVuZ3RoO1xuICAgICAgICB9XG4gICAgICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgbGVuZ3RoKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5fYnVmZmVycyA9IGJ1ZmZlcnM7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgQ29tYmluZWRCdWZmZXIucHJvdG90eXBlLmdldFVJbnQ4ID0gZnVuY3Rpb24gKHBvc2l0aW9uKSB7XG4gICAgICAgIC8vIFN1cmVseSB0aGVyZSdzIGEgZmFzdGVyIHdheSB0byBkbyB0aGlzLi4gc29tZSBzb3J0IG9mIGxvb2t1cCB0YWJsZSB0aGluZz9cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLl9idWZmZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgYnVmZmVyID0gdGhpcy5fYnVmZmVyc1tpXTtcbiAgICAgICAgICAgIC8vIElmIHRoZSBwb3NpdGlvbiBpcyBub3QgaW4gdGhlIGN1cnJlbnQgYnVmZmVyLCBza2lwIHRoZSBjdXJyZW50IGJ1ZmZlclxuICAgICAgICAgICAgaWYgKHBvc2l0aW9uID49IGJ1ZmZlci5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbiAtPSBidWZmZXIubGVuZ3RoO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGJ1ZmZlci5nZXRVSW50OChwb3NpdGlvbik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIENvbWJpbmVkQnVmZmVyLnByb3RvdHlwZS5nZXRJbnQ4ID0gZnVuY3Rpb24gKHBvc2l0aW9uKSB7XG4gICAgICAgIC8vIFN1cmVseSB0aGVyZSdzIGEgZmFzdGVyIHdheSB0byBkbyB0aGlzLi4gc29tZSBzb3J0IG9mIGxvb2t1cCB0YWJsZSB0aGluZz9cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLl9idWZmZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgYnVmZmVyID0gdGhpcy5fYnVmZmVyc1tpXTtcbiAgICAgICAgICAgIC8vIElmIHRoZSBwb3NpdGlvbiBpcyBub3QgaW4gdGhlIGN1cnJlbnQgYnVmZmVyLCBza2lwIHRoZSBjdXJyZW50IGJ1ZmZlclxuICAgICAgICAgICAgaWYgKHBvc2l0aW9uID49IGJ1ZmZlci5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbiAtPSBidWZmZXIubGVuZ3RoO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGJ1ZmZlci5nZXRJbnQ4KHBvc2l0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgQ29tYmluZWRCdWZmZXIucHJvdG90eXBlLmdldEZsb2F0NjQgPSBmdW5jdGlvbiAocG9zaXRpb24pIHtcbiAgICAgICAgLy8gQXQgc29tZSBwb2ludCwgYSBtb3JlIGVmZmljaWVudCBpbXBsLiBGb3Igbm93LCB3ZSBjb3B5IHRoZSA4IGJ5dGVzXG4gICAgICAgIC8vIHdlIHdhbnQgdG8gcmVhZCBhbmQgZGVwZW5kIG9uIHRoZSBwbGF0Zm9ybSBpbXBsIG9mIElFRUUgNzU0LlxuICAgICAgICB2YXIgYiA9ICgwLCBjaGFubmVsX2J1Zl8xLmFsbG9jKSg4KTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA4OyBpKyspIHtcbiAgICAgICAgICAgIGIucHV0VUludDgoaSwgdGhpcy5nZXRVSW50OChwb3NpdGlvbiArIGkpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYi5nZXRGbG9hdDY0KDApO1xuICAgIH07XG4gICAgcmV0dXJuIENvbWJpbmVkQnVmZmVyO1xufShidWZfMS5CYXNlQnVmZmVyKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBDb21iaW5lZEJ1ZmZlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/combined-buf.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/channel/index.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.utf8 = exports.alloc = exports.ChannelConfig = void 0;\n__exportStar(__webpack_require__(/*! ./node */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/node/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./chunking */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/chunking.js\"), exports);\nvar channel_config_1 = __webpack_require__(/*! ./channel-config */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/channel-config.js\");\nObject.defineProperty(exports, \"ChannelConfig\", ({ enumerable: true, get: function () { return __importDefault(channel_config_1).default; } }));\nvar channel_buf_1 = __webpack_require__(/*! ./channel-buf */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/channel-buf.js\");\nObject.defineProperty(exports, \"alloc\", ({ enumerable: true, get: function () { return channel_buf_1.alloc; } }));\nvar utf8_1 = __webpack_require__(/*! ./utf8 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/utf8.js\");\nObject.defineProperty(exports, \"utf8\", ({ enumerable: true, get: function () { return __importDefault(utf8_1).default; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvY2hhbm5lbC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsWUFBWSxHQUFHLGFBQWEsR0FBRyxxQkFBcUI7QUFDcEQsYUFBYSxtQkFBTyxDQUFDLDJGQUFRO0FBQzdCLGFBQWEsbUJBQU8sQ0FBQyw2RkFBWTtBQUNqQyx1QkFBdUIsbUJBQU8sQ0FBQyx5R0FBa0I7QUFDakQsaURBQWdELEVBQUUscUNBQXFDLHFEQUFxRCxFQUFDO0FBQzdJLG9CQUFvQixtQkFBTyxDQUFDLG1HQUFlO0FBQzNDLHlDQUF3QyxFQUFFLHFDQUFxQywrQkFBK0IsRUFBQztBQUMvRyxhQUFhLG1CQUFPLENBQUMscUZBQVE7QUFDN0Isd0NBQXVDLEVBQUUscUNBQXFDLDJDQUEyQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmVvNGotbmV4dC1hcHAvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvY2hhbm5lbC9pbmRleC5qcz83MDM0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51dGY4ID0gZXhwb3J0cy5hbGxvYyA9IGV4cG9ydHMuQ2hhbm5lbENvbmZpZyA9IHZvaWQgMDtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9ub2RlXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jaHVua2luZ1wiKSwgZXhwb3J0cyk7XG52YXIgY2hhbm5lbF9jb25maWdfMSA9IHJlcXVpcmUoXCIuL2NoYW5uZWwtY29uZmlnXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ2hhbm5lbENvbmZpZ1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gX19pbXBvcnREZWZhdWx0KGNoYW5uZWxfY29uZmlnXzEpLmRlZmF1bHQ7IH0gfSk7XG52YXIgY2hhbm5lbF9idWZfMSA9IHJlcXVpcmUoXCIuL2NoYW5uZWwtYnVmXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYWxsb2NcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNoYW5uZWxfYnVmXzEuYWxsb2M7IH0gfSk7XG52YXIgdXRmOF8xID0gcmVxdWlyZShcIi4vdXRmOFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInV0ZjhcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF9faW1wb3J0RGVmYXVsdCh1dGY4XzEpLmRlZmF1bHQ7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/node/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/channel/node/index.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ClientCertificatesLoader = exports.HostNameResolver = exports.Channel = void 0;\nvar node_channel_1 = __importDefault(__webpack_require__(/*! ./node-channel */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/node/node-channel.js\"));\nvar node_host_name_resolver_1 = __importDefault(__webpack_require__(/*! ./node-host-name-resolver */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/node/node-host-name-resolver.js\"));\nvar node_client_certificates_loader_1 = __importDefault(__webpack_require__(/*! ./node-client-certificates-loader */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/node/node-client-certificates-loader.js\"));\n/*\n\nThis module exports a set of components to be used in NodeJS environment.\nThey are not compatible with browser environment.\nAll files that require environment-dependent APIs should import this file by default.\nImports/requires are replaced at build time with `browser/index.js` when building a browser bundle.\n\nNOTE: exports in this module should have exactly the same names/structure as exports in `browser/index.js`.\n\n */\nexports.Channel = node_channel_1.default;\nexports.HostNameResolver = node_host_name_resolver_1.default;\nexports.ClientCertificatesLoader = node_client_certificates_loader_1.default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvY2hhbm5lbC9ub2RlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQ0FBZ0MsR0FBRyx3QkFBd0IsR0FBRyxlQUFlO0FBQzdFLHFDQUFxQyxtQkFBTyxDQUFDLDBHQUFnQjtBQUM3RCxnREFBZ0QsbUJBQU8sQ0FBQyxnSUFBMkI7QUFDbkYsd0RBQXdELG1CQUFPLENBQUMsZ0pBQW1DO0FBQ25HOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsZUFBZTtBQUNmLHdCQUF3QjtBQUN4QixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9jaGFubmVsL25vZGUvaW5kZXguanM/ZTY1MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qKlxuICogQ29weXJpZ2h0IChjKSBcIk5lbzRqXCJcbiAqIE5lbzRqIFN3ZWRlbiBBQiBbaHR0cHM6Ly9uZW80ai5jb21dXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNsaWVudENlcnRpZmljYXRlc0xvYWRlciA9IGV4cG9ydHMuSG9zdE5hbWVSZXNvbHZlciA9IGV4cG9ydHMuQ2hhbm5lbCA9IHZvaWQgMDtcbnZhciBub2RlX2NoYW5uZWxfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9ub2RlLWNoYW5uZWxcIikpO1xudmFyIG5vZGVfaG9zdF9uYW1lX3Jlc29sdmVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vbm9kZS1ob3N0LW5hbWUtcmVzb2x2ZXJcIikpO1xudmFyIG5vZGVfY2xpZW50X2NlcnRpZmljYXRlc19sb2FkZXJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9ub2RlLWNsaWVudC1jZXJ0aWZpY2F0ZXMtbG9hZGVyXCIpKTtcbi8qXG5cblRoaXMgbW9kdWxlIGV4cG9ydHMgYSBzZXQgb2YgY29tcG9uZW50cyB0byBiZSB1c2VkIGluIE5vZGVKUyBlbnZpcm9ubWVudC5cblRoZXkgYXJlIG5vdCBjb21wYXRpYmxlIHdpdGggYnJvd3NlciBlbnZpcm9ubWVudC5cbkFsbCBmaWxlcyB0aGF0IHJlcXVpcmUgZW52aXJvbm1lbnQtZGVwZW5kZW50IEFQSXMgc2hvdWxkIGltcG9ydCB0aGlzIGZpbGUgYnkgZGVmYXVsdC5cbkltcG9ydHMvcmVxdWlyZXMgYXJlIHJlcGxhY2VkIGF0IGJ1aWxkIHRpbWUgd2l0aCBgYnJvd3Nlci9pbmRleC5qc2Agd2hlbiBidWlsZGluZyBhIGJyb3dzZXIgYnVuZGxlLlxuXG5OT1RFOiBleHBvcnRzIGluIHRoaXMgbW9kdWxlIHNob3VsZCBoYXZlIGV4YWN0bHkgdGhlIHNhbWUgbmFtZXMvc3RydWN0dXJlIGFzIGV4cG9ydHMgaW4gYGJyb3dzZXIvaW5kZXguanNgLlxuXG4gKi9cbmV4cG9ydHMuQ2hhbm5lbCA9IG5vZGVfY2hhbm5lbF8xLmRlZmF1bHQ7XG5leHBvcnRzLkhvc3ROYW1lUmVzb2x2ZXIgPSBub2RlX2hvc3RfbmFtZV9yZXNvbHZlcl8xLmRlZmF1bHQ7XG5leHBvcnRzLkNsaWVudENlcnRpZmljYXRlc0xvYWRlciA9IG5vZGVfY2xpZW50X2NlcnRpZmljYXRlc19sb2FkZXJfMS5kZWZhdWx0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/node/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/node/node-channel.js":
/*!************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/channel/node/node-channel.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar net_1 = __importDefault(__webpack_require__(/*! net */ \"net\"));\nvar tls_1 = __importDefault(__webpack_require__(/*! tls */ \"tls\"));\nvar fs_1 = __importDefault(__webpack_require__(/*! fs */ \"fs\"));\nvar channel_buf_1 = __importDefault(__webpack_require__(/*! ../channel-buf */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/channel-buf.js\"));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar _a = neo4j_driver_core_1.internal.util, ENCRYPTION_OFF = _a.ENCRYPTION_OFF, ENCRYPTION_ON = _a.ENCRYPTION_ON, isEmptyObjectOrNull = _a.isEmptyObjectOrNull;\nvar _CONNECTION_IDGEN = 0;\nvar TrustStrategy = {\n    TRUST_CUSTOM_CA_SIGNED_CERTIFICATES: function (config, onSuccess, onFailure) {\n        if (!config.trustedCertificates ||\n            config.trustedCertificates.length === 0) {\n            onFailure((0, neo4j_driver_core_1.newError)('You are using TRUST_CUSTOM_CA_SIGNED_CERTIFICATES as the method ' +\n                'to verify trust for encrypted  connections, but have not configured any ' +\n                'trustedCertificates. You  must specify the path to at least one trusted ' +\n                'X.509 certificate for this to work. Two other alternatives is to use ' +\n                'TRUST_ALL_CERTIFICATES or to disable encryption by setting encrypted=\"' +\n                ENCRYPTION_OFF +\n                '\"' +\n                'in your driver configuration.'));\n            return;\n        }\n        var tlsOpts = newTlsOptions(config.address.host(), config.trustedCertificates.map(function (f) { return fs_1.default.readFileSync(f); }), config.clientCertificate);\n        var socket = tls_1.default.connect(config.address.port(), config.address.resolvedHost(), tlsOpts, function () {\n            if (!socket.authorized) {\n                onFailure((0, neo4j_driver_core_1.newError)('Server certificate is not trusted. If you trust the database you are connecting to, add' +\n                    ' the signing certificate, or the server certificate, to the list of certificates trusted by this driver' +\n                    \" using `neo4j.driver(.., { trustedCertificates:['path/to/certificate.crt']}). This \" +\n                    ' is a security measure to protect against man-in-the-middle attacks. If you are just trying ' +\n                    ' Neo4j out and are not concerned about encryption, simply disable it using `encrypted=\"' +\n                    ENCRYPTION_OFF +\n                    '\"`' +\n                    ' in the driver options. Socket responded with: ' +\n                    socket.authorizationError));\n            }\n            else {\n                onSuccess();\n            }\n        });\n        socket.on('error', onFailure);\n        return configureSocket(socket);\n    },\n    TRUST_SYSTEM_CA_SIGNED_CERTIFICATES: function (config, onSuccess, onFailure) {\n        var tlsOpts = newTlsOptions(config.address.host(), undefined, config.clientCertificate);\n        var socket = tls_1.default.connect(config.address.port(), config.address.resolvedHost(), tlsOpts, function () {\n            if (!socket.authorized) {\n                onFailure((0, neo4j_driver_core_1.newError)('Server certificate is not trusted. If you trust the database you are connecting to, use ' +\n                    'TRUST_CUSTOM_CA_SIGNED_CERTIFICATES and add' +\n                    ' the signing certificate, or the server certificate, to the list of certificates trusted by this driver' +\n                    \" using `neo4j.driver(.., { trustedCertificates:['path/to/certificate.crt']}). This \" +\n                    ' is a security measure to protect against man-in-the-middle attacks. If you are just trying ' +\n                    ' Neo4j out and are not concerned about encryption, simply disable it using `encrypted=\"' +\n                    ENCRYPTION_OFF +\n                    '\"`' +\n                    ' in the driver options. Socket responded with: ' +\n                    socket.authorizationError));\n            }\n            else {\n                onSuccess();\n            }\n        });\n        socket.on('error', onFailure);\n        return configureSocket(socket);\n    },\n    TRUST_ALL_CERTIFICATES: function (config, onSuccess, onFailure) {\n        var tlsOpts = newTlsOptions(config.address.host(), undefined, config.clientCertificate);\n        var socket = tls_1.default.connect(config.address.port(), config.address.resolvedHost(), tlsOpts, function () {\n            var certificate = socket.getPeerCertificate();\n            if (isEmptyObjectOrNull(certificate)) {\n                onFailure((0, neo4j_driver_core_1.newError)('Secure connection was successful but server did not return any valid ' +\n                    'certificates. Such connection can not be trusted. If you are just trying ' +\n                    ' Neo4j out and are not concerned about encryption, simply disable it using ' +\n                    '`encrypted=\"' +\n                    ENCRYPTION_OFF +\n                    '\"` in the driver options. ' +\n                    'Socket responded with: ' +\n                    socket.authorizationError));\n            }\n            else {\n                onSuccess();\n            }\n        });\n        socket.on('error', onFailure);\n        return configureSocket(socket);\n    }\n};\n/**\n * Connect using node socket.\n * @param {ChannelConfig} config - configuration of this channel.\n * @param {function} onSuccess - callback to execute on connection success.\n * @param {function} onFailure - callback to execute on connection failure.\n * @return {*} socket connection.\n */\nfunction _connect(config, onSuccess, onFailure) {\n    if (onFailure === void 0) { onFailure = function () { return null; }; }\n    var trustStrategy = trustStrategyName(config);\n    if (!isEncrypted(config)) {\n        var socket = net_1.default.connect(config.address.port(), config.address.resolvedHost(), onSuccess);\n        socket.on('error', onFailure);\n        return configureSocket(socket);\n    }\n    else if (TrustStrategy[trustStrategy]) {\n        return TrustStrategy[trustStrategy](config, onSuccess, onFailure);\n    }\n    else {\n        onFailure((0, neo4j_driver_core_1.newError)('Unknown trust strategy: ' +\n            config.trust +\n            '. Please use either ' +\n            \"trust:'TRUST_CUSTOM_CA_SIGNED_CERTIFICATES' or trust:'TRUST_ALL_CERTIFICATES' in your driver \" +\n            'configuration. Alternatively, you can disable encryption by setting ' +\n            '`encrypted:\"' +\n            ENCRYPTION_OFF +\n            '\"`. There is no mechanism to use encryption without trust verification, ' +\n            'because this incurs the overhead of encryption without improving security. If ' +\n            'the driver does not verify that the peer it is connected to is really Neo4j, it ' +\n            'is very easy for an attacker to bypass the encryption by pretending to be Neo4j.'));\n    }\n}\nfunction isEncrypted(config) {\n    var encryptionNotConfigured = config.encrypted == null || config.encrypted === undefined;\n    if (encryptionNotConfigured) {\n        // default to using encryption if trust-all-certificates is available\n        return false;\n    }\n    return config.encrypted === true || config.encrypted === ENCRYPTION_ON;\n}\nfunction trustStrategyName(config) {\n    if (config.trust) {\n        return config.trust;\n    }\n    return 'TRUST_SYSTEM_CA_SIGNED_CERTIFICATES';\n}\n/**\n * Create a new configuration options object for the {@code tls.connect()} call.\n * @param {string} hostname the target hostname.\n * @param {string|undefined} ca an optional CA.\n * @param {string|undefined} cert an optional client cert.\n * @param {string|undefined} key an optional client cert key.\n * @param {string|undefined} passphrase an optional client cert passphrase\n * @return {Object} a new options object.\n */\nfunction newTlsOptions(hostname, ca, clientCertificate) {\n    if (ca === void 0) { ca = undefined; }\n    if (clientCertificate === void 0) { clientCertificate = undefined; }\n    return __assign({ rejectUnauthorized: false, servername: hostname, // server name for the SNI (Server Name Indication) TLS extension\n        ca: ca }, clientCertificate);\n}\n/**\n * Update socket options for the newly created socket. Accepts either `net.Socket` or its subclass `tls.TLSSocket`.\n * @param {net.Socket} socket the socket to configure.\n * @return {net.Socket} the given socket.\n */\nfunction configureSocket(socket) {\n    socket.setKeepAlive(true);\n    return socket;\n}\n/**\n * In a Node.js environment the 'net' module is used\n * as transport.\n * @access private\n */\nvar NodeChannel = /** @class */ (function () {\n    /**\n     * Create new instance\n     * @param {ChannelConfig} config - configuration for this channel.\n     */\n    function NodeChannel(config, connect) {\n        if (connect === void 0) { connect = _connect; }\n        var self = this;\n        this.id = _CONNECTION_IDGEN++;\n        this._pending = [];\n        this._open = true;\n        this._error = null;\n        this._handleConnectionError = this._handleConnectionError.bind(this);\n        this._handleConnectionTerminated = this._handleConnectionTerminated.bind(this);\n        this._connectionErrorCode = config.connectionErrorCode;\n        this._receiveTimeout = null;\n        this._receiveTimeoutStarted = false;\n        this._conn = connect(config, function () {\n            if (!self._open) {\n                return;\n            }\n            self._conn.on('data', function (buffer) {\n                if (self.onmessage) {\n                    self.onmessage(new channel_buf_1.default(buffer));\n                }\n            });\n            self._conn.on('error', self._handleConnectionError);\n            self._conn.on('end', self._handleConnectionTerminated);\n            // Drain all pending messages\n            var pending = self._pending;\n            self._pending = null;\n            for (var i = 0; i < pending.length; i++) {\n                self.write(pending[i]);\n            }\n        }, this._handleConnectionError);\n        this._setupConnectionTimeout(config, this._conn);\n    }\n    NodeChannel.prototype._handleConnectionError = function (err) {\n        var msg = 'Failed to connect to server. ' +\n            'Please ensure that your database is listening on the correct host and port ' +\n            'and that you have compatible encryption settings both on Neo4j server and driver. ' +\n            'Note that the default encryption setting has changed in Neo4j 4.0.';\n        if (err.message)\n            msg += ' Caused by: ' + err.message;\n        this._error = (0, neo4j_driver_core_1.newError)(msg, this._connectionErrorCode);\n        if (this.onerror) {\n            this.onerror(this._error);\n        }\n    };\n    NodeChannel.prototype._handleConnectionTerminated = function () {\n        this._open = false;\n        this._error = (0, neo4j_driver_core_1.newError)('Connection was closed by server', this._connectionErrorCode);\n        if (this.onerror) {\n            this.onerror(this._error);\n        }\n    };\n    /**\n     * Setup connection timeout on the socket, if configured.\n     * @param {ChannelConfig} config - configuration of this channel.\n     * @param {Object} socket - `net.Socket` or `tls.TLSSocket` object.\n     * @private\n     */\n    NodeChannel.prototype._setupConnectionTimeout = function (config, socket) {\n        var _this = this;\n        var timeout = config.connectionTimeout;\n        if (timeout) {\n            var connectListener_1 = function () {\n                // connected - clear connection timeout\n                socket.setTimeout(0);\n            };\n            var timeoutListener_1 = function () {\n                // timeout fired - not connected within configured time. cancel timeout and destroy socket\n                socket.setTimeout(0);\n                socket.destroy((0, neo4j_driver_core_1.newError)(\"Failed to establish connection in \".concat(timeout, \"ms\"), config.connectionErrorCode));\n            };\n            socket.on('connect', connectListener_1);\n            socket.on('timeout', timeoutListener_1);\n            this._removeConnectionTimeoutListeners = function () {\n                _this._conn.off('connect', connectListener_1);\n                _this._conn.off('timeout', timeoutListener_1);\n            };\n            socket.setTimeout(timeout);\n        }\n    };\n    /**\n     * Setup the receive timeout for the channel.\n     *\n     * @param {number} receiveTimeout How long the channel will wait for receiving data before timing out (ms)\n     * @returns {void}\n     */\n    NodeChannel.prototype.setupReceiveTimeout = function (receiveTimeout) {\n        var _this = this;\n        if (this._removeConnectionTimeoutListeners) {\n            this._removeConnectionTimeoutListeners();\n        }\n        this._conn.on('timeout', function () {\n            _this._conn.destroy((0, neo4j_driver_core_1.newError)(\"Connection lost. Server didn't respond in \".concat(receiveTimeout, \"ms\"), _this._connectionErrorCode));\n        });\n        this._receiveTimeout = receiveTimeout;\n    };\n    /**\n     * Stops the receive timeout for the channel.\n     */\n    NodeChannel.prototype.stopReceiveTimeout = function () {\n        if (this._receiveTimeout !== null && this._receiveTimeoutStarted) {\n            this._receiveTimeoutStarted = false;\n            this._conn.setTimeout(0);\n        }\n    };\n    /**\n     * Start the receive timeout for the channel.\n     */\n    NodeChannel.prototype.startReceiveTimeout = function () {\n        if (this._receiveTimeout !== null && !this._receiveTimeoutStarted) {\n            this._receiveTimeoutStarted = true;\n            this._conn.setTimeout(this._receiveTimeout);\n        }\n    };\n    /**\n     * Write the passed in buffer to connection\n     * @param {ChannelBuffer} buffer - Buffer to write\n     */\n    NodeChannel.prototype.write = function (buffer) {\n        // If there is a pending queue, push this on that queue. This means\n        // we are not yet connected, so we queue things locally.\n        if (this._pending !== null) {\n            this._pending.push(buffer);\n        }\n        else if (buffer instanceof channel_buf_1.default) {\n            this._conn.write(buffer._buffer);\n        }\n        else {\n            throw (0, neo4j_driver_core_1.newError)(\"Don't know how to write: \" + buffer);\n        }\n    };\n    /**\n     * Close the connection\n     * @returns {Promise} A promise that will be resolved after channel is closed\n     */\n    NodeChannel.prototype.close = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var cleanup = function () {\n                if (!_this._conn.destroyed) {\n                    _this._conn.destroy();\n                }\n                resolve();\n            };\n            if (_this._open) {\n                _this._open = false;\n                _this._conn.removeListener('end', _this._handleConnectionTerminated);\n                _this._conn.on('end', function () { return cleanup(); });\n                _this._conn.on('close', function () { return cleanup(); });\n                _this._conn.end();\n                _this._conn.destroy();\n            }\n            else {\n                cleanup();\n            }\n        });\n    };\n    return NodeChannel;\n}());\nexports[\"default\"] = NodeChannel;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/node/node-channel.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/node/node-client-certificates-loader.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/channel/node/node-client-certificates-loader.js ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar fs_1 = __importDefault(__webpack_require__(/*! fs */ \"fs\"));\nfunction readFile(file) {\n    return new Promise(function (resolve, reject) { return fs_1.default.readFile(file, function (err, data) {\n        if (err) {\n            return reject(err);\n        }\n        return resolve(data);\n    }); });\n}\nfunction loadCert(fileOrFiles) {\n    if (Array.isArray(fileOrFiles)) {\n        return Promise.all(fileOrFiles.map(loadCert));\n    }\n    return readFile(fileOrFiles);\n}\nfunction loadKey(fileOrFiles) {\n    if (Array.isArray(fileOrFiles)) {\n        return Promise.all(fileOrFiles.map(loadKey));\n    }\n    if (typeof fileOrFiles === 'string') {\n        return readFile(fileOrFiles);\n    }\n    return readFile(fileOrFiles.path)\n        .then(function (pem) { return ({\n        pem: pem,\n        passphrase: fileOrFiles.password\n    }); });\n}\nexports[\"default\"] = {\n    load: function (clientCertificate) {\n        return __awaiter(this, void 0, void 0, function () {\n            var certPromise, keyPromise, _a, cert, key;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        certPromise = loadCert(clientCertificate.certfile);\n                        keyPromise = loadKey(clientCertificate.keyfile);\n                        return [4 /*yield*/, Promise.all([certPromise, keyPromise])];\n                    case 1:\n                        _a = __read.apply(void 0, [_b.sent(), 2]), cert = _a[0], key = _a[1];\n                        return [2 /*return*/, {\n                                cert: cert,\n                                key: key,\n                                passphrase: clientCertificate.password\n                            }];\n                }\n            });\n        });\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/node/node-client-certificates-loader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/node/node-host-name-resolver.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/channel/node/node-host-name-resolver.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar dns_1 = __importDefault(__webpack_require__(/*! dns */ \"dns\"));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar BaseHostNameResolver = neo4j_driver_core_1.internal.resolver.BaseHostNameResolver;\nvar NodeHostNameResolver = /** @class */ (function (_super) {\n    __extends(NodeHostNameResolver, _super);\n    function NodeHostNameResolver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NodeHostNameResolver.prototype.resolve = function (address) {\n        return new Promise(function (resolve) {\n            dns_1.default.lookup(address.host(), { all: true }, function (error, resolvedTo) {\n                if (error) {\n                    resolve([address]);\n                }\n                else {\n                    var resolvedAddresses = resolvedTo.map(function (a) {\n                        return address.resolveWith(a.address);\n                    });\n                    resolve(resolvedAddresses);\n                }\n            });\n        });\n    };\n    return NodeHostNameResolver;\n}(BaseHostNameResolver));\nexports[\"default\"] = NodeHostNameResolver;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvY2hhbm5lbC9ub2RlL25vZGUtaG9zdC1uYW1lLXJlc29sdmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ3ZGLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEIsbUJBQU8sQ0FBQyxnQkFBSztBQUN6QywwQkFBMEIsbUJBQU8sQ0FBQyw4RUFBbUI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxXQUFXO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmVvNGotbmV4dC1hcHAvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvY2hhbm5lbC9ub2RlL25vZGUtaG9zdC1uYW1lLXJlc29sdmVyLmpzPzY3ZjQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIENvcHlyaWdodCAoYykgXCJOZW80alwiXG4gKiBOZW80aiBTd2VkZW4gQUIgW2h0dHBzOi8vbmVvNGouY29tXVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBkbnNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZG5zXCIpKTtcbnZhciBuZW80al9kcml2ZXJfY29yZV8xID0gcmVxdWlyZShcIm5lbzRqLWRyaXZlci1jb3JlXCIpO1xudmFyIEJhc2VIb3N0TmFtZVJlc29sdmVyID0gbmVvNGpfZHJpdmVyX2NvcmVfMS5pbnRlcm5hbC5yZXNvbHZlci5CYXNlSG9zdE5hbWVSZXNvbHZlcjtcbnZhciBOb2RlSG9zdE5hbWVSZXNvbHZlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoTm9kZUhvc3ROYW1lUmVzb2x2ZXIsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gTm9kZUhvc3ROYW1lUmVzb2x2ZXIoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICB9XG4gICAgTm9kZUhvc3ROYW1lUmVzb2x2ZXIucHJvdG90eXBlLnJlc29sdmUgPSBmdW5jdGlvbiAoYWRkcmVzcykge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHtcbiAgICAgICAgICAgIGRuc18xLmRlZmF1bHQubG9va3VwKGFkZHJlc3MuaG9zdCgpLCB7IGFsbDogdHJ1ZSB9LCBmdW5jdGlvbiAoZXJyb3IsIHJlc29sdmVkVG8pIHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShbYWRkcmVzc10pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlc29sdmVkQWRkcmVzc2VzID0gcmVzb2x2ZWRUby5tYXAoZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhZGRyZXNzLnJlc29sdmVXaXRoKGEuYWRkcmVzcyk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHJlc29sdmVkQWRkcmVzc2VzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gTm9kZUhvc3ROYW1lUmVzb2x2ZXI7XG59KEJhc2VIb3N0TmFtZVJlc29sdmVyKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBOb2RlSG9zdE5hbWVSZXNvbHZlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/node/node-host-name-resolver.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/utf8.js":
/*!***********************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/channel/utf8.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar channel_buf_1 = __importDefault(__webpack_require__(/*! ./channel-buf */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/channel-buf.js\"));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar buffer_1 = __importDefault(__webpack_require__(/*! buffer */ \"buffer\"));\nvar string_decoder_1 = __webpack_require__(/*! string_decoder */ \"string_decoder\");\nvar decoder = new string_decoder_1.StringDecoder('utf8');\nfunction encode(str) {\n    return new channel_buf_1.default(newBuffer(str));\n}\nfunction decode(buffer, length) {\n    if (Object.prototype.hasOwnProperty.call(buffer, '_buffer')) {\n        return decodeChannelBuffer(buffer, length);\n    }\n    else if (Object.prototype.hasOwnProperty.call(buffer, '_buffers')) {\n        return decodeCombinedBuffer(buffer, length);\n    }\n    else {\n        throw (0, neo4j_driver_core_1.newError)(\"Don't know how to decode strings from '\".concat(buffer, \"'\"));\n    }\n}\nfunction decodeChannelBuffer(buffer, length) {\n    var start = buffer.position;\n    var end = start + length;\n    buffer.position = Math.min(end, buffer.length);\n    return buffer._buffer.toString('utf8', start, end);\n}\nfunction decodeCombinedBuffer(buffer, length) {\n    return streamDecodeCombinedBuffer(buffer, length, function (partBuffer) { return decoder.write(partBuffer._buffer); }, function () { return decoder.end(); });\n}\nfunction streamDecodeCombinedBuffer(combinedBuffers, length, decodeFn, endFn) {\n    var remainingBytesToRead = length;\n    var position = combinedBuffers.position;\n    combinedBuffers._updatePos(Math.min(length, combinedBuffers.length - position));\n    // Reduce CombinedBuffers to a decoded string\n    var out = combinedBuffers._buffers.reduce(function (last, partBuffer) {\n        if (remainingBytesToRead <= 0) {\n            return last;\n        }\n        else if (position >= partBuffer.length) {\n            position -= partBuffer.length;\n            return '';\n        }\n        else {\n            partBuffer._updatePos(position - partBuffer.position);\n            var bytesToRead = Math.min(partBuffer.length - position, remainingBytesToRead);\n            var lastSlice = partBuffer.readSlice(bytesToRead);\n            partBuffer._updatePos(bytesToRead);\n            remainingBytesToRead = Math.max(remainingBytesToRead - lastSlice.length, 0);\n            position = 0;\n            return last + decodeFn(lastSlice);\n        }\n    }, '');\n    return out + endFn();\n}\nfunction newBuffer(str) {\n    // use static factory function present in newer NodeJS versions to create a buffer containing the given string\n    // or fallback to the old, potentially deprecated constructor\n    if (typeof buffer_1.default.Buffer.from === 'function') {\n        return buffer_1.default.Buffer.from(str, 'utf8');\n    }\n    else {\n        // eslint-disable-next-line n/no-deprecated-api\n        return new buffer_1.default.Buffer(str, 'utf8');\n    }\n}\nexports[\"default\"] = {\n    encode: encode,\n    decode: decode\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvY2hhbm5lbC91dGY4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQ0FBb0MsbUJBQU8sQ0FBQyxtR0FBZTtBQUMzRCwwQkFBMEIsbUJBQU8sQ0FBQyw4RUFBbUI7QUFDckQsK0JBQStCLG1CQUFPLENBQUMsc0JBQVE7QUFDL0MsdUJBQXVCLG1CQUFPLENBQUMsc0NBQWdCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEVBQThFLDJDQUEyQyxnQkFBZ0IsdUJBQXVCO0FBQ2hLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25lbzRqLW5leHQtYXBwLy4vbm9kZV9tb2R1bGVzL25lbzRqLWRyaXZlci1ib2x0LWNvbm5lY3Rpb24vbGliL2NoYW5uZWwvdXRmOC5qcz9lOTc0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBjaGFubmVsX2J1Zl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2NoYW5uZWwtYnVmXCIpKTtcbnZhciBuZW80al9kcml2ZXJfY29yZV8xID0gcmVxdWlyZShcIm5lbzRqLWRyaXZlci1jb3JlXCIpO1xudmFyIGJ1ZmZlcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJidWZmZXJcIikpO1xudmFyIHN0cmluZ19kZWNvZGVyXzEgPSByZXF1aXJlKFwic3RyaW5nX2RlY29kZXJcIik7XG52YXIgZGVjb2RlciA9IG5ldyBzdHJpbmdfZGVjb2Rlcl8xLlN0cmluZ0RlY29kZXIoJ3V0ZjgnKTtcbmZ1bmN0aW9uIGVuY29kZShzdHIpIHtcbiAgICByZXR1cm4gbmV3IGNoYW5uZWxfYnVmXzEuZGVmYXVsdChuZXdCdWZmZXIoc3RyKSk7XG59XG5mdW5jdGlvbiBkZWNvZGUoYnVmZmVyLCBsZW5ndGgpIHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGJ1ZmZlciwgJ19idWZmZXInKSkge1xuICAgICAgICByZXR1cm4gZGVjb2RlQ2hhbm5lbEJ1ZmZlcihidWZmZXIsIGxlbmd0aCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChidWZmZXIsICdfYnVmZmVycycpKSB7XG4gICAgICAgIHJldHVybiBkZWNvZGVDb21iaW5lZEJ1ZmZlcihidWZmZXIsIGxlbmd0aCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyAoMCwgbmVvNGpfZHJpdmVyX2NvcmVfMS5uZXdFcnJvcikoXCJEb24ndCBrbm93IGhvdyB0byBkZWNvZGUgc3RyaW5ncyBmcm9tICdcIi5jb25jYXQoYnVmZmVyLCBcIidcIikpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGRlY29kZUNoYW5uZWxCdWZmZXIoYnVmZmVyLCBsZW5ndGgpIHtcbiAgICB2YXIgc3RhcnQgPSBidWZmZXIucG9zaXRpb247XG4gICAgdmFyIGVuZCA9IHN0YXJ0ICsgbGVuZ3RoO1xuICAgIGJ1ZmZlci5wb3NpdGlvbiA9IE1hdGgubWluKGVuZCwgYnVmZmVyLmxlbmd0aCk7XG4gICAgcmV0dXJuIGJ1ZmZlci5fYnVmZmVyLnRvU3RyaW5nKCd1dGY4Jywgc3RhcnQsIGVuZCk7XG59XG5mdW5jdGlvbiBkZWNvZGVDb21iaW5lZEJ1ZmZlcihidWZmZXIsIGxlbmd0aCkge1xuICAgIHJldHVybiBzdHJlYW1EZWNvZGVDb21iaW5lZEJ1ZmZlcihidWZmZXIsIGxlbmd0aCwgZnVuY3Rpb24gKHBhcnRCdWZmZXIpIHsgcmV0dXJuIGRlY29kZXIud3JpdGUocGFydEJ1ZmZlci5fYnVmZmVyKTsgfSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gZGVjb2Rlci5lbmQoKTsgfSk7XG59XG5mdW5jdGlvbiBzdHJlYW1EZWNvZGVDb21iaW5lZEJ1ZmZlcihjb21iaW5lZEJ1ZmZlcnMsIGxlbmd0aCwgZGVjb2RlRm4sIGVuZEZuKSB7XG4gICAgdmFyIHJlbWFpbmluZ0J5dGVzVG9SZWFkID0gbGVuZ3RoO1xuICAgIHZhciBwb3NpdGlvbiA9IGNvbWJpbmVkQnVmZmVycy5wb3NpdGlvbjtcbiAgICBjb21iaW5lZEJ1ZmZlcnMuX3VwZGF0ZVBvcyhNYXRoLm1pbihsZW5ndGgsIGNvbWJpbmVkQnVmZmVycy5sZW5ndGggLSBwb3NpdGlvbikpO1xuICAgIC8vIFJlZHVjZSBDb21iaW5lZEJ1ZmZlcnMgdG8gYSBkZWNvZGVkIHN0cmluZ1xuICAgIHZhciBvdXQgPSBjb21iaW5lZEJ1ZmZlcnMuX2J1ZmZlcnMucmVkdWNlKGZ1bmN0aW9uIChsYXN0LCBwYXJ0QnVmZmVyKSB7XG4gICAgICAgIGlmIChyZW1haW5pbmdCeXRlc1RvUmVhZCA8PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gbGFzdDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChwb3NpdGlvbiA+PSBwYXJ0QnVmZmVyLmxlbmd0aCkge1xuICAgICAgICAgICAgcG9zaXRpb24gLT0gcGFydEJ1ZmZlci5sZW5ndGg7XG4gICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwYXJ0QnVmZmVyLl91cGRhdGVQb3MocG9zaXRpb24gLSBwYXJ0QnVmZmVyLnBvc2l0aW9uKTtcbiAgICAgICAgICAgIHZhciBieXRlc1RvUmVhZCA9IE1hdGgubWluKHBhcnRCdWZmZXIubGVuZ3RoIC0gcG9zaXRpb24sIHJlbWFpbmluZ0J5dGVzVG9SZWFkKTtcbiAgICAgICAgICAgIHZhciBsYXN0U2xpY2UgPSBwYXJ0QnVmZmVyLnJlYWRTbGljZShieXRlc1RvUmVhZCk7XG4gICAgICAgICAgICBwYXJ0QnVmZmVyLl91cGRhdGVQb3MoYnl0ZXNUb1JlYWQpO1xuICAgICAgICAgICAgcmVtYWluaW5nQnl0ZXNUb1JlYWQgPSBNYXRoLm1heChyZW1haW5pbmdCeXRlc1RvUmVhZCAtIGxhc3RTbGljZS5sZW5ndGgsIDApO1xuICAgICAgICAgICAgcG9zaXRpb24gPSAwO1xuICAgICAgICAgICAgcmV0dXJuIGxhc3QgKyBkZWNvZGVGbihsYXN0U2xpY2UpO1xuICAgICAgICB9XG4gICAgfSwgJycpO1xuICAgIHJldHVybiBvdXQgKyBlbmRGbigpO1xufVxuZnVuY3Rpb24gbmV3QnVmZmVyKHN0cikge1xuICAgIC8vIHVzZSBzdGF0aWMgZmFjdG9yeSBmdW5jdGlvbiBwcmVzZW50IGluIG5ld2VyIE5vZGVKUyB2ZXJzaW9ucyB0byBjcmVhdGUgYSBidWZmZXIgY29udGFpbmluZyB0aGUgZ2l2ZW4gc3RyaW5nXG4gICAgLy8gb3IgZmFsbGJhY2sgdG8gdGhlIG9sZCwgcG90ZW50aWFsbHkgZGVwcmVjYXRlZCBjb25zdHJ1Y3RvclxuICAgIGlmICh0eXBlb2YgYnVmZmVyXzEuZGVmYXVsdC5CdWZmZXIuZnJvbSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXR1cm4gYnVmZmVyXzEuZGVmYXVsdC5CdWZmZXIuZnJvbShzdHIsICd1dGY4Jyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbi9uby1kZXByZWNhdGVkLWFwaVxuICAgICAgICByZXR1cm4gbmV3IGJ1ZmZlcl8xLmRlZmF1bHQuQnVmZmVyKHN0ciwgJ3V0ZjgnKTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSB7XG4gICAgZW5jb2RlOiBlbmNvZGUsXG4gICAgZGVjb2RlOiBkZWNvZGVcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/utf8.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/authentication-provider.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/authentication-provider.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar lang_1 = __webpack_require__(/*! ../lang */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/lang/index.js\");\n/**\n * Class which provides Authorization for {@link Connection}\n */\nvar AuthenticationProvider = /** @class */ (function () {\n    function AuthenticationProvider(_a) {\n        var authTokenManager = _a.authTokenManager, userAgent = _a.userAgent, boltAgent = _a.boltAgent;\n        this._authTokenManager = authTokenManager || (0, neo4j_driver_core_1.staticAuthTokenManager)({});\n        this._userAgent = userAgent;\n        this._boltAgent = boltAgent;\n    }\n    AuthenticationProvider.prototype.authenticate = function (_a) {\n        var connection = _a.connection, auth = _a.auth, skipReAuth = _a.skipReAuth, waitReAuth = _a.waitReAuth, forceReAuth = _a.forceReAuth;\n        return __awaiter(this, void 0, void 0, function () {\n            var shouldReAuth, authToken;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(auth != null)) return [3 /*break*/, 3];\n                        shouldReAuth = connection.supportsReAuth === true && ((!lang_1.object.equals(connection.authToken, auth) && skipReAuth !== true) ||\n                            forceReAuth === true);\n                        if (!(connection.authToken == null || shouldReAuth)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, connection.connect(this._userAgent, this._boltAgent, auth, waitReAuth || false)];\n                    case 1: return [2 /*return*/, _b.sent()];\n                    case 2: return [2 /*return*/, connection];\n                    case 3: return [4 /*yield*/, this._authTokenManager.getToken()];\n                    case 4:\n                        authToken = _b.sent();\n                        if (!!lang_1.object.equals(authToken, connection.authToken)) return [3 /*break*/, 6];\n                        return [4 /*yield*/, connection.connect(this._userAgent, this._boltAgent, authToken, false)];\n                    case 5: return [2 /*return*/, _b.sent()];\n                    case 6: return [2 /*return*/, connection];\n                }\n            });\n        });\n    };\n    AuthenticationProvider.prototype.handleError = function (_a) {\n        var connection = _a.connection, code = _a.code;\n        if (connection &&\n            code.startsWith('Neo.ClientError.Security.')) {\n            return this._authTokenManager.handleSecurityException(connection.authToken, code);\n        }\n        return false;\n    };\n    return AuthenticationProvider;\n}());\nexports[\"default\"] = AuthenticationProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/authentication-provider.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/client-certificate-holder.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/client-certificate-holder.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar channel_1 = __webpack_require__(/*! ../channel */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/index.js\");\nvar ClientCertificateHolder = /** @class */ (function () {\n    function ClientCertificateHolder(_a) {\n        var clientCertificateProvider = _a.clientCertificateProvider, loader = _a.loader;\n        this._clientCertificateProvider = clientCertificateProvider;\n        this._loader = loader || channel_1.ClientCertificatesLoader;\n        this._clientCertificate = null;\n    }\n    ClientCertificateHolder.prototype.getClientCertificate = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b;\n            var _this = this;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = this._clientCertificateProvider != null;\n                        if (!_a) return [3 /*break*/, 3];\n                        _b = this._clientCertificate == null;\n                        if (_b) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this._clientCertificateProvider.hasUpdate()];\n                    case 1:\n                        _b = (_c.sent());\n                        _c.label = 2;\n                    case 2:\n                        _a = (_b);\n                        _c.label = 3;\n                    case 3:\n                        if (_a) {\n                            this._clientCertificate = Promise.resolve(this._clientCertificateProvider.getClientCertificate())\n                                .then(this._loader.load)\n                                .then(function (clientCertificate) {\n                                _this._clientCertificate = clientCertificate;\n                                return _this._clientCertificate;\n                            })\n                                .catch(function (error) {\n                                _this._clientCertificate = null;\n                                throw error;\n                            });\n                        }\n                        return [2 /*return*/, this._clientCertificate];\n                }\n            });\n        });\n    };\n    return ClientCertificateHolder;\n}());\nexports[\"default\"] = ClientCertificateHolder;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/client-certificate-holder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-direct.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-direct.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar connection_provider_pooled_1 = __importDefault(__webpack_require__(/*! ./connection-provider-pooled */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-pooled.js\"));\nvar connection_1 = __webpack_require__(/*! ../connection */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection/index.js\");\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar _a = neo4j_driver_core_1.internal.constants, BOLT_PROTOCOL_V3 = _a.BOLT_PROTOCOL_V3, BOLT_PROTOCOL_V4_0 = _a.BOLT_PROTOCOL_V4_0, BOLT_PROTOCOL_V4_4 = _a.BOLT_PROTOCOL_V4_4, BOLT_PROTOCOL_V5_1 = _a.BOLT_PROTOCOL_V5_1;\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE;\nvar DirectConnectionProvider = /** @class */ (function (_super) {\n    __extends(DirectConnectionProvider, _super);\n    function DirectConnectionProvider(_a) {\n        var id = _a.id, config = _a.config, log = _a.log, address = _a.address, userAgent = _a.userAgent, boltAgent = _a.boltAgent, authTokenManager = _a.authTokenManager, newPool = _a.newPool;\n        var _this = _super.call(this, { id: id, config: config, log: log, userAgent: userAgent, boltAgent: boltAgent, authTokenManager: authTokenManager, newPool: newPool }) || this;\n        _this._address = address;\n        return _this;\n    }\n    /**\n     * See {@link ConnectionProvider} for more information about this method and\n     * its arguments.\n     */\n    DirectConnectionProvider.prototype.acquireConnection = function (_a) {\n        var _b = _a === void 0 ? {} : _a, accessMode = _b.accessMode, database = _b.database, bookmarks = _b.bookmarks, auth = _b.auth, forceReAuth = _b.forceReAuth;\n        return __awaiter(this, void 0, void 0, function () {\n            var databaseSpecificErrorHandler, connection;\n            var _this = this;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        databaseSpecificErrorHandler = connection_1.ConnectionErrorHandler.create({\n                            errorCode: SERVICE_UNAVAILABLE,\n                            handleSecurityError: function (error, address, conn) {\n                                return _this._handleSecurityError(error, address, conn, database);\n                            }\n                        });\n                        return [4 /*yield*/, this._connectionPool.acquire({ auth: auth, forceReAuth: forceReAuth }, this._address)];\n                    case 1:\n                        connection = _c.sent();\n                        if (!auth) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this._verifyStickyConnection({\n                                auth: auth,\n                                connection: connection,\n                                address: this._address\n                            })];\n                    case 2:\n                        _c.sent();\n                        return [2 /*return*/, connection];\n                    case 3: return [2 /*return*/, new connection_1.DelegateConnection(connection, databaseSpecificErrorHandler)];\n                }\n            });\n        });\n    };\n    DirectConnectionProvider.prototype._handleSecurityError = function (error, address, connection, database) {\n        this._log.warn(\"Direct driver \".concat(this._id, \" will close connection to \").concat(address, \" for database '\").concat(database, \"' because of an error \").concat(error.code, \" '\").concat(error.message, \"'\"));\n        return _super.prototype._handleSecurityError.call(this, error, address, connection);\n    };\n    DirectConnectionProvider.prototype._hasProtocolVersion = function (versionPredicate) {\n        return __awaiter(this, void 0, void 0, function () {\n            var connection, protocolVersion;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._createChannelConnection(this._address)];\n                    case 1:\n                        connection = _a.sent();\n                        protocolVersion = connection.protocol()\n                            ? connection.protocol().version\n                            : null;\n                        return [4 /*yield*/, connection.close()];\n                    case 2:\n                        _a.sent();\n                        if (protocolVersion) {\n                            return [2 /*return*/, versionPredicate(protocolVersion)];\n                        }\n                        return [2 /*return*/, false];\n                }\n            });\n        });\n    };\n    DirectConnectionProvider.prototype.supportsMultiDb = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V4_0; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    DirectConnectionProvider.prototype.getNegotiatedProtocolVersion = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._hasProtocolVersion(resolve)\n                .catch(reject);\n        });\n    };\n    DirectConnectionProvider.prototype.supportsTransactionConfig = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V3; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    DirectConnectionProvider.prototype.supportsUserImpersonation = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V4_4; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    DirectConnectionProvider.prototype.supportsSessionAuth = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V5_1; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    DirectConnectionProvider.prototype.verifyAuthentication = function (_a) {\n        var auth = _a.auth;\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_b) {\n                return [2 /*return*/, this._verifyAuthentication({\n                        auth: auth,\n                        getAddress: function () { return _this._address; }\n                    })];\n            });\n        });\n    };\n    DirectConnectionProvider.prototype.verifyConnectivityAndGetServerInfo = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._verifyConnectivityAndGetServerVersion({ address: this._address })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    return DirectConnectionProvider;\n}(connection_provider_pooled_1.default));\nexports[\"default\"] = DirectConnectionProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-direct.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-pooled.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-pooled.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar connection_1 = __webpack_require__(/*! ../connection */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection/index.js\");\nvar pool_1 = __importStar(__webpack_require__(/*! ../pool */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/pool/index.js\"));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar authentication_provider_1 = __importDefault(__webpack_require__(/*! ./authentication-provider */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/authentication-provider.js\"));\nvar lang_1 = __webpack_require__(/*! ../lang */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/lang/index.js\");\nvar liveness_check_provider_1 = __importDefault(__webpack_require__(/*! ./liveness-check-provider */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/liveness-check-provider.js\"));\nvar client_certificate_holder_1 = __importDefault(__webpack_require__(/*! ./client-certificate-holder */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/client-certificate-holder.js\"));\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE;\nvar AUTHENTICATION_ERRORS = [\n    'Neo.ClientError.Security.CredentialsExpired',\n    'Neo.ClientError.Security.Forbidden',\n    'Neo.ClientError.Security.TokenExpired',\n    'Neo.ClientError.Security.Unauthorized'\n];\nvar PooledConnectionProvider = /** @class */ (function (_super) {\n    __extends(PooledConnectionProvider, _super);\n    function PooledConnectionProvider(_a, createChannelConnectionHook) {\n        var id = _a.id, config = _a.config, log = _a.log, userAgent = _a.userAgent, boltAgent = _a.boltAgent, authTokenManager = _a.authTokenManager, _b = _a.newPool, newPool = _b === void 0 ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (pool_1.default.bind.apply(pool_1.default, __spreadArray([void 0], __read(args), false)))();\n        } : _b;\n        if (createChannelConnectionHook === void 0) { createChannelConnectionHook = null; }\n        var _this = _super.call(this) || this;\n        _this._id = id;\n        _this._config = config;\n        _this._log = log;\n        _this._clientCertificateHolder = new client_certificate_holder_1.default({ clientCertificateProvider: _this._config.clientCertificate });\n        _this._authenticationProvider = new authentication_provider_1.default({ authTokenManager: authTokenManager, userAgent: userAgent, boltAgent: boltAgent });\n        _this._livenessCheckProvider = new liveness_check_provider_1.default({ connectionLivenessCheckTimeout: config.connectionLivenessCheckTimeout });\n        _this._userAgent = userAgent;\n        _this._boltAgent = boltAgent;\n        _this._createChannelConnection =\n            createChannelConnectionHook ||\n                (function (address) { return __awaiter(_this, void 0, void 0, function () {\n                    var _a, _b;\n                    return __generator(this, function (_c) {\n                        switch (_c.label) {\n                            case 0:\n                                _a = connection_1.createChannelConnection;\n                                _b = [address,\n                                    this._config,\n                                    this._createConnectionErrorHandler(),\n                                    this._log];\n                                return [4 /*yield*/, this._clientCertificateHolder.getClientCertificate()];\n                            case 1: return [2 /*return*/, _a.apply(void 0, _b.concat([_c.sent()]))];\n                        }\n                    });\n                }); });\n        _this._connectionPool = newPool({\n            create: _this._createConnection.bind(_this),\n            destroy: _this._destroyConnection.bind(_this),\n            validateOnAcquire: _this._validateConnectionOnAcquire.bind(_this),\n            validateOnRelease: _this._validateConnectionOnRelease.bind(_this),\n            installIdleObserver: PooledConnectionProvider._installIdleObserverOnConnection.bind(_this),\n            removeIdleObserver: PooledConnectionProvider._removeIdleObserverOnConnection.bind(_this),\n            config: pool_1.PoolConfig.fromDriverConfig(config),\n            log: _this._log\n        });\n        _this._openConnections = {};\n        return _this;\n    }\n    PooledConnectionProvider.prototype._createConnectionErrorHandler = function () {\n        return new connection_1.ConnectionErrorHandler(SERVICE_UNAVAILABLE);\n    };\n    PooledConnectionProvider.prototype._getClientCertificate = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this._config.clientCertificate.getClientCertificate()];\n            });\n        });\n    };\n    /**\n     * Create a new connection and initialize it.\n     * @return {Promise<Connection>} promise resolved with a new connection or rejected when failed to connect.\n     * @access private\n     */\n    PooledConnectionProvider.prototype._createConnection = function (_a, address, release) {\n        var _this = this;\n        var auth = _a.auth;\n        return this._createChannelConnection(address).then(function (connection) {\n            connection.release = function () {\n                connection.idleTimestamp = Date.now();\n                return release(address, connection);\n            };\n            _this._openConnections[connection.id] = connection;\n            return _this._authenticationProvider.authenticate({ connection: connection, auth: auth })\n                .catch(function (error) {\n                // let's destroy this connection\n                _this._destroyConnection(connection);\n                // propagate the error because connection failed to connect / initialize\n                throw error;\n            });\n        });\n    };\n    PooledConnectionProvider.prototype._validateConnectionOnAcquire = function (_a, conn) {\n        var auth = _a.auth, skipReAuth = _a.skipReAuth;\n        return __awaiter(this, void 0, void 0, function () {\n            var error_1, error_2;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!this._validateConnection(conn)) {\n                            return [2 /*return*/, false];\n                        }\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._livenessCheckProvider.check(conn)];\n                    case 2:\n                        _b.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_1 = _b.sent();\n                        this._log.debug(\"The connection \".concat(conn.id, \" is not alive because of an error \").concat(error_1.code, \" '\").concat(error_1.message, \"'\"));\n                        return [2 /*return*/, false];\n                    case 4:\n                        _b.trys.push([4, 6, , 7]);\n                        return [4 /*yield*/, this._authenticationProvider.authenticate({ connection: conn, auth: auth, skipReAuth: skipReAuth })];\n                    case 5:\n                        _b.sent();\n                        return [2 /*return*/, true];\n                    case 6:\n                        error_2 = _b.sent();\n                        this._log.debug(\"The connection \".concat(conn.id, \" is not valid because of an error \").concat(error_2.code, \" '\").concat(error_2.message, \"'\"));\n                        return [2 /*return*/, false];\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    PooledConnectionProvider.prototype._validateConnectionOnRelease = function (conn) {\n        return conn._sticky !== true && this._validateConnection(conn);\n    };\n    /**\n     * Check that a connection is usable\n     * @return {boolean} true if the connection is open\n     * @access private\n     **/\n    PooledConnectionProvider.prototype._validateConnection = function (conn) {\n        if (!conn.isOpen()) {\n            return false;\n        }\n        var maxConnectionLifetime = this._config.maxConnectionLifetime;\n        var lifetime = Date.now() - conn.creationTimestamp;\n        if (lifetime > maxConnectionLifetime) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Dispose of a connection.\n     * @return {Connection} the connection to dispose.\n     * @access private\n     */\n    PooledConnectionProvider.prototype._destroyConnection = function (conn) {\n        delete this._openConnections[conn.id];\n        return conn.close();\n    };\n    /**\n     * Acquire a connection from the pool and return it ServerInfo\n     * @param {object} param\n     * @param {string} param.address the server address\n     * @return {Promise<ServerInfo>} the server info\n     */\n    PooledConnectionProvider.prototype._verifyConnectivityAndGetServerVersion = function (_a) {\n        var address = _a.address;\n        return __awaiter(this, void 0, void 0, function () {\n            var connection, serverInfo;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this._connectionPool.acquire({}, address)];\n                    case 1:\n                        connection = _b.sent();\n                        serverInfo = new neo4j_driver_core_1.ServerInfo(connection.server, connection.protocol().version);\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, , 5, 7]);\n                        if (!!connection.protocol().isLastMessageLogon()) return [3 /*break*/, 4];\n                        return [4 /*yield*/, connection.resetAndFlush()];\n                    case 3:\n                        _b.sent();\n                        _b.label = 4;\n                    case 4: return [3 /*break*/, 7];\n                    case 5: return [4 /*yield*/, connection.release()];\n                    case 6:\n                        _b.sent();\n                        return [7 /*endfinally*/];\n                    case 7: return [2 /*return*/, serverInfo];\n                }\n            });\n        });\n    };\n    PooledConnectionProvider.prototype._verifyAuthentication = function (_a) {\n        var getAddress = _a.getAddress, auth = _a.auth;\n        return __awaiter(this, void 0, void 0, function () {\n            var connectionsToRelease, address, connection, lastMessageIsNotLogin, stickyConnection, error_3;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        connectionsToRelease = [];\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 8, 9, 11]);\n                        return [4 /*yield*/, getAddress()];\n                    case 2:\n                        address = _b.sent();\n                        return [4 /*yield*/, this._connectionPool.acquire({ auth: auth, skipReAuth: true }, address)];\n                    case 3:\n                        connection = _b.sent();\n                        connectionsToRelease.push(connection);\n                        lastMessageIsNotLogin = !connection.protocol().isLastMessageLogon();\n                        if (!connection.supportsReAuth) {\n                            throw (0, neo4j_driver_core_1.newError)('Driver is connected to a database that does not support user switch.');\n                        }\n                        if (!(lastMessageIsNotLogin && connection.supportsReAuth)) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this._authenticationProvider.authenticate({ connection: connection, auth: auth, waitReAuth: true, forceReAuth: true })];\n                    case 4:\n                        _b.sent();\n                        return [3 /*break*/, 7];\n                    case 5:\n                        if (!(lastMessageIsNotLogin && !connection.supportsReAuth)) return [3 /*break*/, 7];\n                        return [4 /*yield*/, this._connectionPool.acquire({ auth: auth }, address, { requireNew: true })];\n                    case 6:\n                        stickyConnection = _b.sent();\n                        stickyConnection._sticky = true;\n                        connectionsToRelease.push(stickyConnection);\n                        _b.label = 7;\n                    case 7: return [2 /*return*/, true];\n                    case 8:\n                        error_3 = _b.sent();\n                        if (AUTHENTICATION_ERRORS.includes(error_3.code)) {\n                            return [2 /*return*/, false];\n                        }\n                        throw error_3;\n                    case 9: return [4 /*yield*/, Promise.all(connectionsToRelease.map(function (conn) { return conn.release(); }))];\n                    case 10:\n                        _b.sent();\n                        return [7 /*endfinally*/];\n                    case 11: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    PooledConnectionProvider.prototype._verifyStickyConnection = function (_a) {\n        var auth = _a.auth, connection = _a.connection, address = _a.address;\n        return __awaiter(this, void 0, void 0, function () {\n            var connectionWithSameCredentials, shouldCreateStickyConnection;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        connectionWithSameCredentials = lang_1.object.equals(auth, connection.authToken);\n                        shouldCreateStickyConnection = !connectionWithSameCredentials;\n                        connection._sticky = connectionWithSameCredentials && !connection.supportsReAuth;\n                        if (!(shouldCreateStickyConnection || connection._sticky)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, connection.release()];\n                    case 1:\n                        _b.sent();\n                        throw (0, neo4j_driver_core_1.newError)('Driver is connected to a database that does not support user switch.');\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    PooledConnectionProvider.prototype.close = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: \n                    // purge all idle connections in the connection pool\n                    return [4 /*yield*/, this._connectionPool.close()\n                        // then close all connections driver has ever created\n                        // it is needed to close connections that are active right now and are acquired from the pool\n                    ];\n                    case 1:\n                        // purge all idle connections in the connection pool\n                        _a.sent();\n                        // then close all connections driver has ever created\n                        // it is needed to close connections that are active right now and are acquired from the pool\n                        return [4 /*yield*/, Promise.all(Object.values(this._openConnections).map(function (c) { return c.close(); }))];\n                    case 2:\n                        // then close all connections driver has ever created\n                        // it is needed to close connections that are active right now and are acquired from the pool\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    PooledConnectionProvider._installIdleObserverOnConnection = function (conn, observer) {\n        conn._setIdle(observer);\n    };\n    PooledConnectionProvider._removeIdleObserverOnConnection = function (conn) {\n        conn._unsetIdle();\n    };\n    PooledConnectionProvider.prototype._handleSecurityError = function (error, address, connection) {\n        var handled = this._authenticationProvider.handleError({ connection: connection, code: error.code });\n        if (handled) {\n            error.retriable = true;\n        }\n        if (error.code === 'Neo.ClientError.Security.AuthorizationExpired') {\n            this._connectionPool.apply(address, function (conn) { conn.authToken = null; });\n        }\n        if (connection) {\n            connection.close().catch(function () { return undefined; });\n        }\n        return error;\n    };\n    return PooledConnectionProvider;\n}(neo4j_driver_core_1.ConnectionProvider));\nexports[\"default\"] = PooledConnectionProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-pooled.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-routing.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-routing.js ***!
  \**********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar rediscovery_1 = __importStar(__webpack_require__(/*! ../rediscovery */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/rediscovery/index.js\"));\nvar channel_1 = __webpack_require__(/*! ../channel */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/index.js\");\nvar connection_provider_single_1 = __importDefault(__webpack_require__(/*! ./connection-provider-single */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-single.js\"));\nvar connection_provider_pooled_1 = __importDefault(__webpack_require__(/*! ./connection-provider-pooled */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-pooled.js\"));\nvar load_balancing_1 = __webpack_require__(/*! ../load-balancing */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/load-balancing/index.js\");\nvar connection_1 = __webpack_require__(/*! ../connection */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection/index.js\");\nvar lang_1 = __webpack_require__(/*! ../lang */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/lang/index.js\");\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE, SESSION_EXPIRED = neo4j_driver_core_1.error.SESSION_EXPIRED;\nvar Bookmarks = neo4j_driver_core_1.internal.bookmarks.Bookmarks, _a = neo4j_driver_core_1.internal.constants, READ = _a.ACCESS_MODE_READ, WRITE = _a.ACCESS_MODE_WRITE, BOLT_PROTOCOL_V3 = _a.BOLT_PROTOCOL_V3, BOLT_PROTOCOL_V4_0 = _a.BOLT_PROTOCOL_V4_0, BOLT_PROTOCOL_V4_4 = _a.BOLT_PROTOCOL_V4_4, BOLT_PROTOCOL_V5_1 = _a.BOLT_PROTOCOL_V5_1;\nvar PROCEDURE_NOT_FOUND_CODE = 'Neo.ClientError.Procedure.ProcedureNotFound';\nvar DATABASE_NOT_FOUND_CODE = 'Neo.ClientError.Database.DatabaseNotFound';\nvar INVALID_BOOKMARK_CODE = 'Neo.ClientError.Transaction.InvalidBookmark';\nvar INVALID_BOOKMARK_MIXTURE_CODE = 'Neo.ClientError.Transaction.InvalidBookmarkMixture';\nvar AUTHORIZATION_EXPIRED_CODE = 'Neo.ClientError.Security.AuthorizationExpired';\nvar INVALID_ARGUMENT_ERROR = 'Neo.ClientError.Statement.ArgumentError';\nvar INVALID_REQUEST_ERROR = 'Neo.ClientError.Request.Invalid';\nvar STATEMENT_TYPE_ERROR = 'Neo.ClientError.Statement.TypeError';\nvar NOT_AVAILABLE = 'N/A';\nvar SYSTEM_DB_NAME = 'system';\nvar DEFAULT_DB_NAME = null;\nvar DEFAULT_ROUTING_TABLE_PURGE_DELAY = (0, neo4j_driver_core_1.int)(30000);\nvar RoutingConnectionProvider = /** @class */ (function (_super) {\n    __extends(RoutingConnectionProvider, _super);\n    function RoutingConnectionProvider(_a) {\n        var id = _a.id, address = _a.address, routingContext = _a.routingContext, hostNameResolver = _a.hostNameResolver, config = _a.config, log = _a.log, userAgent = _a.userAgent, boltAgent = _a.boltAgent, authTokenManager = _a.authTokenManager, routingTablePurgeDelay = _a.routingTablePurgeDelay, newPool = _a.newPool;\n        var _this = _super.call(this, { id: id, config: config, log: log, userAgent: userAgent, boltAgent: boltAgent, authTokenManager: authTokenManager, newPool: newPool }, function (address) { return __awaiter(_this, void 0, void 0, function () {\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = connection_1.createChannelConnection;\n                        _b = [address,\n                            this._config,\n                            this._createConnectionErrorHandler(),\n                            this._log];\n                        return [4 /*yield*/, this._clientCertificateHolder.getClientCertificate()];\n                    case 1: return [2 /*return*/, _a.apply(void 0, _b.concat([_c.sent(), this._routingContext]))];\n                }\n            });\n        }); }) || this;\n        _this._routingContext = __assign(__assign({}, routingContext), { address: address.toString() });\n        _this._seedRouter = address;\n        _this._rediscovery = new rediscovery_1.default(_this._routingContext);\n        _this._loadBalancingStrategy = new load_balancing_1.LeastConnectedLoadBalancingStrategy(_this._connectionPool);\n        _this._hostNameResolver = hostNameResolver;\n        _this._dnsResolver = new channel_1.HostNameResolver();\n        _this._log = log;\n        _this._useSeedRouter = true;\n        _this._routingTableRegistry = new RoutingTableRegistry(routingTablePurgeDelay\n            ? (0, neo4j_driver_core_1.int)(routingTablePurgeDelay)\n            : DEFAULT_ROUTING_TABLE_PURGE_DELAY);\n        _this._refreshRoutingTable = lang_1.functional.reuseOngoingRequest(_this._refreshRoutingTable, _this);\n        return _this;\n    }\n    RoutingConnectionProvider.prototype._createConnectionErrorHandler = function () {\n        // connection errors mean SERVICE_UNAVAILABLE for direct driver but for routing driver they should only\n        // result in SESSION_EXPIRED because there might still exist other servers capable of serving the request\n        return new connection_1.ConnectionErrorHandler(SESSION_EXPIRED);\n    };\n    RoutingConnectionProvider.prototype._handleUnavailability = function (error, address, database) {\n        this._log.warn(\"Routing driver \".concat(this._id, \" will forget \").concat(address, \" for database '\").concat(database, \"' because of an error \").concat(error.code, \" '\").concat(error.message, \"'\"));\n        this.forget(address, database || DEFAULT_DB_NAME);\n        return error;\n    };\n    RoutingConnectionProvider.prototype._handleSecurityError = function (error, address, connection, database) {\n        this._log.warn(\"Routing driver \".concat(this._id, \" will close connections to \").concat(address, \" for database '\").concat(database, \"' because of an error \").concat(error.code, \" '\").concat(error.message, \"'\"));\n        return _super.prototype._handleSecurityError.call(this, error, address, connection, database);\n    };\n    RoutingConnectionProvider.prototype._handleWriteFailure = function (error, address, database) {\n        this._log.warn(\"Routing driver \".concat(this._id, \" will forget writer \").concat(address, \" for database '\").concat(database, \"' because of an error \").concat(error.code, \" '\").concat(error.message, \"'\"));\n        this.forgetWriter(address, database || DEFAULT_DB_NAME);\n        return (0, neo4j_driver_core_1.newError)('No longer possible to write to server at ' + address, SESSION_EXPIRED, error);\n    };\n    /**\n     * See {@link ConnectionProvider} for more information about this method and\n     * its arguments.\n     */\n    RoutingConnectionProvider.prototype.acquireConnection = function (_a) {\n        var _b = _a === void 0 ? {} : _a, accessMode = _b.accessMode, database = _b.database, bookmarks = _b.bookmarks, impersonatedUser = _b.impersonatedUser, onDatabaseNameResolved = _b.onDatabaseNameResolved, auth = _b.auth;\n        return __awaiter(this, void 0, void 0, function () {\n            var name, address, context, databaseSpecificErrorHandler, routingTable, connection, error_1, transformed;\n            var _this = this;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        context = { database: database || DEFAULT_DB_NAME };\n                        databaseSpecificErrorHandler = new connection_1.ConnectionErrorHandler(SESSION_EXPIRED, function (error, address) { return _this._handleUnavailability(error, address, context.database); }, function (error, address) { return _this._handleWriteFailure(error, address, context.database); }, function (error, address, conn) {\n                            return _this._handleSecurityError(error, address, conn, context.database);\n                        });\n                        return [4 /*yield*/, this._freshRoutingTable({\n                                accessMode: accessMode,\n                                database: context.database,\n                                bookmarks: bookmarks,\n                                impersonatedUser: impersonatedUser,\n                                auth: auth,\n                                onDatabaseNameResolved: function (databaseName) {\n                                    context.database = context.database || databaseName;\n                                    if (onDatabaseNameResolved) {\n                                        onDatabaseNameResolved(databaseName);\n                                    }\n                                }\n                            })\n                            // select a target server based on specified access mode\n                        ];\n                    case 1:\n                        routingTable = _c.sent();\n                        // select a target server based on specified access mode\n                        if (accessMode === READ) {\n                            address = this._loadBalancingStrategy.selectReader(routingTable.readers);\n                            name = 'read';\n                        }\n                        else if (accessMode === WRITE) {\n                            address = this._loadBalancingStrategy.selectWriter(routingTable.writers);\n                            name = 'write';\n                        }\n                        else {\n                            throw (0, neo4j_driver_core_1.newError)('Illegal mode ' + accessMode);\n                        }\n                        // we couldn't select a target server\n                        if (!address) {\n                            throw (0, neo4j_driver_core_1.newError)(\"Failed to obtain connection towards \".concat(name, \" server. Known routing table is: \").concat(routingTable), SESSION_EXPIRED);\n                        }\n                        _c.label = 2;\n                    case 2:\n                        _c.trys.push([2, 6, , 7]);\n                        return [4 /*yield*/, this._connectionPool.acquire({ auth: auth }, address)];\n                    case 3:\n                        connection = _c.sent();\n                        if (!auth) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this._verifyStickyConnection({\n                                auth: auth,\n                                connection: connection,\n                                address: address\n                            })];\n                    case 4:\n                        _c.sent();\n                        return [2 /*return*/, connection];\n                    case 5: return [2 /*return*/, new connection_1.DelegateConnection(connection, databaseSpecificErrorHandler)];\n                    case 6:\n                        error_1 = _c.sent();\n                        transformed = databaseSpecificErrorHandler.handleAndTransformError(error_1, address);\n                        throw transformed;\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._hasProtocolVersion = function (versionPredicate) {\n        return __awaiter(this, void 0, void 0, function () {\n            var addresses, lastError, i, connection, protocolVersion, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._resolveSeedRouter(this._seedRouter)];\n                    case 1:\n                        addresses = _a.sent();\n                        i = 0;\n                        _a.label = 2;\n                    case 2:\n                        if (!(i < addresses.length)) return [3 /*break*/, 8];\n                        _a.label = 3;\n                    case 3:\n                        _a.trys.push([3, 6, , 7]);\n                        return [4 /*yield*/, this._createChannelConnection(addresses[i])];\n                    case 4:\n                        connection = _a.sent();\n                        protocolVersion = connection.protocol()\n                            ? connection.protocol().version\n                            : null;\n                        return [4 /*yield*/, connection.close()];\n                    case 5:\n                        _a.sent();\n                        if (protocolVersion) {\n                            return [2 /*return*/, versionPredicate(protocolVersion)];\n                        }\n                        return [2 /*return*/, false];\n                    case 6:\n                        error_2 = _a.sent();\n                        lastError = error_2;\n                        return [3 /*break*/, 7];\n                    case 7:\n                        i++;\n                        return [3 /*break*/, 2];\n                    case 8:\n                        if (lastError) {\n                            throw lastError;\n                        }\n                        return [2 /*return*/, false];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.supportsMultiDb = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V4_0; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.supportsTransactionConfig = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V3; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.supportsUserImpersonation = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V4_4; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.supportsSessionAuth = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V5_1; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.getNegotiatedProtocolVersion = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._hasProtocolVersion(resolve)\n                .catch(reject);\n        });\n    };\n    RoutingConnectionProvider.prototype.verifyAuthentication = function (_a) {\n        var database = _a.database, accessMode = _a.accessMode, auth = _a.auth;\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_b) {\n                return [2 /*return*/, this._verifyAuthentication({\n                        auth: auth,\n                        getAddress: function () { return __awaiter(_this, void 0, void 0, function () {\n                            var context, routingTable, servers;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        context = { database: database || DEFAULT_DB_NAME };\n                                        return [4 /*yield*/, this._freshRoutingTable({\n                                                accessMode: accessMode,\n                                                database: context.database,\n                                                auth: auth,\n                                                onDatabaseNameResolved: function (databaseName) {\n                                                    context.database = context.database || databaseName;\n                                                }\n                                            })];\n                                    case 1:\n                                        routingTable = _a.sent();\n                                        servers = accessMode === WRITE ? routingTable.writers : routingTable.readers;\n                                        if (servers.length === 0) {\n                                            throw (0, neo4j_driver_core_1.newError)(\"No servers available for database '\".concat(context.database, \"' with access mode '\").concat(accessMode, \"'\"), SERVICE_UNAVAILABLE);\n                                        }\n                                        return [2 /*return*/, servers[0]];\n                                }\n                            });\n                        }); }\n                    })];\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.verifyConnectivityAndGetServerInfo = function (_a) {\n        var database = _a.database, accessMode = _a.accessMode;\n        return __awaiter(this, void 0, void 0, function () {\n            var context, routingTable, servers, error, servers_1, servers_1_1, address, serverInfo, e_1, e_2_1;\n            var e_2, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        context = { database: database || DEFAULT_DB_NAME };\n                        return [4 /*yield*/, this._freshRoutingTable({\n                                accessMode: accessMode,\n                                database: context.database,\n                                onDatabaseNameResolved: function (databaseName) {\n                                    context.database = context.database || databaseName;\n                                }\n                            })];\n                    case 1:\n                        routingTable = _c.sent();\n                        servers = accessMode === WRITE ? routingTable.writers : routingTable.readers;\n                        error = (0, neo4j_driver_core_1.newError)(\"No servers available for database '\".concat(context.database, \"' with access mode '\").concat(accessMode, \"'\"), SERVICE_UNAVAILABLE);\n                        _c.label = 2;\n                    case 2:\n                        _c.trys.push([2, 9, 10, 11]);\n                        servers_1 = __values(servers), servers_1_1 = servers_1.next();\n                        _c.label = 3;\n                    case 3:\n                        if (!!servers_1_1.done) return [3 /*break*/, 8];\n                        address = servers_1_1.value;\n                        _c.label = 4;\n                    case 4:\n                        _c.trys.push([4, 6, , 7]);\n                        return [4 /*yield*/, this._verifyConnectivityAndGetServerVersion({ address: address })];\n                    case 5:\n                        serverInfo = _c.sent();\n                        return [2 /*return*/, serverInfo];\n                    case 6:\n                        e_1 = _c.sent();\n                        error = e_1;\n                        return [3 /*break*/, 7];\n                    case 7:\n                        servers_1_1 = servers_1.next();\n                        return [3 /*break*/, 3];\n                    case 8: return [3 /*break*/, 11];\n                    case 9:\n                        e_2_1 = _c.sent();\n                        e_2 = { error: e_2_1 };\n                        return [3 /*break*/, 11];\n                    case 10:\n                        try {\n                            if (servers_1_1 && !servers_1_1.done && (_b = servers_1.return)) _b.call(servers_1);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                        return [7 /*endfinally*/];\n                    case 11: throw error;\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.forget = function (address, database) {\n        this._routingTableRegistry.apply(database, {\n            applyWhenExists: function (routingTable) { return routingTable.forget(address); }\n        });\n        // We're firing and forgetting this operation explicitly and listening for any\n        // errors to avoid unhandled promise rejection\n        this._connectionPool.purge(address).catch(function () { });\n    };\n    RoutingConnectionProvider.prototype.forgetWriter = function (address, database) {\n        this._routingTableRegistry.apply(database, {\n            applyWhenExists: function (routingTable) { return routingTable.forgetWriter(address); }\n        });\n    };\n    RoutingConnectionProvider.prototype._freshRoutingTable = function (_a) {\n        var _b = _a === void 0 ? {} : _a, accessMode = _b.accessMode, database = _b.database, bookmarks = _b.bookmarks, impersonatedUser = _b.impersonatedUser, onDatabaseNameResolved = _b.onDatabaseNameResolved, auth = _b.auth;\n        var currentRoutingTable = this._routingTableRegistry.get(database, function () { return new rediscovery_1.RoutingTable({ database: database }); });\n        if (!currentRoutingTable.isStaleFor(accessMode)) {\n            return currentRoutingTable;\n        }\n        this._log.info(\"Routing table is stale for database: \\\"\".concat(database, \"\\\" and access mode: \\\"\").concat(accessMode, \"\\\": \").concat(currentRoutingTable));\n        return this._refreshRoutingTable(currentRoutingTable, bookmarks, impersonatedUser, auth)\n            .then(function (newRoutingTable) {\n            onDatabaseNameResolved(newRoutingTable.database);\n            return newRoutingTable;\n        });\n    };\n    RoutingConnectionProvider.prototype._refreshRoutingTable = function (currentRoutingTable, bookmarks, impersonatedUser, auth) {\n        var knownRouters = currentRoutingTable.routers;\n        if (this._useSeedRouter) {\n            return this._fetchRoutingTableFromSeedRouterFallbackToKnownRouters(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth);\n        }\n        return this._fetchRoutingTableFromKnownRoutersFallbackToSeedRouter(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth);\n    };\n    RoutingConnectionProvider.prototype._fetchRoutingTableFromSeedRouterFallbackToKnownRouters = function (knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth) {\n        return __awaiter(this, void 0, void 0, function () {\n            var seenRouters, _a, newRoutingTable, error, _b, newRoutingTable2, error2;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        seenRouters = [];\n                        return [4 /*yield*/, this._fetchRoutingTableUsingSeedRouter(seenRouters, this._seedRouter, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n                    case 1:\n                        _a = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable = _a[0], error = _a[1];\n                        if (!newRoutingTable) return [3 /*break*/, 2];\n                        this._useSeedRouter = false;\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, this._fetchRoutingTableUsingKnownRouters(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n                    case 3:\n                        _b = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable2 = _b[0], error2 = _b[1];\n                        newRoutingTable = newRoutingTable2;\n                        error = error2 || error;\n                        _c.label = 4;\n                    case 4: return [4 /*yield*/, this._applyRoutingTableIfPossible(currentRoutingTable, newRoutingTable, error)];\n                    case 5: return [2 /*return*/, _c.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._fetchRoutingTableFromKnownRoutersFallbackToSeedRouter = function (knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, newRoutingTable, error;\n            var _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this._fetchRoutingTableUsingKnownRouters(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n                    case 1:\n                        _a = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable = _a[0], error = _a[1];\n                        if (!!newRoutingTable) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this._fetchRoutingTableUsingSeedRouter(knownRouters, this._seedRouter, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n                    case 2:\n                        // none of the known routers returned a valid routing table - try to use seed router address for rediscovery\n                        _b = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable = _b[0], error = _b[1];\n                        _c.label = 3;\n                    case 3: return [4 /*yield*/, this._applyRoutingTableIfPossible(currentRoutingTable, newRoutingTable, error)];\n                    case 4: return [2 /*return*/, _c.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._fetchRoutingTableUsingKnownRouters = function (knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, newRoutingTable, error, lastRouterIndex;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this._fetchRoutingTable(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n                    case 1:\n                        _a = __read.apply(void 0, [_b.sent(), 2]), newRoutingTable = _a[0], error = _a[1];\n                        if (newRoutingTable) {\n                            // one of the known routers returned a valid routing table - use it\n                            return [2 /*return*/, [newRoutingTable, null]];\n                        }\n                        lastRouterIndex = knownRouters.length - 1;\n                        RoutingConnectionProvider._forgetRouter(currentRoutingTable, knownRouters, lastRouterIndex);\n                        return [2 /*return*/, [null, error]];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._fetchRoutingTableUsingSeedRouter = function (seenRouters, seedRouter, routingTable, bookmarks, impersonatedUser, auth) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resolvedAddresses, newAddresses;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._resolveSeedRouter(seedRouter)\n                        // filter out all addresses that we've already tried\n                    ];\n                    case 1:\n                        resolvedAddresses = _a.sent();\n                        newAddresses = resolvedAddresses.filter(function (address) { return seenRouters.indexOf(address) < 0; });\n                        return [4 /*yield*/, this._fetchRoutingTable(newAddresses, routingTable, bookmarks, impersonatedUser, auth)];\n                    case 2: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._resolveSeedRouter = function (seedRouter) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resolvedAddresses, dnsResolvedAddresses;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hostNameResolver.resolve(seedRouter)];\n                    case 1:\n                        resolvedAddresses = _a.sent();\n                        return [4 /*yield*/, Promise.all(resolvedAddresses.map(function (address) { return _this._dnsResolver.resolve(address); }))];\n                    case 2:\n                        dnsResolvedAddresses = _a.sent();\n                        return [2 /*return*/, [].concat.apply([], dnsResolvedAddresses)];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._fetchRoutingTable = function (routerAddresses, routingTable, bookmarks, impersonatedUser, auth) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, routerAddresses.reduce(function (refreshedTablePromise, currentRouter, currentIndex) { return __awaiter(_this, void 0, void 0, function () {\n                        var _a, newRoutingTable, previousRouterIndex, _b, session, error, error_3;\n                        return __generator(this, function (_c) {\n                            switch (_c.label) {\n                                case 0: return [4 /*yield*/, refreshedTablePromise];\n                                case 1:\n                                    _a = __read.apply(void 0, [_c.sent(), 1]), newRoutingTable = _a[0];\n                                    if (newRoutingTable) {\n                                        // valid routing table was fetched - just return it, try next router otherwise\n                                        return [2 /*return*/, [newRoutingTable, null]];\n                                    }\n                                    else {\n                                        previousRouterIndex = currentIndex - 1;\n                                        RoutingConnectionProvider._forgetRouter(routingTable, routerAddresses, previousRouterIndex);\n                                    }\n                                    return [4 /*yield*/, this._createSessionForRediscovery(currentRouter, bookmarks, impersonatedUser, auth)];\n                                case 2:\n                                    _b = __read.apply(void 0, [_c.sent(), 2]), session = _b[0], error = _b[1];\n                                    if (!session) return [3 /*break*/, 8];\n                                    _c.label = 3;\n                                case 3:\n                                    _c.trys.push([3, 5, 6, 7]);\n                                    return [4 /*yield*/, this._rediscovery.lookupRoutingTableOnRouter(session, routingTable.database, currentRouter, impersonatedUser)];\n                                case 4: return [2 /*return*/, [_c.sent(), null]];\n                                case 5:\n                                    error_3 = _c.sent();\n                                    return [2 /*return*/, this._handleRediscoveryError(error_3, currentRouter)];\n                                case 6:\n                                    session.close();\n                                    return [7 /*endfinally*/];\n                                case 7: return [3 /*break*/, 9];\n                                case 8: \n                                // unable to acquire connection and create session towards the current router\n                                // return null to signal that the next router should be tried\n                                return [2 /*return*/, [null, error]];\n                                case 9: return [2 /*return*/];\n                            }\n                        });\n                    }); }, Promise.resolve([null, null]))];\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._createSessionForRediscovery = function (routerAddress, bookmarks, impersonatedUser, auth) {\n        return __awaiter(this, void 0, void 0, function () {\n            var connection, databaseSpecificErrorHandler, delegateConnection, connectionProvider, protocolVersion, error_4;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 4, , 5]);\n                        return [4 /*yield*/, this._connectionPool.acquire({ auth: auth }, routerAddress)];\n                    case 1:\n                        connection = _a.sent();\n                        if (!auth) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this._verifyStickyConnection({\n                                auth: auth,\n                                connection: connection,\n                                address: routerAddress\n                            })];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        databaseSpecificErrorHandler = connection_1.ConnectionErrorHandler.create({\n                            errorCode: SESSION_EXPIRED,\n                            handleSecurityError: function (error, address, conn) { return _this._handleSecurityError(error, address, conn); }\n                        });\n                        delegateConnection = !connection._sticky\n                            ? new connection_1.DelegateConnection(connection, databaseSpecificErrorHandler)\n                            : new connection_1.DelegateConnection(connection);\n                        connectionProvider = new connection_provider_single_1.default(delegateConnection);\n                        protocolVersion = connection.protocol().version;\n                        if (protocolVersion < 4.0) {\n                            return [2 /*return*/, [new neo4j_driver_core_1.Session({\n                                        mode: WRITE,\n                                        bookmarks: Bookmarks.empty(),\n                                        connectionProvider: connectionProvider\n                                    }), null]];\n                        }\n                        return [2 /*return*/, [new neo4j_driver_core_1.Session({\n                                    mode: READ,\n                                    database: SYSTEM_DB_NAME,\n                                    bookmarks: bookmarks,\n                                    connectionProvider: connectionProvider,\n                                    impersonatedUser: impersonatedUser\n                                }), null]];\n                    case 4:\n                        error_4 = _a.sent();\n                        return [2 /*return*/, this._handleRediscoveryError(error_4, routerAddress)];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._handleRediscoveryError = function (error, routerAddress) {\n        if (_isFailFastError(error) || _isFailFastSecurityError(error)) {\n            throw error;\n        }\n        else if (error.code === PROCEDURE_NOT_FOUND_CODE) {\n            // throw when getServers procedure not found because this is clearly a configuration issue\n            throw (0, neo4j_driver_core_1.newError)(\"Server at \".concat(routerAddress.asHostPort(), \" can't perform routing. Make sure you are connecting to a causal cluster\"), SERVICE_UNAVAILABLE, error);\n        }\n        this._log.warn(\"unable to fetch routing table because of an error \".concat(error));\n        return [null, error];\n    };\n    RoutingConnectionProvider.prototype._applyRoutingTableIfPossible = function (currentRoutingTable, newRoutingTable, error) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!newRoutingTable) {\n                            // none of routing servers returned valid routing table, throw exception\n                            throw (0, neo4j_driver_core_1.newError)(\"Could not perform discovery. No routing servers available. Known routing table: \".concat(currentRoutingTable), SERVICE_UNAVAILABLE, error);\n                        }\n                        if (newRoutingTable.writers.length === 0) {\n                            // use seed router next time. this is important when cluster is partitioned. it tries to make sure driver\n                            // does not always get routing table without writers because it talks exclusively to a minority partition\n                            this._useSeedRouter = true;\n                        }\n                        return [4 /*yield*/, this._updateRoutingTable(newRoutingTable)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, newRoutingTable];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._updateRoutingTable = function (newRoutingTable) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: \n                    // close old connections to servers not present in the new routing table\n                    return [4 /*yield*/, this._connectionPool.keepAll(newRoutingTable.allServers())];\n                    case 1:\n                        // close old connections to servers not present in the new routing table\n                        _a.sent();\n                        this._routingTableRegistry.removeExpired();\n                        this._routingTableRegistry.register(newRoutingTable);\n                        this._log.info(\"Updated routing table \".concat(newRoutingTable));\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider._forgetRouter = function (routingTable, routersArray, routerIndex) {\n        var address = routersArray[routerIndex];\n        if (routingTable && address) {\n            routingTable.forgetRouter(address);\n        }\n    };\n    return RoutingConnectionProvider;\n}(connection_provider_pooled_1.default));\nexports[\"default\"] = RoutingConnectionProvider;\n/**\n * Responsible for keeping track of the existing routing tables\n */\nvar RoutingTableRegistry = /** @class */ (function () {\n    /**\n     * Constructor\n     * @param {int} routingTablePurgeDelay The routing table purge delay\n     */\n    function RoutingTableRegistry(routingTablePurgeDelay) {\n        this._tables = new Map();\n        this._routingTablePurgeDelay = routingTablePurgeDelay;\n    }\n    /**\n     * Put a routing table in the registry\n     *\n     * @param {RoutingTable} table The routing table\n     * @returns {RoutingTableRegistry} this\n     */\n    RoutingTableRegistry.prototype.register = function (table) {\n        this._tables.set(table.database, table);\n        return this;\n    };\n    /**\n     * Apply function in the routing table for an specific database. If the database name is not defined, the function will\n     * be applied for each element\n     *\n     * @param {string} database The database name\n     * @param {object} callbacks The actions\n     * @param {function (RoutingTable)} callbacks.applyWhenExists Call when the db exists or when the database property is not informed\n     * @param {function ()} callbacks.applyWhenDontExists Call when the database doesn't have the routing table registred\n     * @returns {RoutingTableRegistry} this\n     */\n    RoutingTableRegistry.prototype.apply = function (database, _a) {\n        var _b = _a === void 0 ? {} : _a, applyWhenExists = _b.applyWhenExists, _c = _b.applyWhenDontExists, applyWhenDontExists = _c === void 0 ? function () { } : _c;\n        if (this._tables.has(database)) {\n            applyWhenExists(this._tables.get(database));\n        }\n        else if (typeof database === 'string' || database === null) {\n            applyWhenDontExists();\n        }\n        else {\n            this._forEach(applyWhenExists);\n        }\n        return this;\n    };\n    /**\n     * Retrieves a routing table from a given database name\n     *\n     * @param {string|impersonatedUser} impersonatedUser The impersonated User\n     * @param {string} database The database name\n     * @param {function()|RoutingTable} defaultSupplier The routing table supplier, if it's not a function or not exists, it will return itself as default value\n     * @returns {RoutingTable} The routing table for the respective database\n     */\n    RoutingTableRegistry.prototype.get = function (database, defaultSupplier) {\n        if (this._tables.has(database)) {\n            return this._tables.get(database);\n        }\n        return typeof defaultSupplier === 'function'\n            ? defaultSupplier()\n            : defaultSupplier;\n    };\n    /**\n     * Remove the routing table which is already expired\n     * @returns {RoutingTableRegistry} this\n     */\n    RoutingTableRegistry.prototype.removeExpired = function () {\n        var _this = this;\n        return this._removeIf(function (value) {\n            return value.isExpiredFor(_this._routingTablePurgeDelay);\n        });\n    };\n    RoutingTableRegistry.prototype._forEach = function (apply) {\n        var e_3, _a;\n        try {\n            for (var _b = __values(this._tables), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), value = _d[1];\n                apply(value);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return this;\n    };\n    RoutingTableRegistry.prototype._remove = function (key) {\n        this._tables.delete(key);\n        return this;\n    };\n    RoutingTableRegistry.prototype._removeIf = function (predicate) {\n        var e_4, _a;\n        try {\n            for (var _b = __values(this._tables), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\n                if (predicate(value)) {\n                    this._remove(key);\n                }\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        return this;\n    };\n    return RoutingTableRegistry;\n}());\nfunction _isFailFastError(error) {\n    return [\n        DATABASE_NOT_FOUND_CODE,\n        INVALID_BOOKMARK_CODE,\n        INVALID_BOOKMARK_MIXTURE_CODE,\n        INVALID_ARGUMENT_ERROR,\n        INVALID_REQUEST_ERROR,\n        STATEMENT_TYPE_ERROR,\n        NOT_AVAILABLE\n    ].includes(error.code);\n}\nfunction _isFailFastSecurityError(error) {\n    return error.code.startsWith('Neo.ClientError.Security.') &&\n        ![\n            AUTHORIZATION_EXPIRED_CODE\n        ].includes(error.code);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-routing.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-single.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-single.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar SingleConnectionProvider = /** @class */ (function (_super) {\n    __extends(SingleConnectionProvider, _super);\n    function SingleConnectionProvider(connection) {\n        var _this = _super.call(this) || this;\n        _this._connection = connection;\n        return _this;\n    }\n    /**\n     * See {@link ConnectionProvider} for more information about this method and\n     * its arguments.\n     */\n    SingleConnectionProvider.prototype.acquireConnection = function (_a) {\n        var _b = _a === void 0 ? {} : _a, accessMode = _b.accessMode, database = _b.database, bookmarks = _b.bookmarks;\n        var connection = this._connection;\n        this._connection = null;\n        return Promise.resolve(connection);\n    };\n    return SingleConnectionProvider;\n}(neo4j_driver_core_1.ConnectionProvider));\nexports[\"default\"] = SingleConnectionProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvY29ubmVjdGlvbi1wcm92aWRlci9jb25uZWN0aW9uLXByb3ZpZGVyLXNpbmdsZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnQkFBZ0Isc0NBQXNDLGtCQUFrQjtBQUN2Riw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQixtQkFBTyxDQUFDLDhFQUFtQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwwQkFBMEI7QUFDdEM7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9jb25uZWN0aW9uLXByb3ZpZGVyL2Nvbm5lY3Rpb24tcHJvdmlkZXItc2luZ2xlLmpzPzM1NGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIENvcHlyaWdodCAoYykgXCJOZW80alwiXG4gKiBOZW80aiBTd2VkZW4gQUIgW2h0dHBzOi8vbmVvNGouY29tXVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBuZW80al9kcml2ZXJfY29yZV8xID0gcmVxdWlyZShcIm5lbzRqLWRyaXZlci1jb3JlXCIpO1xudmFyIFNpbmdsZUNvbm5lY3Rpb25Qcm92aWRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoU2luZ2xlQ29ubmVjdGlvblByb3ZpZGVyLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFNpbmdsZUNvbm5lY3Rpb25Qcm92aWRlcihjb25uZWN0aW9uKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLl9jb25uZWN0aW9uID0gY29ubmVjdGlvbjtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZWUge0BsaW5rIENvbm5lY3Rpb25Qcm92aWRlcn0gZm9yIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgdGhpcyBtZXRob2QgYW5kXG4gICAgICogaXRzIGFyZ3VtZW50cy5cbiAgICAgKi9cbiAgICBTaW5nbGVDb25uZWN0aW9uUHJvdmlkZXIucHJvdG90eXBlLmFjcXVpcmVDb25uZWN0aW9uID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgIHZhciBfYiA9IF9hID09PSB2b2lkIDAgPyB7fSA6IF9hLCBhY2Nlc3NNb2RlID0gX2IuYWNjZXNzTW9kZSwgZGF0YWJhc2UgPSBfYi5kYXRhYmFzZSwgYm9va21hcmtzID0gX2IuYm9va21hcmtzO1xuICAgICAgICB2YXIgY29ubmVjdGlvbiA9IHRoaXMuX2Nvbm5lY3Rpb247XG4gICAgICAgIHRoaXMuX2Nvbm5lY3Rpb24gPSBudWxsO1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGNvbm5lY3Rpb24pO1xuICAgIH07XG4gICAgcmV0dXJuIFNpbmdsZUNvbm5lY3Rpb25Qcm92aWRlcjtcbn0obmVvNGpfZHJpdmVyX2NvcmVfMS5Db25uZWN0aW9uUHJvdmlkZXIpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IFNpbmdsZUNvbm5lY3Rpb25Qcm92aWRlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-single.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/index.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RoutingConnectionProvider = exports.DirectConnectionProvider = exports.PooledConnectionProvider = exports.SingleConnectionProvider = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar connection_provider_single_1 = __webpack_require__(/*! ./connection-provider-single */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-single.js\");\nObject.defineProperty(exports, \"SingleConnectionProvider\", ({ enumerable: true, get: function () { return __importDefault(connection_provider_single_1).default; } }));\nvar connection_provider_pooled_1 = __webpack_require__(/*! ./connection-provider-pooled */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-pooled.js\");\nObject.defineProperty(exports, \"PooledConnectionProvider\", ({ enumerable: true, get: function () { return __importDefault(connection_provider_pooled_1).default; } }));\nvar connection_provider_direct_1 = __webpack_require__(/*! ./connection-provider-direct */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-direct.js\");\nObject.defineProperty(exports, \"DirectConnectionProvider\", ({ enumerable: true, get: function () { return __importDefault(connection_provider_direct_1).default; } }));\nvar connection_provider_routing_1 = __webpack_require__(/*! ./connection-provider-routing */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-routing.js\");\nObject.defineProperty(exports, \"RoutingConnectionProvider\", ({ enumerable: true, get: function () { return __importDefault(connection_provider_routing_1).default; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvY29ubmVjdGlvbi1wcm92aWRlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlDQUFpQyxHQUFHLGdDQUFnQyxHQUFHLGdDQUFnQyxHQUFHLGdDQUFnQztBQUMxSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxtQkFBTyxDQUFDLDZJQUE4QjtBQUN6RSw0REFBMkQsRUFBRSxxQ0FBcUMsaUVBQWlFLEVBQUM7QUFDcEssbUNBQW1DLG1CQUFPLENBQUMsNklBQThCO0FBQ3pFLDREQUEyRCxFQUFFLHFDQUFxQyxpRUFBaUUsRUFBQztBQUNwSyxtQ0FBbUMsbUJBQU8sQ0FBQyw2SUFBOEI7QUFDekUsNERBQTJELEVBQUUscUNBQXFDLGlFQUFpRSxFQUFDO0FBQ3BLLG9DQUFvQyxtQkFBTyxDQUFDLCtJQUErQjtBQUMzRSw2REFBNEQsRUFBRSxxQ0FBcUMsa0VBQWtFLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9jb25uZWN0aW9uLXByb3ZpZGVyL2luZGV4LmpzPzYzZTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJvdXRpbmdDb25uZWN0aW9uUHJvdmlkZXIgPSBleHBvcnRzLkRpcmVjdENvbm5lY3Rpb25Qcm92aWRlciA9IGV4cG9ydHMuUG9vbGVkQ29ubmVjdGlvblByb3ZpZGVyID0gZXhwb3J0cy5TaW5nbGVDb25uZWN0aW9uUHJvdmlkZXIgPSB2b2lkIDA7XG4vKipcbiAqIENvcHlyaWdodCAoYykgXCJOZW80alwiXG4gKiBOZW80aiBTd2VkZW4gQUIgW2h0dHBzOi8vbmVvNGouY29tXVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIGNvbm5lY3Rpb25fcHJvdmlkZXJfc2luZ2xlXzEgPSByZXF1aXJlKFwiLi9jb25uZWN0aW9uLXByb3ZpZGVyLXNpbmdsZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlNpbmdsZUNvbm5lY3Rpb25Qcm92aWRlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gX19pbXBvcnREZWZhdWx0KGNvbm5lY3Rpb25fcHJvdmlkZXJfc2luZ2xlXzEpLmRlZmF1bHQ7IH0gfSk7XG52YXIgY29ubmVjdGlvbl9wcm92aWRlcl9wb29sZWRfMSA9IHJlcXVpcmUoXCIuL2Nvbm5lY3Rpb24tcHJvdmlkZXItcG9vbGVkXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUG9vbGVkQ29ubmVjdGlvblByb3ZpZGVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBfX2ltcG9ydERlZmF1bHQoY29ubmVjdGlvbl9wcm92aWRlcl9wb29sZWRfMSkuZGVmYXVsdDsgfSB9KTtcbnZhciBjb25uZWN0aW9uX3Byb3ZpZGVyX2RpcmVjdF8xID0gcmVxdWlyZShcIi4vY29ubmVjdGlvbi1wcm92aWRlci1kaXJlY3RcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJEaXJlY3RDb25uZWN0aW9uUHJvdmlkZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF9faW1wb3J0RGVmYXVsdChjb25uZWN0aW9uX3Byb3ZpZGVyX2RpcmVjdF8xKS5kZWZhdWx0OyB9IH0pO1xudmFyIGNvbm5lY3Rpb25fcHJvdmlkZXJfcm91dGluZ18xID0gcmVxdWlyZShcIi4vY29ubmVjdGlvbi1wcm92aWRlci1yb3V0aW5nXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUm91dGluZ0Nvbm5lY3Rpb25Qcm92aWRlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gX19pbXBvcnREZWZhdWx0KGNvbm5lY3Rpb25fcHJvdmlkZXJfcm91dGluZ18xKS5kZWZhdWx0OyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/liveness-check-provider.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/liveness-check-provider.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar LivenessCheckProvider = /** @class */ (function () {\n    function LivenessCheckProvider(_a) {\n        var connectionLivenessCheckTimeout = _a.connectionLivenessCheckTimeout;\n        this._connectionLivenessCheckTimeout = connectionLivenessCheckTimeout;\n    }\n    /**\n     * Checks connection liveness with configured params.\n     *\n     * @param {Connection} connection\n     * @returns {Promise<true>} If liveness checks succeed, throws otherwise\n     */\n    LivenessCheckProvider.prototype.check = function (connection) {\n        return __awaiter(this, void 0, void 0, function () {\n            var idleFor;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this._isCheckDisabled || this._isNewlyCreatedConnection(connection)) {\n                            return [2 /*return*/, true];\n                        }\n                        idleFor = Date.now() - connection.idleTimestamp;\n                        if (!(this._connectionLivenessCheckTimeout === 0 ||\n                            idleFor > this._connectionLivenessCheckTimeout)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, connection.resetAndFlush()\n                                .then(function () { return true; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                    case 2: return [2 /*return*/, true];\n                }\n            });\n        });\n    };\n    Object.defineProperty(LivenessCheckProvider.prototype, \"_isCheckDisabled\", {\n        get: function () {\n            return this._connectionLivenessCheckTimeout == null || this._connectionLivenessCheckTimeout < 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LivenessCheckProvider.prototype._isNewlyCreatedConnection = function (connection) {\n        return connection.authToken == null;\n    };\n    return LivenessCheckProvider;\n}());\nexports[\"default\"] = LivenessCheckProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/liveness-check-provider.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection/connection-channel.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/connection/connection-channel.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createChannelConnection = void 0;\nvar channel_1 = __webpack_require__(/*! ../channel */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/index.js\");\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar connection_1 = __importDefault(__webpack_require__(/*! ./connection */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection/connection.js\"));\nvar bolt_1 = __importDefault(__webpack_require__(/*! ../bolt */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/index.js\"));\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\nvar Logger = neo4j_driver_core_1.internal.logger.Logger;\nvar idGenerator = 0;\n/**\n * Crete new connection to the provided address. Returned connection is not connected.\n * @param {ServerAddress} address - the Bolt endpoint to connect to.\n * @param {Object} config - the driver configuration.\n * @param {ConnectionErrorHandler} errorHandler - the error handler for connection errors.\n * @param {Logger} log - configured logger.\n * @param {clientCertificate} clientCertificate - configured client certificate\n * @return {Connection} - new connection.\n */\nfunction createChannelConnection(address, config, errorHandler, log, clientCertificate, serversideRouting, createChannel) {\n    if (serversideRouting === void 0) { serversideRouting = null; }\n    if (createChannel === void 0) { createChannel = function (channelConfig) { return new channel_1.Channel(channelConfig); }; }\n    var channelConfig = new channel_1.ChannelConfig(address, config, errorHandler.errorCode(), clientCertificate);\n    var channel = createChannel(channelConfig);\n    return bolt_1.default.handshake(channel, log)\n        .then(function (_a) {\n        var version = _a.protocolVersion, consumeRemainingBuffer = _a.consumeRemainingBuffer;\n        var chunker = new channel_1.Chunker(channel);\n        var dechunker = new channel_1.Dechunker();\n        var createProtocol = function (conn) {\n            return bolt_1.default.create({\n                version: version,\n                channel: channel,\n                chunker: chunker,\n                dechunker: dechunker,\n                disableLosslessIntegers: config.disableLosslessIntegers,\n                useBigInt: config.useBigInt,\n                serversideRouting: serversideRouting,\n                server: conn.server,\n                log: conn.logger,\n                observer: {\n                    onObserversCountChange: conn._handleOngoingRequestsNumberChange.bind(conn),\n                    onError: conn._handleFatalError.bind(conn),\n                    onFailure: conn._resetOnFailure.bind(conn),\n                    onProtocolError: conn._handleProtocolError.bind(conn),\n                    onErrorApplyTransformation: function (error) {\n                        return conn.handleAndTransformError(error, conn._address);\n                    }\n                }\n            });\n        };\n        var connection = new ChannelConnection(channel, errorHandler, address, log, config.disableLosslessIntegers, serversideRouting, chunker, config.notificationFilter, createProtocol, config.telemetryDisabled);\n        // forward all pending bytes to the dechunker\n        consumeRemainingBuffer(function (buffer) { return dechunker.write(buffer); });\n        return connection;\n    })\n        .catch(function (reason) {\n        return channel.close().then(function () {\n            throw reason;\n        });\n    });\n}\nexports.createChannelConnection = createChannelConnection;\nvar ChannelConnection = /** @class */ (function (_super) {\n    __extends(ChannelConnection, _super);\n    /**\n     * @constructor\n     * @param {Channel} channel - channel with a 'write' function and a 'onmessage' callback property.\n     * @param {ConnectionErrorHandler} errorHandler the error handler.\n     * @param {ServerAddress} address - the server address to connect to.\n     * @param {Logger} log - the configured logger.\n     * @param {boolean} disableLosslessIntegers if this connection should convert all received integers to native JS numbers.\n     * @param {Chunker} chunker the chunker\n     * @param protocolSupplier Bolt protocol supplier\n     */\n    function ChannelConnection(channel, errorHandler, address, log, disableLosslessIntegers, serversideRouting, chunker, // to be removed,\n    notificationFilter, protocolSupplier, telemetryDisabled) {\n        if (disableLosslessIntegers === void 0) { disableLosslessIntegers = false; }\n        if (serversideRouting === void 0) { serversideRouting = null; }\n        var _this = _super.call(this, errorHandler) || this;\n        _this._authToken = null;\n        _this._idle = false;\n        _this._reseting = false;\n        _this._resetObservers = [];\n        _this._id = idGenerator++;\n        _this._address = address;\n        _this._server = { address: address.asHostPort() };\n        _this._creationTimestamp = Date.now();\n        _this._disableLosslessIntegers = disableLosslessIntegers;\n        _this._ch = channel;\n        _this._chunker = chunker;\n        _this._log = createConnectionLogger(_this, log);\n        _this._serversideRouting = serversideRouting;\n        _this._notificationFilter = notificationFilter;\n        _this._telemetryDisabledDriverConfig = telemetryDisabled === true;\n        _this._telemetryDisabledConnection = true;\n        // connection from the database, returned in response for HELLO message and might not be available\n        _this._dbConnectionId = null;\n        // bolt protocol is initially not initialized\n        /**\n         * @private\n         * @type {BoltProtocol}\n         */\n        _this._protocol = protocolSupplier(_this);\n        // Set to true on fatal errors, to get this out of connection pool.\n        _this._isBroken = false;\n        if (_this._log.isDebugEnabled()) {\n            _this._log.debug(\"created towards \".concat(address));\n        }\n        return _this;\n    }\n    ChannelConnection.prototype.beginTransaction = function (config) {\n        this._sendTelemetryIfEnabled(config);\n        return this._protocol.beginTransaction(config);\n    };\n    ChannelConnection.prototype.run = function (query, parameters, config) {\n        this._sendTelemetryIfEnabled(config);\n        return this._protocol.run(query, parameters, config);\n    };\n    ChannelConnection.prototype._sendTelemetryIfEnabled = function (config) {\n        if (this._telemetryDisabledConnection ||\n            this._telemetryDisabledDriverConfig ||\n            config == null ||\n            config.apiTelemetryConfig == null) {\n            return;\n        }\n        this._protocol.telemetry({\n            api: config.apiTelemetryConfig.api\n        }, {\n            onCompleted: config.apiTelemetryConfig.onTelemetrySuccess,\n            onError: config.beforeError\n        });\n    };\n    ChannelConnection.prototype.commitTransaction = function (config) {\n        return this._protocol.commitTransaction(config);\n    };\n    ChannelConnection.prototype.rollbackTransaction = function (config) {\n        return this._protocol.rollbackTransaction(config);\n    };\n    ChannelConnection.prototype.getProtocolVersion = function () {\n        return this._protocol.version;\n    };\n    Object.defineProperty(ChannelConnection.prototype, \"authToken\", {\n        get: function () {\n            return this._authToken;\n        },\n        set: function (value) {\n            this._authToken = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"supportsReAuth\", {\n        get: function () {\n            return this._protocol.supportsReAuth;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"id\", {\n        get: function () {\n            return this._id;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"databaseId\", {\n        get: function () {\n            return this._dbConnectionId;\n        },\n        set: function (value) {\n            this._dbConnectionId = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"idleTimestamp\", {\n        get: function () {\n            return this._idleTimestamp;\n        },\n        set: function (value) {\n            this._idleTimestamp = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"creationTimestamp\", {\n        get: function () {\n            return this._creationTimestamp;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Send initialization message.\n     * @param {string} userAgent the user agent for this driver.\n     * @param {Object} boltAgent the bolt agent for this driver.\n     * @param {Object} authToken the object containing auth information.\n     * @param {boolean} waitReAuth whether ot not the connection will wait for re-authentication to happen\n     * @return {Promise<Connection>} promise resolved with the current connection if connection is successful. Rejected promise otherwise.\n     */\n    ChannelConnection.prototype.connect = function (userAgent, boltAgent, authToken, waitReAuth) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this._protocol.initialized && !this._protocol.supportsReAuth) {\n                            throw (0, neo4j_driver_core_1.newError)('Connection does not support re-auth');\n                        }\n                        this._authToken = authToken;\n                        if (!!this._protocol.initialized) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this._initialize(userAgent, boltAgent, authToken)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                    case 2:\n                        if (!waitReAuth) return [3 /*break*/, 4];\n                        return [4 /*yield*/, new Promise(function (resolve, reject) {\n                                _this._protocol.logoff({\n                                    onError: reject\n                                });\n                                _this._protocol.logon({\n                                    authToken: authToken,\n                                    onError: reject,\n                                    onComplete: function () { return resolve(_this); },\n                                    flush: true\n                                });\n                            })];\n                    case 3: return [2 /*return*/, _a.sent()];\n                    case 4:\n                        this._protocol.logoff();\n                        this._protocol.logon({ authToken: authToken, flush: true });\n                        return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    /**\n     * Perform protocol-specific initialization which includes authentication.\n     * @param {string} userAgent the user agent for this driver.\n     * @param {string} boltAgent the bolt agent for this driver.\n     * @param {Object} authToken the object containing auth information.\n     * @return {Promise<Connection>} promise resolved with the current connection if initialization is successful. Rejected promise otherwise.\n     */\n    ChannelConnection.prototype._initialize = function (userAgent, boltAgent, authToken) {\n        var _this = this;\n        var self = this;\n        return new Promise(function (resolve, reject) {\n            _this._protocol.initialize({\n                userAgent: userAgent,\n                boltAgent: boltAgent,\n                authToken: authToken,\n                notificationFilter: _this._notificationFilter,\n                onError: function (err) { return reject(err); },\n                onComplete: function (metadata) {\n                    if (metadata) {\n                        // read server version from the response metadata, if it is available\n                        var serverVersion = metadata.server;\n                        if (!_this.version || serverVersion) {\n                            _this.version = serverVersion;\n                        }\n                        // read database connection id from the response metadata, if it is available\n                        var dbConnectionId = metadata.connection_id;\n                        if (!_this.databaseId) {\n                            _this.databaseId = dbConnectionId;\n                        }\n                        if (metadata.hints) {\n                            var receiveTimeoutRaw = metadata.hints['connection.recv_timeout_seconds'];\n                            if (receiveTimeoutRaw !== null &&\n                                receiveTimeoutRaw !== undefined) {\n                                var receiveTimeoutInSeconds = (0, neo4j_driver_core_1.toNumber)(receiveTimeoutRaw);\n                                if (Number.isInteger(receiveTimeoutInSeconds) &&\n                                    receiveTimeoutInSeconds > 0) {\n                                    _this._ch.setupReceiveTimeout(receiveTimeoutInSeconds * 1000);\n                                }\n                                else {\n                                    _this._log.info(\"Server located at \".concat(_this._address, \" supplied an invalid connection receive timeout value (\").concat(receiveTimeoutInSeconds, \"). \") +\n                                        'Please, verify the server configuration and status because this can be the symptom of a bigger issue.');\n                                }\n                            }\n                            var telemetryEnabledHint = metadata.hints['telemetry.enabled'];\n                            if (telemetryEnabledHint === true) {\n                                _this._telemetryDisabledConnection = false;\n                            }\n                        }\n                    }\n                    resolve(self);\n                }\n            });\n        });\n    };\n    /**\n     * Get the Bolt protocol for the connection.\n     * @return {BoltProtocol} the protocol.\n     */\n    ChannelConnection.prototype.protocol = function () {\n        return this._protocol;\n    };\n    Object.defineProperty(ChannelConnection.prototype, \"address\", {\n        get: function () {\n            return this._address;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"version\", {\n        /**\n         * Get the version of the connected server.\n         * Available only after initialization\n         *\n         * @returns {ServerVersion} version\n         */\n        get: function () {\n            return this._server.version;\n        },\n        set: function (value) {\n            this._server.version = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"server\", {\n        get: function () {\n            return this._server;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"logger\", {\n        get: function () {\n            return this._log;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * \"Fatal\" means the connection is dead. Only call this if something\n     * happens that cannot be recovered from. This will lead to all subscribers\n     * failing, and the connection getting ejected from the session pool.\n     *\n     * @param error an error object, forwarded to all current and future subscribers\n     */\n    ChannelConnection.prototype._handleFatalError = function (error) {\n        this._isBroken = true;\n        this._error = this.handleAndTransformError(this._protocol.currentFailure || error, this._address);\n        if (this._log.isErrorEnabled()) {\n            this._log.error(\"experienced a fatal error caused by \".concat(this._error, \" (\").concat(neo4j_driver_core_1.json.stringify(this._error), \")\"));\n        }\n        this._protocol.notifyFatalError(this._error);\n    };\n    /**\n     * This method is used by the {@link PooledConnectionProvider}\n     *\n     * @param {any} observer\n     */\n    ChannelConnection.prototype._setIdle = function (observer) {\n        this._idle = true;\n        this._ch.stopReceiveTimeout();\n        this._protocol.queueObserverIfProtocolIsNotBroken(observer);\n    };\n    /**\n     * This method is used by the {@link PooledConnectionProvider}\n     */\n    ChannelConnection.prototype._unsetIdle = function () {\n        this._idle = false;\n        this._updateCurrentObserver();\n    };\n    /**\n     * This method still here because of the connection-channel.tests.js\n     *\n     * @param {any} observer\n     */\n    ChannelConnection.prototype._queueObserver = function (observer) {\n        return this._protocol.queueObserverIfProtocolIsNotBroken(observer);\n    };\n    ChannelConnection.prototype.hasOngoingObservableRequests = function () {\n        return !this._idle && this._protocol.hasOngoingObservableRequests();\n    };\n    /**\n     * Send a RESET-message to the database. Message is immediately flushed to the network.\n     * @return {Promise<void>} promise resolved when SUCCESS-message response arrives, or failed when other response messages arrives.\n     */\n    ChannelConnection.prototype.resetAndFlush = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._reset({\n                onError: function (error) {\n                    if (_this._isBroken) {\n                        // handling a fatal error, no need to raise a protocol violation\n                        reject(error);\n                    }\n                    else {\n                        var neo4jError = _this._handleProtocolError('Received FAILURE as a response for RESET: ' + error);\n                        reject(neo4jError);\n                    }\n                },\n                onComplete: function () {\n                    resolve();\n                }\n            });\n        });\n    };\n    ChannelConnection.prototype._resetOnFailure = function () {\n        var _this = this;\n        if (!this.isOpen()) {\n            return;\n        }\n        this._reset({\n            onError: function () {\n                _this._protocol.resetFailure();\n            },\n            onComplete: function () {\n                _this._protocol.resetFailure();\n            }\n        });\n    };\n    ChannelConnection.prototype._reset = function (observer) {\n        var _this = this;\n        if (this._reseting) {\n            if (!this._protocol.isLastMessageReset()) {\n                this._protocol.reset({\n                    onError: function (error) {\n                        observer.onError(error);\n                    },\n                    onComplete: function () {\n                        observer.onComplete();\n                    }\n                });\n            }\n            else {\n                this._resetObservers.push(observer);\n            }\n            return;\n        }\n        this._resetObservers.push(observer);\n        this._reseting = true;\n        var notifyFinish = function (notify) {\n            _this._reseting = false;\n            var observers = _this._resetObservers;\n            _this._resetObservers = [];\n            observers.forEach(notify);\n        };\n        this._protocol.reset({\n            onError: function (error) {\n                notifyFinish(function (obs) { return obs.onError(error); });\n            },\n            onComplete: function () {\n                notifyFinish(function (obs) { return obs.onComplete(); });\n            }\n        });\n    };\n    /*\n     * Pop next pending observer form the list of observers and make it current observer.\n     * @protected\n     */\n    ChannelConnection.prototype._updateCurrentObserver = function () {\n        this._protocol.updateCurrentObserver();\n    };\n    /** Check if this connection is in working condition */\n    ChannelConnection.prototype.isOpen = function () {\n        return !this._isBroken && this._ch._open;\n    };\n    /**\n     * Starts and stops the receive timeout timer.\n     * @param {number} requestsNumber Ongoing requests number\n     */\n    ChannelConnection.prototype._handleOngoingRequestsNumberChange = function (requestsNumber) {\n        if (this._idle) {\n            return;\n        }\n        if (requestsNumber === 0) {\n            this._ch.stopReceiveTimeout();\n        }\n        else {\n            this._ch.startReceiveTimeout();\n        }\n    };\n    /**\n     * Call close on the channel.\n     * @returns {Promise<void>} - A promise that will be resolved when the underlying channel is closed.\n     */\n    ChannelConnection.prototype.close = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug('closing');\n                        }\n                        if (this._protocol && this.isOpen()) {\n                            // protocol has been initialized and this connection is healthy\n                            // notify the database about the upcoming close of the connection\n                            this._protocol.prepareToClose();\n                        }\n                        return [4 /*yield*/, this._ch.close()];\n                    case 1:\n                        _a.sent();\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug('closed');\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ChannelConnection.prototype.toString = function () {\n        return \"Connection [\".concat(this.id, \"][\").concat(this.databaseId || '', \"]\");\n    };\n    ChannelConnection.prototype._handleProtocolError = function (message) {\n        this._protocol.resetFailure();\n        this._updateCurrentObserver();\n        var error = (0, neo4j_driver_core_1.newError)(message, PROTOCOL_ERROR);\n        this._handleFatalError(error);\n        return error;\n    };\n    return ChannelConnection;\n}(connection_1.default));\nexports[\"default\"] = ChannelConnection;\n/**\n * Creates a log with the connection info as prefix\n * @param {Connection} connection The connection\n * @param {Logger} logger The logger\n * @returns {Logger} The new logger with enriched messages\n */\nfunction createConnectionLogger(connection, logger) {\n    return new Logger(logger._level, function (level, message) {\n        return logger._loggerFunction(level, \"\".concat(connection, \" \").concat(message));\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection/connection-channel.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection/connection-delegate.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/connection/connection-delegate.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar connection_1 = __importDefault(__webpack_require__(/*! ./connection */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection/connection.js\"));\nvar DelegateConnection = /** @class */ (function (_super) {\n    __extends(DelegateConnection, _super);\n    /**\n     * @param delegate {Connection} the delegated connection\n     * @param errorHandler {ConnectionErrorHandler} the error handler\n     */\n    function DelegateConnection(delegate, errorHandler) {\n        var _this = _super.call(this, errorHandler) || this;\n        if (errorHandler) {\n            _this._originalErrorHandler = delegate._errorHandler;\n            delegate._errorHandler = _this._errorHandler;\n        }\n        _this._delegate = delegate;\n        return _this;\n    }\n    DelegateConnection.prototype.beginTransaction = function (config) {\n        return this._delegate.beginTransaction(config);\n    };\n    DelegateConnection.prototype.run = function (query, param, config) {\n        return this._delegate.run(query, param, config);\n    };\n    DelegateConnection.prototype.commitTransaction = function (config) {\n        return this._delegate.commitTransaction(config);\n    };\n    DelegateConnection.prototype.rollbackTransaction = function (config) {\n        return this._delegate.rollbackTransaction(config);\n    };\n    DelegateConnection.prototype.getProtocolVersion = function () {\n        return this._delegate.getProtocolVersion();\n    };\n    Object.defineProperty(DelegateConnection.prototype, \"id\", {\n        get: function () {\n            return this._delegate.id;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DelegateConnection.prototype, \"databaseId\", {\n        get: function () {\n            return this._delegate.databaseId;\n        },\n        set: function (value) {\n            this._delegate.databaseId = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DelegateConnection.prototype, \"server\", {\n        get: function () {\n            return this._delegate.server;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DelegateConnection.prototype, \"authToken\", {\n        get: function () {\n            return this._delegate.authToken;\n        },\n        set: function (value) {\n            this._delegate.authToken = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DelegateConnection.prototype, \"supportsReAuth\", {\n        get: function () {\n            return this._delegate.supportsReAuth;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DelegateConnection.prototype, \"address\", {\n        get: function () {\n            return this._delegate.address;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DelegateConnection.prototype, \"version\", {\n        get: function () {\n            return this._delegate.version;\n        },\n        set: function (value) {\n            this._delegate.version = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DelegateConnection.prototype, \"creationTimestamp\", {\n        get: function () {\n            return this._delegate.creationTimestamp;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DelegateConnection.prototype, \"idleTimestamp\", {\n        get: function () {\n            return this._delegate.idleTimestamp;\n        },\n        set: function (value) {\n            this._delegate.idleTimestamp = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DelegateConnection.prototype.isOpen = function () {\n        return this._delegate.isOpen();\n    };\n    DelegateConnection.prototype.protocol = function () {\n        return this._delegate.protocol();\n    };\n    DelegateConnection.prototype.connect = function (userAgent, boltAgent, authToken, waitReAuth) {\n        return this._delegate.connect(userAgent, boltAgent, authToken, waitReAuth);\n    };\n    DelegateConnection.prototype.write = function (message, observer, flush) {\n        return this._delegate.write(message, observer, flush);\n    };\n    DelegateConnection.prototype.resetAndFlush = function () {\n        return this._delegate.resetAndFlush();\n    };\n    DelegateConnection.prototype.hasOngoingObservableRequests = function () {\n        return this._delegate.hasOngoingObservableRequests();\n    };\n    DelegateConnection.prototype.close = function () {\n        return this._delegate.close();\n    };\n    DelegateConnection.prototype.release = function () {\n        if (this._originalErrorHandler) {\n            this._delegate._errorHandler = this._originalErrorHandler;\n        }\n        return this._delegate.release();\n    };\n    return DelegateConnection;\n}(connection_1.default));\nexports[\"default\"] = DelegateConnection;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection/connection-delegate.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection/connection-error-handler.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/connection/connection-error-handler.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE, SESSION_EXPIRED = neo4j_driver_core_1.error.SESSION_EXPIRED;\nvar ConnectionErrorHandler = /** @class */ (function () {\n    function ConnectionErrorHandler(errorCode, handleUnavailability, handleWriteFailure, handleSecurityError) {\n        this._errorCode = errorCode;\n        this._handleUnavailability = handleUnavailability || noOpHandler;\n        this._handleWriteFailure = handleWriteFailure || noOpHandler;\n        this._handleSecurityError = handleSecurityError || noOpHandler;\n    }\n    ConnectionErrorHandler.create = function (_a) {\n        var errorCode = _a.errorCode, handleUnavailability = _a.handleUnavailability, handleWriteFailure = _a.handleWriteFailure, handleSecurityError = _a.handleSecurityError;\n        return new ConnectionErrorHandler(errorCode, handleUnavailability, handleWriteFailure, handleSecurityError);\n    };\n    /**\n     * Error code to use for network errors.\n     * @return {string} the error code.\n     */\n    ConnectionErrorHandler.prototype.errorCode = function () {\n        return this._errorCode;\n    };\n    /**\n     * Handle and transform the error.\n     * @param {Neo4jError} error the original error.\n     * @param {ServerAddress} address the address of the connection where the error happened.\n     * @return {Neo4jError} new error that should be propagated to the user.\n     */\n    ConnectionErrorHandler.prototype.handleAndTransformError = function (error, address, connection) {\n        if (isSecurityError(error)) {\n            return this._handleSecurityError(error, address, connection);\n        }\n        if (isAvailabilityError(error)) {\n            return this._handleUnavailability(error, address, connection);\n        }\n        if (isFailureToWrite(error)) {\n            return this._handleWriteFailure(error, address, connection);\n        }\n        return error;\n    };\n    return ConnectionErrorHandler;\n}());\nexports[\"default\"] = ConnectionErrorHandler;\nfunction isSecurityError(error) {\n    return error != null &&\n        error.code != null &&\n        error.code.startsWith('Neo.ClientError.Security.');\n}\nfunction isAvailabilityError(error) {\n    if (error) {\n        return (error.code === SESSION_EXPIRED ||\n            error.code === SERVICE_UNAVAILABLE ||\n            error.code === 'Neo.TransientError.General.DatabaseUnavailable');\n    }\n    return false;\n}\nfunction isFailureToWrite(error) {\n    if (error) {\n        return (error.code === 'Neo.ClientError.Cluster.NotALeader' ||\n            error.code === 'Neo.ClientError.General.ForbiddenOnReadOnlyDatabase');\n    }\n    return false;\n}\nfunction noOpHandler(error) {\n    return error;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvY29ubmVjdGlvbi9jb25uZWN0aW9uLWVycm9yLWhhbmRsZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEIsbUJBQU8sQ0FBQyw4RUFBbUI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixRQUFRO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsWUFBWTtBQUMzQixlQUFlLGVBQWU7QUFDOUIsZ0JBQWdCLFlBQVk7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9jb25uZWN0aW9uL2Nvbm5lY3Rpb24tZXJyb3ItaGFuZGxlci5qcz9lOWNlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBuZW80al9kcml2ZXJfY29yZV8xID0gcmVxdWlyZShcIm5lbzRqLWRyaXZlci1jb3JlXCIpO1xudmFyIFNFUlZJQ0VfVU5BVkFJTEFCTEUgPSBuZW80al9kcml2ZXJfY29yZV8xLmVycm9yLlNFUlZJQ0VfVU5BVkFJTEFCTEUsIFNFU1NJT05fRVhQSVJFRCA9IG5lbzRqX2RyaXZlcl9jb3JlXzEuZXJyb3IuU0VTU0lPTl9FWFBJUkVEO1xudmFyIENvbm5lY3Rpb25FcnJvckhhbmRsZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ29ubmVjdGlvbkVycm9ySGFuZGxlcihlcnJvckNvZGUsIGhhbmRsZVVuYXZhaWxhYmlsaXR5LCBoYW5kbGVXcml0ZUZhaWx1cmUsIGhhbmRsZVNlY3VyaXR5RXJyb3IpIHtcbiAgICAgICAgdGhpcy5fZXJyb3JDb2RlID0gZXJyb3JDb2RlO1xuICAgICAgICB0aGlzLl9oYW5kbGVVbmF2YWlsYWJpbGl0eSA9IGhhbmRsZVVuYXZhaWxhYmlsaXR5IHx8IG5vT3BIYW5kbGVyO1xuICAgICAgICB0aGlzLl9oYW5kbGVXcml0ZUZhaWx1cmUgPSBoYW5kbGVXcml0ZUZhaWx1cmUgfHwgbm9PcEhhbmRsZXI7XG4gICAgICAgIHRoaXMuX2hhbmRsZVNlY3VyaXR5RXJyb3IgPSBoYW5kbGVTZWN1cml0eUVycm9yIHx8IG5vT3BIYW5kbGVyO1xuICAgIH1cbiAgICBDb25uZWN0aW9uRXJyb3JIYW5kbGVyLmNyZWF0ZSA9IGZ1bmN0aW9uIChfYSkge1xuICAgICAgICB2YXIgZXJyb3JDb2RlID0gX2EuZXJyb3JDb2RlLCBoYW5kbGVVbmF2YWlsYWJpbGl0eSA9IF9hLmhhbmRsZVVuYXZhaWxhYmlsaXR5LCBoYW5kbGVXcml0ZUZhaWx1cmUgPSBfYS5oYW5kbGVXcml0ZUZhaWx1cmUsIGhhbmRsZVNlY3VyaXR5RXJyb3IgPSBfYS5oYW5kbGVTZWN1cml0eUVycm9yO1xuICAgICAgICByZXR1cm4gbmV3IENvbm5lY3Rpb25FcnJvckhhbmRsZXIoZXJyb3JDb2RlLCBoYW5kbGVVbmF2YWlsYWJpbGl0eSwgaGFuZGxlV3JpdGVGYWlsdXJlLCBoYW5kbGVTZWN1cml0eUVycm9yKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEVycm9yIGNvZGUgdG8gdXNlIGZvciBuZXR3b3JrIGVycm9ycy5cbiAgICAgKiBAcmV0dXJuIHtzdHJpbmd9IHRoZSBlcnJvciBjb2RlLlxuICAgICAqL1xuICAgIENvbm5lY3Rpb25FcnJvckhhbmRsZXIucHJvdG90eXBlLmVycm9yQ29kZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Vycm9yQ29kZTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEhhbmRsZSBhbmQgdHJhbnNmb3JtIHRoZSBlcnJvci5cbiAgICAgKiBAcGFyYW0ge05lbzRqRXJyb3J9IGVycm9yIHRoZSBvcmlnaW5hbCBlcnJvci5cbiAgICAgKiBAcGFyYW0ge1NlcnZlckFkZHJlc3N9IGFkZHJlc3MgdGhlIGFkZHJlc3Mgb2YgdGhlIGNvbm5lY3Rpb24gd2hlcmUgdGhlIGVycm9yIGhhcHBlbmVkLlxuICAgICAqIEByZXR1cm4ge05lbzRqRXJyb3J9IG5ldyBlcnJvciB0aGF0IHNob3VsZCBiZSBwcm9wYWdhdGVkIHRvIHRoZSB1c2VyLlxuICAgICAqL1xuICAgIENvbm5lY3Rpb25FcnJvckhhbmRsZXIucHJvdG90eXBlLmhhbmRsZUFuZFRyYW5zZm9ybUVycm9yID0gZnVuY3Rpb24gKGVycm9yLCBhZGRyZXNzLCBjb25uZWN0aW9uKSB7XG4gICAgICAgIGlmIChpc1NlY3VyaXR5RXJyb3IoZXJyb3IpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5faGFuZGxlU2VjdXJpdHlFcnJvcihlcnJvciwgYWRkcmVzcywgY29ubmVjdGlvbik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzQXZhaWxhYmlsaXR5RXJyb3IoZXJyb3IpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5faGFuZGxlVW5hdmFpbGFiaWxpdHkoZXJyb3IsIGFkZHJlc3MsIGNvbm5lY3Rpb24pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0ZhaWx1cmVUb1dyaXRlKGVycm9yKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2hhbmRsZVdyaXRlRmFpbHVyZShlcnJvciwgYWRkcmVzcywgY29ubmVjdGlvbik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVycm9yO1xuICAgIH07XG4gICAgcmV0dXJuIENvbm5lY3Rpb25FcnJvckhhbmRsZXI7XG59KCkpO1xuZXhwb3J0cy5kZWZhdWx0ID0gQ29ubmVjdGlvbkVycm9ySGFuZGxlcjtcbmZ1bmN0aW9uIGlzU2VjdXJpdHlFcnJvcihlcnJvcikge1xuICAgIHJldHVybiBlcnJvciAhPSBudWxsICYmXG4gICAgICAgIGVycm9yLmNvZGUgIT0gbnVsbCAmJlxuICAgICAgICBlcnJvci5jb2RlLnN0YXJ0c1dpdGgoJ05lby5DbGllbnRFcnJvci5TZWN1cml0eS4nKTtcbn1cbmZ1bmN0aW9uIGlzQXZhaWxhYmlsaXR5RXJyb3IoZXJyb3IpIHtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIChlcnJvci5jb2RlID09PSBTRVNTSU9OX0VYUElSRUQgfHxcbiAgICAgICAgICAgIGVycm9yLmNvZGUgPT09IFNFUlZJQ0VfVU5BVkFJTEFCTEUgfHxcbiAgICAgICAgICAgIGVycm9yLmNvZGUgPT09ICdOZW8uVHJhbnNpZW50RXJyb3IuR2VuZXJhbC5EYXRhYmFzZVVuYXZhaWxhYmxlJyk7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbmZ1bmN0aW9uIGlzRmFpbHVyZVRvV3JpdGUoZXJyb3IpIHtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIChlcnJvci5jb2RlID09PSAnTmVvLkNsaWVudEVycm9yLkNsdXN0ZXIuTm90QUxlYWRlcicgfHxcbiAgICAgICAgICAgIGVycm9yLmNvZGUgPT09ICdOZW8uQ2xpZW50RXJyb3IuR2VuZXJhbC5Gb3JiaWRkZW5PblJlYWRPbmx5RGF0YWJhc2UnKTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuZnVuY3Rpb24gbm9PcEhhbmRsZXIoZXJyb3IpIHtcbiAgICByZXR1cm4gZXJyb3I7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection/connection-error-handler.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection/connection.js":
/*!********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/connection/connection.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line no-unused-vars\nvar bolt_1 = __webpack_require__(/*! ../bolt */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/index.js\");\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar Connection = /** @class */ (function (_super) {\n    __extends(Connection, _super);\n    /**\n     * @param {ConnectionErrorHandler} errorHandler the error handler\n     */\n    function Connection(errorHandler) {\n        var _this = _super.call(this) || this;\n        _this._errorHandler = errorHandler;\n        return _this;\n    }\n    Object.defineProperty(Connection.prototype, \"id\", {\n        get: function () {\n            throw new Error('not implemented');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Connection.prototype, \"databaseId\", {\n        get: function () {\n            throw new Error('not implemented');\n        },\n        set: function (value) {\n            throw new Error('not implemented');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Connection.prototype, \"authToken\", {\n        get: function () {\n            throw new Error('not implemented');\n        },\n        set: function (value) {\n            throw new Error('not implemented');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Connection.prototype, \"supportsReAuth\", {\n        get: function () {\n            throw new Error('not implemented');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Connection.prototype, \"creationTimestamp\", {\n        get: function () {\n            throw new Error('not implemented');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Connection.prototype, \"idleTimestamp\", {\n        get: function () {\n            throw new Error('not implemented');\n        },\n        set: function (value) {\n            throw new Error('not implemented');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * @returns {BoltProtocol} the underlying bolt protocol assigned to this connection\n     */\n    Connection.prototype.protocol = function () {\n        throw new Error('not implemented');\n    };\n    Object.defineProperty(Connection.prototype, \"address\", {\n        /**\n         * @returns {ServerAddress} the server address this connection is opened against\n         */\n        get: function () {\n            throw new Error('not implemented');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Connection.prototype, \"version\", {\n        /**\n         * @returns {ServerVersion} the version of the server this connection is connected to\n         */\n        get: function () {\n            throw new Error('not implemented');\n        },\n        set: function (value) {\n            throw new Error('not implemented');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Connection.prototype, \"server\", {\n        get: function () {\n            throw new Error('not implemented');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Connect to the target address, negotiate Bolt protocol and send initialization message.\n     * @param {string} userAgent the user agent for this driver.\n     * @param {Object} boltAgent the bolt agent for this driver.\n     * @param {Object} authToken the object containing auth information.\n     * @param {boolean} shouldWaitReAuth whether ot not the connection will wait for re-authentication to happen\n     * @return {Promise<Connection>} promise resolved with the current connection if connection is successful. Rejected promise otherwise.\n     */\n    Connection.prototype.connect = function (userAgent, boltAgent, authToken, shouldWaitReAuth) {\n        throw new Error('not implemented');\n    };\n    /**\n     * Write a message to the network channel.\n     * @param {RequestMessage} message the message to write.\n     * @param {ResultStreamObserver} observer the response observer.\n     * @param {boolean} flush `true` if flush should happen after the message is written to the buffer.\n     */\n    Connection.prototype.write = function (message, observer, flush) {\n        throw new Error('not implemented');\n    };\n    /**\n     * Call close on the channel.\n     * @returns {Promise<void>} - A promise that will be resolved when the connection is closed.\n     *\n     */\n    Connection.prototype.close = function () {\n        throw new Error('not implemented');\n    };\n    /**\n     *\n     * @param error\n     * @param address\n     * @returns {Neo4jError|*}\n     */\n    Connection.prototype.handleAndTransformError = function (error, address) {\n        if (this._errorHandler) {\n            return this._errorHandler.handleAndTransformError(error, address, this);\n        }\n        return error;\n    };\n    return Connection;\n}(neo4j_driver_core_1.Connection));\nexports[\"default\"] = Connection;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection/connection.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/connection/index.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createChannelConnection = exports.ConnectionErrorHandler = exports.DelegateConnection = exports.ChannelConnection = exports.Connection = void 0;\nvar connection_1 = __importDefault(__webpack_require__(/*! ./connection */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection/connection.js\"));\nexports.Connection = connection_1.default;\nvar connection_channel_1 = __importStar(__webpack_require__(/*! ./connection-channel */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection/connection-channel.js\"));\nexports.ChannelConnection = connection_channel_1.default;\nObject.defineProperty(exports, \"createChannelConnection\", ({ enumerable: true, get: function () { return connection_channel_1.createChannelConnection; } }));\nvar connection_delegate_1 = __importDefault(__webpack_require__(/*! ./connection-delegate */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection/connection-delegate.js\"));\nexports.DelegateConnection = connection_delegate_1.default;\nvar connection_error_handler_1 = __importDefault(__webpack_require__(/*! ./connection-error-handler */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection/connection-error-handler.js\"));\nexports.ConnectionErrorHandler = connection_error_handler_1.default;\nexports[\"default\"] = connection_1.default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvY29ubmVjdGlvbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwwQ0FBMEMsNEJBQTRCO0FBQ3RFLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELCtCQUErQixHQUFHLDhCQUE4QixHQUFHLDBCQUEwQixHQUFHLHlCQUF5QixHQUFHLGtCQUFrQjtBQUM5SSxtQ0FBbUMsbUJBQU8sQ0FBQyxvR0FBYztBQUN6RCxrQkFBa0I7QUFDbEIsd0NBQXdDLG1CQUFPLENBQUMsb0hBQXNCO0FBQ3RFLHlCQUF5QjtBQUN6QiwyREFBMEQsRUFBRSxxQ0FBcUMsd0RBQXdELEVBQUM7QUFDMUosNENBQTRDLG1CQUFPLENBQUMsc0hBQXVCO0FBQzNFLDBCQUEwQjtBQUMxQixpREFBaUQsbUJBQU8sQ0FBQyxnSUFBNEI7QUFDckYsOEJBQThCO0FBQzlCLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmVvNGotbmV4dC1hcHAvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvY29ubmVjdGlvbi9pbmRleC5qcz84ZTY4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVDaGFubmVsQ29ubmVjdGlvbiA9IGV4cG9ydHMuQ29ubmVjdGlvbkVycm9ySGFuZGxlciA9IGV4cG9ydHMuRGVsZWdhdGVDb25uZWN0aW9uID0gZXhwb3J0cy5DaGFubmVsQ29ubmVjdGlvbiA9IGV4cG9ydHMuQ29ubmVjdGlvbiA9IHZvaWQgMDtcbnZhciBjb25uZWN0aW9uXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vY29ubmVjdGlvblwiKSk7XG5leHBvcnRzLkNvbm5lY3Rpb24gPSBjb25uZWN0aW9uXzEuZGVmYXVsdDtcbnZhciBjb25uZWN0aW9uX2NoYW5uZWxfMSA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9jb25uZWN0aW9uLWNoYW5uZWxcIikpO1xuZXhwb3J0cy5DaGFubmVsQ29ubmVjdGlvbiA9IGNvbm5lY3Rpb25fY2hhbm5lbF8xLmRlZmF1bHQ7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjcmVhdGVDaGFubmVsQ29ubmVjdGlvblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY29ubmVjdGlvbl9jaGFubmVsXzEuY3JlYXRlQ2hhbm5lbENvbm5lY3Rpb247IH0gfSk7XG52YXIgY29ubmVjdGlvbl9kZWxlZ2F0ZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2Nvbm5lY3Rpb24tZGVsZWdhdGVcIikpO1xuZXhwb3J0cy5EZWxlZ2F0ZUNvbm5lY3Rpb24gPSBjb25uZWN0aW9uX2RlbGVnYXRlXzEuZGVmYXVsdDtcbnZhciBjb25uZWN0aW9uX2Vycm9yX2hhbmRsZXJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9jb25uZWN0aW9uLWVycm9yLWhhbmRsZXJcIikpO1xuZXhwb3J0cy5Db25uZWN0aW9uRXJyb3JIYW5kbGVyID0gY29ubmVjdGlvbl9lcnJvcl9oYW5kbGVyXzEuZGVmYXVsdDtcbmV4cG9ydHMuZGVmYXVsdCA9IGNvbm5lY3Rpb25fMS5kZWZhdWx0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.pool = exports.packstream = exports.channel = exports.buf = exports.bolt = exports.loadBalancing = void 0;\nexports.loadBalancing = __importStar(__webpack_require__(/*! ./load-balancing */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/load-balancing/index.js\"));\nexports.bolt = __importStar(__webpack_require__(/*! ./bolt */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/bolt/index.js\"));\nexports.buf = __importStar(__webpack_require__(/*! ./buf */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/buf/index.js\"));\nexports.channel = __importStar(__webpack_require__(/*! ./channel */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/index.js\"));\nexports.packstream = __importStar(__webpack_require__(/*! ./packstream */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/packstream/index.js\"));\nexports.pool = __importStar(__webpack_require__(/*! ./pool */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/pool/index.js\"));\n__exportStar(__webpack_require__(/*! ./connection-provider */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/connection-provider/index.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsWUFBWSxHQUFHLGtCQUFrQixHQUFHLGVBQWUsR0FBRyxXQUFXLEdBQUcsWUFBWSxHQUFHLHFCQUFxQjtBQUN4RyxxQkFBcUIsZ0JBQWdCLG1CQUFPLENBQUMsdUdBQWtCO0FBQy9ELFlBQVksZ0JBQWdCLG1CQUFPLENBQUMsbUZBQVE7QUFDNUMsV0FBVyxnQkFBZ0IsbUJBQU8sQ0FBQyxpRkFBTztBQUMxQyxlQUFlLGdCQUFnQixtQkFBTyxDQUFDLHlGQUFXO0FBQ2xELGtCQUFrQixnQkFBZ0IsbUJBQU8sQ0FBQywrRkFBYztBQUN4RCxZQUFZLGdCQUFnQixtQkFBTyxDQUFDLG1GQUFRO0FBQzVDLGFBQWEsbUJBQU8sQ0FBQyxpSEFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9pbmRleC5qcz85Y2M0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucG9vbCA9IGV4cG9ydHMucGFja3N0cmVhbSA9IGV4cG9ydHMuY2hhbm5lbCA9IGV4cG9ydHMuYnVmID0gZXhwb3J0cy5ib2x0ID0gZXhwb3J0cy5sb2FkQmFsYW5jaW5nID0gdm9pZCAwO1xuZXhwb3J0cy5sb2FkQmFsYW5jaW5nID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL2xvYWQtYmFsYW5jaW5nXCIpKTtcbmV4cG9ydHMuYm9sdCA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9ib2x0XCIpKTtcbmV4cG9ydHMuYnVmID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL2J1ZlwiKSk7XG5leHBvcnRzLmNoYW5uZWwgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vY2hhbm5lbFwiKSk7XG5leHBvcnRzLnBhY2tzdHJlYW0gPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vcGFja3N0cmVhbVwiKSk7XG5leHBvcnRzLnBvb2wgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vcG9vbFwiKSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29ubmVjdGlvbi1wcm92aWRlclwiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/lang/functional.js":
/*!**************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/lang/functional.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.reuseOngoingRequest = exports.identity = void 0;\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\n/**\n * Identity function.\n *\n * Identity functions are function which returns the input as output.\n *\n * @param {any} x\n * @returns {any} the x\n */\nfunction identity(x) {\n    return x;\n}\nexports.identity = identity;\n/**\n * Makes the function able to share ongoing requests\n *\n * @param {function(...args): Promise} func The function to be decorated\n * @param {any} thisArg The `this` which should be used in the function call\n * @return {function(...args): Promise} The decorated function\n */\nfunction reuseOngoingRequest(func, thisArg) {\n    if (thisArg === void 0) { thisArg = null; }\n    var ongoingRequests = new Map();\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var key = neo4j_driver_core_1.json.stringify(args);\n        if (ongoingRequests.has(key)) {\n            return ongoingRequests.get(key);\n        }\n        var promise = func.apply(thisArg, args);\n        ongoingRequests.set(key, promise);\n        return promise.finally(function () {\n            ongoingRequests.delete(key);\n        });\n    };\n}\nexports.reuseOngoingRequest = reuseOngoingRequest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvbGFuZy9mdW5jdGlvbmFsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcsZ0JBQWdCO0FBQzlDLDBCQUEwQixtQkFBTyxDQUFDLDhFQUFtQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLGFBQWEsS0FBSztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQSxXQUFXLDRCQUE0QjtBQUN2QyxXQUFXLEtBQUs7QUFDaEIsWUFBWSw0QkFBNEI7QUFDeEM7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsdUJBQXVCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSwyQkFBMkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9sYW5nL2Z1bmN0aW9uYWwuanM/NjQyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qKlxuICogQ29weXJpZ2h0IChjKSBcIk5lbzRqXCJcbiAqIE5lbzRqIFN3ZWRlbiBBQiBbaHR0cHM6Ly9uZW80ai5jb21dXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnJldXNlT25nb2luZ1JlcXVlc3QgPSBleHBvcnRzLmlkZW50aXR5ID0gdm9pZCAwO1xudmFyIG5lbzRqX2RyaXZlcl9jb3JlXzEgPSByZXF1aXJlKFwibmVvNGotZHJpdmVyLWNvcmVcIik7XG4vKipcbiAqIElkZW50aXR5IGZ1bmN0aW9uLlxuICpcbiAqIElkZW50aXR5IGZ1bmN0aW9ucyBhcmUgZnVuY3Rpb24gd2hpY2ggcmV0dXJucyB0aGUgaW5wdXQgYXMgb3V0cHV0LlxuICpcbiAqIEBwYXJhbSB7YW55fSB4XG4gKiBAcmV0dXJucyB7YW55fSB0aGUgeFxuICovXG5mdW5jdGlvbiBpZGVudGl0eSh4KSB7XG4gICAgcmV0dXJuIHg7XG59XG5leHBvcnRzLmlkZW50aXR5ID0gaWRlbnRpdHk7XG4vKipcbiAqIE1ha2VzIHRoZSBmdW5jdGlvbiBhYmxlIHRvIHNoYXJlIG9uZ29pbmcgcmVxdWVzdHNcbiAqXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKC4uLmFyZ3MpOiBQcm9taXNlfSBmdW5jIFRoZSBmdW5jdGlvbiB0byBiZSBkZWNvcmF0ZWRcbiAqIEBwYXJhbSB7YW55fSB0aGlzQXJnIFRoZSBgdGhpc2Agd2hpY2ggc2hvdWxkIGJlIHVzZWQgaW4gdGhlIGZ1bmN0aW9uIGNhbGxcbiAqIEByZXR1cm4ge2Z1bmN0aW9uKC4uLmFyZ3MpOiBQcm9taXNlfSBUaGUgZGVjb3JhdGVkIGZ1bmN0aW9uXG4gKi9cbmZ1bmN0aW9uIHJldXNlT25nb2luZ1JlcXVlc3QoZnVuYywgdGhpc0FyZykge1xuICAgIGlmICh0aGlzQXJnID09PSB2b2lkIDApIHsgdGhpc0FyZyA9IG51bGw7IH1cbiAgICB2YXIgb25nb2luZ1JlcXVlc3RzID0gbmV3IE1hcCgpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhcmdzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBhcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGtleSA9IG5lbzRqX2RyaXZlcl9jb3JlXzEuanNvbi5zdHJpbmdpZnkoYXJncyk7XG4gICAgICAgIGlmIChvbmdvaW5nUmVxdWVzdHMuaGFzKGtleSkpIHtcbiAgICAgICAgICAgIHJldHVybiBvbmdvaW5nUmVxdWVzdHMuZ2V0KGtleSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHByb21pc2UgPSBmdW5jLmFwcGx5KHRoaXNBcmcsIGFyZ3MpO1xuICAgICAgICBvbmdvaW5nUmVxdWVzdHMuc2V0KGtleSwgcHJvbWlzZSk7XG4gICAgICAgIHJldHVybiBwcm9taXNlLmZpbmFsbHkoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgb25nb2luZ1JlcXVlc3RzLmRlbGV0ZShrZXkpO1xuICAgICAgICB9KTtcbiAgICB9O1xufVxuZXhwb3J0cy5yZXVzZU9uZ29pbmdSZXF1ZXN0ID0gcmV1c2VPbmdvaW5nUmVxdWVzdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/lang/functional.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/lang/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/lang/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.object = exports.functional = void 0;\nexports.functional = __importStar(__webpack_require__(/*! ./functional */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/lang/functional.js\"));\nexports.object = __importStar(__webpack_require__(/*! ./object */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/lang/object.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvbGFuZy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwwQ0FBMEMsNEJBQTRCO0FBQ3RFLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLEdBQUcsa0JBQWtCO0FBQ25DLGtCQUFrQixnQkFBZ0IsbUJBQU8sQ0FBQyw4RkFBYztBQUN4RCxjQUFjLGdCQUFnQixtQkFBTyxDQUFDLHNGQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmVvNGotbmV4dC1hcHAvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvbGFuZy9pbmRleC5qcz8yOGU4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5vYmplY3QgPSBleHBvcnRzLmZ1bmN0aW9uYWwgPSB2b2lkIDA7XG5leHBvcnRzLmZ1bmN0aW9uYWwgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vZnVuY3Rpb25hbFwiKSk7XG5leHBvcnRzLm9iamVjdCA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9vYmplY3RcIikpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/lang/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/lang/object.js":
/*!**********************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/lang/object.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.equals = void 0;\nfunction equals(a, b) {\n    var e_1, _a;\n    if (a === b) {\n        return true;\n    }\n    if (a === null || b === null) {\n        return false;\n    }\n    if (typeof a === 'object' && typeof b === 'object') {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        if (keysA.length !== keysB.length) {\n            return false;\n        }\n        try {\n            for (var keysA_1 = __values(keysA), keysA_1_1 = keysA_1.next(); !keysA_1_1.done; keysA_1_1 = keysA_1.next()) {\n                var key = keysA_1_1.value;\n                if (a[key] !== b[key]) {\n                    return false;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (keysA_1_1 && !keysA_1_1.done && (_a = keysA_1.return)) _a.call(keysA_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return true;\n    }\n    return false;\n}\nexports.equals = equals;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvbGFuZy9vYmplY3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEVBQTRFLGlCQUFpQjtBQUM3RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyIsInNvdXJjZXMiOlsid2VicGFjazovL25lbzRqLW5leHQtYXBwLy4vbm9kZV9tb2R1bGVzL25lbzRqLWRyaXZlci1ib2x0LWNvbm5lY3Rpb24vbGliL2xhbmcvb2JqZWN0LmpzPzVlOGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIENvcHlyaWdodCAoYykgXCJOZW80alwiXG4gKiBOZW80aiBTd2VkZW4gQUIgW2h0dHBzOi8vbmVvNGouY29tXVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fdmFsdWVzID0gKHRoaXMgJiYgdGhpcy5fX3ZhbHVlcykgfHwgZnVuY3Rpb24obykge1xuICAgIHZhciBzID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIFN5bWJvbC5pdGVyYXRvciwgbSA9IHMgJiYgb1tzXSwgaSA9IDA7XG4gICAgaWYgKG0pIHJldHVybiBtLmNhbGwobyk7XG4gICAgaWYgKG8gJiYgdHlwZW9mIG8ubGVuZ3RoID09PSBcIm51bWJlclwiKSByZXR1cm4ge1xuICAgICAgICBuZXh0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAobyAmJiBpID49IG8ubGVuZ3RoKSBvID0gdm9pZCAwO1xuICAgICAgICAgICAgcmV0dXJuIHsgdmFsdWU6IG8gJiYgb1tpKytdLCBkb25lOiAhbyB9O1xuICAgICAgICB9XG4gICAgfTtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKHMgPyBcIk9iamVjdCBpcyBub3QgaXRlcmFibGUuXCIgOiBcIlN5bWJvbC5pdGVyYXRvciBpcyBub3QgZGVmaW5lZC5cIik7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5lcXVhbHMgPSB2b2lkIDA7XG5mdW5jdGlvbiBlcXVhbHMoYSwgYikge1xuICAgIHZhciBlXzEsIF9hO1xuICAgIGlmIChhID09PSBiKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAoYSA9PT0gbnVsbCB8fCBiID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBhID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgYiA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgdmFyIGtleXNBID0gT2JqZWN0LmtleXMoYSk7XG4gICAgICAgIHZhciBrZXlzQiA9IE9iamVjdC5rZXlzKGIpO1xuICAgICAgICBpZiAoa2V5c0EubGVuZ3RoICE9PSBrZXlzQi5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgZm9yICh2YXIga2V5c0FfMSA9IF9fdmFsdWVzKGtleXNBKSwga2V5c0FfMV8xID0ga2V5c0FfMS5uZXh0KCk7ICFrZXlzQV8xXzEuZG9uZTsga2V5c0FfMV8xID0ga2V5c0FfMS5uZXh0KCkpIHtcbiAgICAgICAgICAgICAgICB2YXIga2V5ID0ga2V5c0FfMV8xLnZhbHVlO1xuICAgICAgICAgICAgICAgIGlmIChhW2tleV0gIT09IGJba2V5XSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlXzFfMSkgeyBlXzEgPSB7IGVycm9yOiBlXzFfMSB9OyB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpZiAoa2V5c0FfMV8xICYmICFrZXlzQV8xXzEuZG9uZSAmJiAoX2EgPSBrZXlzQV8xLnJldHVybikpIF9hLmNhbGwoa2V5c0FfMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmaW5hbGx5IHsgaWYgKGVfMSkgdGhyb3cgZV8xLmVycm9yOyB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbmV4cG9ydHMuZXF1YWxzID0gZXF1YWxzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/lang/object.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/load-balancing/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/load-balancing/index.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LeastConnectedLoadBalancingStrategy = exports.LoadBalancingStrategy = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar load_balancing_strategy_1 = __importDefault(__webpack_require__(/*! ./load-balancing-strategy */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/load-balancing/load-balancing-strategy.js\"));\nexports.LoadBalancingStrategy = load_balancing_strategy_1.default;\nvar least_connected_load_balancing_strategy_1 = __importDefault(__webpack_require__(/*! ./least-connected-load-balancing-strategy */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/load-balancing/least-connected-load-balancing-strategy.js\"));\nexports.LeastConnectedLoadBalancingStrategy = least_connected_load_balancing_strategy_1.default;\nexports[\"default\"] = least_connected_load_balancing_strategy_1.default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvbG9hZC1iYWxhbmNpbmcvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQ0FBMkMsR0FBRyw2QkFBNkI7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsbUJBQU8sQ0FBQyxrSUFBMkI7QUFDbkYsNkJBQTZCO0FBQzdCLGdFQUFnRSxtQkFBTyxDQUFDLGtLQUEyQztBQUNuSCwyQ0FBMkM7QUFDM0Msa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9sb2FkLWJhbGFuY2luZy9pbmRleC5qcz83OWUzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5MZWFzdENvbm5lY3RlZExvYWRCYWxhbmNpbmdTdHJhdGVneSA9IGV4cG9ydHMuTG9hZEJhbGFuY2luZ1N0cmF0ZWd5ID0gdm9pZCAwO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBsb2FkX2JhbGFuY2luZ19zdHJhdGVneV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2xvYWQtYmFsYW5jaW5nLXN0cmF0ZWd5XCIpKTtcbmV4cG9ydHMuTG9hZEJhbGFuY2luZ1N0cmF0ZWd5ID0gbG9hZF9iYWxhbmNpbmdfc3RyYXRlZ3lfMS5kZWZhdWx0O1xudmFyIGxlYXN0X2Nvbm5lY3RlZF9sb2FkX2JhbGFuY2luZ19zdHJhdGVneV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2xlYXN0LWNvbm5lY3RlZC1sb2FkLWJhbGFuY2luZy1zdHJhdGVneVwiKSk7XG5leHBvcnRzLkxlYXN0Q29ubmVjdGVkTG9hZEJhbGFuY2luZ1N0cmF0ZWd5ID0gbGVhc3RfY29ubmVjdGVkX2xvYWRfYmFsYW5jaW5nX3N0cmF0ZWd5XzEuZGVmYXVsdDtcbmV4cG9ydHMuZGVmYXVsdCA9IGxlYXN0X2Nvbm5lY3RlZF9sb2FkX2JhbGFuY2luZ19zdHJhdGVneV8xLmRlZmF1bHQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/load-balancing/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/load-balancing/least-connected-load-balancing-strategy.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/load-balancing/least-connected-load-balancing-strategy.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar round_robin_array_index_1 = __importDefault(__webpack_require__(/*! ./round-robin-array-index */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/load-balancing/round-robin-array-index.js\"));\nvar load_balancing_strategy_1 = __importDefault(__webpack_require__(/*! ./load-balancing-strategy */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/load-balancing/load-balancing-strategy.js\"));\nvar LeastConnectedLoadBalancingStrategy = /** @class */ (function (_super) {\n    __extends(LeastConnectedLoadBalancingStrategy, _super);\n    /**\n     * @constructor\n     * @param {Pool} connectionPool the connection pool of this driver.\n     */\n    function LeastConnectedLoadBalancingStrategy(connectionPool) {\n        var _this = _super.call(this) || this;\n        _this._readersIndex = new round_robin_array_index_1.default();\n        _this._writersIndex = new round_robin_array_index_1.default();\n        _this._connectionPool = connectionPool;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    LeastConnectedLoadBalancingStrategy.prototype.selectReader = function (knownReaders) {\n        return this._select(knownReaders, this._readersIndex);\n    };\n    /**\n     * @inheritDoc\n     */\n    LeastConnectedLoadBalancingStrategy.prototype.selectWriter = function (knownWriters) {\n        return this._select(knownWriters, this._writersIndex);\n    };\n    LeastConnectedLoadBalancingStrategy.prototype._select = function (addresses, roundRobinIndex) {\n        var length = addresses.length;\n        if (length === 0) {\n            return null;\n        }\n        // choose start index for iteration in round-robin fashion\n        var startIndex = roundRobinIndex.next(length);\n        var index = startIndex;\n        var leastConnectedAddress = null;\n        var leastActiveConnections = Number.MAX_SAFE_INTEGER;\n        // iterate over the array to find least connected address\n        do {\n            var address = addresses[index];\n            var activeConnections = this._connectionPool.activeResourceCount(address);\n            if (activeConnections < leastActiveConnections) {\n                leastConnectedAddress = address;\n                leastActiveConnections = activeConnections;\n            }\n            // loop over to the start of the array when end is reached\n            if (index === length - 1) {\n                index = 0;\n            }\n            else {\n                index++;\n            }\n        } while (index !== startIndex);\n        return leastConnectedAddress;\n    };\n    return LeastConnectedLoadBalancingStrategy;\n}(load_balancing_strategy_1.default));\nexports[\"default\"] = LeastConnectedLoadBalancingStrategy;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvbG9hZC1iYWxhbmNpbmcvbGVhc3QtY29ubmVjdGVkLWxvYWQtYmFsYW5jaW5nLXN0cmF0ZWd5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnQkFBZ0Isc0NBQXNDLGtCQUFrQjtBQUN2Riw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsbUJBQU8sQ0FBQyxrSUFBMkI7QUFDbkYsZ0RBQWdELG1CQUFPLENBQUMsa0lBQTJCO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxNQUFNO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9sb2FkLWJhbGFuY2luZy9sZWFzdC1jb25uZWN0ZWQtbG9hZC1iYWxhbmNpbmctc3RyYXRlZ3kuanM/ZTlkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChiLCBwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgICAgIHJldHVybiBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgIH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYiAhPT0gXCJmdW5jdGlvblwiICYmIGIgIT09IG51bGwpXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIiArIFN0cmluZyhiKSArIFwiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKipcbiAqIENvcHlyaWdodCAoYykgXCJOZW80alwiXG4gKiBOZW80aiBTd2VkZW4gQUIgW2h0dHBzOi8vbmVvNGouY29tXVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIHJvdW5kX3JvYmluX2FycmF5X2luZGV4XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vcm91bmQtcm9iaW4tYXJyYXktaW5kZXhcIikpO1xudmFyIGxvYWRfYmFsYW5jaW5nX3N0cmF0ZWd5XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vbG9hZC1iYWxhbmNpbmctc3RyYXRlZ3lcIikpO1xudmFyIExlYXN0Q29ubmVjdGVkTG9hZEJhbGFuY2luZ1N0cmF0ZWd5ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhMZWFzdENvbm5lY3RlZExvYWRCYWxhbmNpbmdTdHJhdGVneSwgX3N1cGVyKTtcbiAgICAvKipcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBAcGFyYW0ge1Bvb2x9IGNvbm5lY3Rpb25Qb29sIHRoZSBjb25uZWN0aW9uIHBvb2wgb2YgdGhpcyBkcml2ZXIuXG4gICAgICovXG4gICAgZnVuY3Rpb24gTGVhc3RDb25uZWN0ZWRMb2FkQmFsYW5jaW5nU3RyYXRlZ3koY29ubmVjdGlvblBvb2wpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuX3JlYWRlcnNJbmRleCA9IG5ldyByb3VuZF9yb2Jpbl9hcnJheV9pbmRleF8xLmRlZmF1bHQoKTtcbiAgICAgICAgX3RoaXMuX3dyaXRlcnNJbmRleCA9IG5ldyByb3VuZF9yb2Jpbl9hcnJheV9pbmRleF8xLmRlZmF1bHQoKTtcbiAgICAgICAgX3RoaXMuX2Nvbm5lY3Rpb25Qb29sID0gY29ubmVjdGlvblBvb2w7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICBMZWFzdENvbm5lY3RlZExvYWRCYWxhbmNpbmdTdHJhdGVneS5wcm90b3R5cGUuc2VsZWN0UmVhZGVyID0gZnVuY3Rpb24gKGtub3duUmVhZGVycykge1xuICAgICAgICByZXR1cm4gdGhpcy5fc2VsZWN0KGtub3duUmVhZGVycywgdGhpcy5fcmVhZGVyc0luZGV4KTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEBpbmhlcml0RG9jXG4gICAgICovXG4gICAgTGVhc3RDb25uZWN0ZWRMb2FkQmFsYW5jaW5nU3RyYXRlZ3kucHJvdG90eXBlLnNlbGVjdFdyaXRlciA9IGZ1bmN0aW9uIChrbm93bldyaXRlcnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NlbGVjdChrbm93bldyaXRlcnMsIHRoaXMuX3dyaXRlcnNJbmRleCk7XG4gICAgfTtcbiAgICBMZWFzdENvbm5lY3RlZExvYWRCYWxhbmNpbmdTdHJhdGVneS5wcm90b3R5cGUuX3NlbGVjdCA9IGZ1bmN0aW9uIChhZGRyZXNzZXMsIHJvdW5kUm9iaW5JbmRleCkge1xuICAgICAgICB2YXIgbGVuZ3RoID0gYWRkcmVzc2VzLmxlbmd0aDtcbiAgICAgICAgaWYgKGxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgLy8gY2hvb3NlIHN0YXJ0IGluZGV4IGZvciBpdGVyYXRpb24gaW4gcm91bmQtcm9iaW4gZmFzaGlvblxuICAgICAgICB2YXIgc3RhcnRJbmRleCA9IHJvdW5kUm9iaW5JbmRleC5uZXh0KGxlbmd0aCk7XG4gICAgICAgIHZhciBpbmRleCA9IHN0YXJ0SW5kZXg7XG4gICAgICAgIHZhciBsZWFzdENvbm5lY3RlZEFkZHJlc3MgPSBudWxsO1xuICAgICAgICB2YXIgbGVhc3RBY3RpdmVDb25uZWN0aW9ucyA9IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSO1xuICAgICAgICAvLyBpdGVyYXRlIG92ZXIgdGhlIGFycmF5IHRvIGZpbmQgbGVhc3QgY29ubmVjdGVkIGFkZHJlc3NcbiAgICAgICAgZG8ge1xuICAgICAgICAgICAgdmFyIGFkZHJlc3MgPSBhZGRyZXNzZXNbaW5kZXhdO1xuICAgICAgICAgICAgdmFyIGFjdGl2ZUNvbm5lY3Rpb25zID0gdGhpcy5fY29ubmVjdGlvblBvb2wuYWN0aXZlUmVzb3VyY2VDb3VudChhZGRyZXNzKTtcbiAgICAgICAgICAgIGlmIChhY3RpdmVDb25uZWN0aW9ucyA8IGxlYXN0QWN0aXZlQ29ubmVjdGlvbnMpIHtcbiAgICAgICAgICAgICAgICBsZWFzdENvbm5lY3RlZEFkZHJlc3MgPSBhZGRyZXNzO1xuICAgICAgICAgICAgICAgIGxlYXN0QWN0aXZlQ29ubmVjdGlvbnMgPSBhY3RpdmVDb25uZWN0aW9ucztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGxvb3Agb3ZlciB0byB0aGUgc3RhcnQgb2YgdGhlIGFycmF5IHdoZW4gZW5kIGlzIHJlYWNoZWRcbiAgICAgICAgICAgIGlmIChpbmRleCA9PT0gbGVuZ3RoIC0gMSkge1xuICAgICAgICAgICAgICAgIGluZGV4ID0gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGluZGV4Kys7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gd2hpbGUgKGluZGV4ICE9PSBzdGFydEluZGV4KTtcbiAgICAgICAgcmV0dXJuIGxlYXN0Q29ubmVjdGVkQWRkcmVzcztcbiAgICB9O1xuICAgIHJldHVybiBMZWFzdENvbm5lY3RlZExvYWRCYWxhbmNpbmdTdHJhdGVneTtcbn0obG9hZF9iYWxhbmNpbmdfc3RyYXRlZ3lfMS5kZWZhdWx0KSk7XG5leHBvcnRzLmRlZmF1bHQgPSBMZWFzdENvbm5lY3RlZExvYWRCYWxhbmNpbmdTdHJhdGVneTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/load-balancing/least-connected-load-balancing-strategy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/load-balancing/load-balancing-strategy.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/load-balancing/load-balancing-strategy.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * A facility to select most appropriate reader or writer among the given addresses for request processing.\n */\nvar LoadBalancingStrategy = /** @class */ (function () {\n    function LoadBalancingStrategy() {\n    }\n    /**\n     * Select next most appropriate reader from the list of given readers.\n     * @param {string[]} knownReaders an array of currently known readers to select from.\n     * @return {string} most appropriate reader or `null` if given array is empty.\n     */\n    LoadBalancingStrategy.prototype.selectReader = function (knownReaders) {\n        throw new Error('Abstract function');\n    };\n    /**\n     * Select next most appropriate writer from the list of given writers.\n     * @param {string[]} knownWriters an array of currently known writers to select from.\n     * @return {string} most appropriate writer or `null` if given array is empty.\n     */\n    LoadBalancingStrategy.prototype.selectWriter = function (knownWriters) {\n        throw new Error('Abstract function');\n    };\n    return LoadBalancingStrategy;\n}());\nexports[\"default\"] = LoadBalancingStrategy;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvbG9hZC1iYWxhbmNpbmcvbG9hZC1iYWxhbmNpbmctc3RyYXRlZ3kuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxVQUFVO0FBQ3pCLGdCQUFnQixRQUFRO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsVUFBVTtBQUN6QixnQkFBZ0IsUUFBUTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmVvNGotbmV4dC1hcHAvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvbG9hZC1iYWxhbmNpbmcvbG9hZC1iYWxhbmNpbmctc3RyYXRlZ3kuanM/ZTA1NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qKlxuICogQ29weXJpZ2h0IChjKSBcIk5lbzRqXCJcbiAqIE5lbzRqIFN3ZWRlbiBBQiBbaHR0cHM6Ly9uZW80ai5jb21dXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKipcbiAqIEEgZmFjaWxpdHkgdG8gc2VsZWN0IG1vc3QgYXBwcm9wcmlhdGUgcmVhZGVyIG9yIHdyaXRlciBhbW9uZyB0aGUgZ2l2ZW4gYWRkcmVzc2VzIGZvciByZXF1ZXN0IHByb2Nlc3NpbmcuXG4gKi9cbnZhciBMb2FkQmFsYW5jaW5nU3RyYXRlZ3kgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTG9hZEJhbGFuY2luZ1N0cmF0ZWd5KCkge1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZWxlY3QgbmV4dCBtb3N0IGFwcHJvcHJpYXRlIHJlYWRlciBmcm9tIHRoZSBsaXN0IG9mIGdpdmVuIHJlYWRlcnMuXG4gICAgICogQHBhcmFtIHtzdHJpbmdbXX0ga25vd25SZWFkZXJzIGFuIGFycmF5IG9mIGN1cnJlbnRseSBrbm93biByZWFkZXJzIHRvIHNlbGVjdCBmcm9tLlxuICAgICAqIEByZXR1cm4ge3N0cmluZ30gbW9zdCBhcHByb3ByaWF0ZSByZWFkZXIgb3IgYG51bGxgIGlmIGdpdmVuIGFycmF5IGlzIGVtcHR5LlxuICAgICAqL1xuICAgIExvYWRCYWxhbmNpbmdTdHJhdGVneS5wcm90b3R5cGUuc2VsZWN0UmVhZGVyID0gZnVuY3Rpb24gKGtub3duUmVhZGVycykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Fic3RyYWN0IGZ1bmN0aW9uJyk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBTZWxlY3QgbmV4dCBtb3N0IGFwcHJvcHJpYXRlIHdyaXRlciBmcm9tIHRoZSBsaXN0IG9mIGdpdmVuIHdyaXRlcnMuXG4gICAgICogQHBhcmFtIHtzdHJpbmdbXX0ga25vd25Xcml0ZXJzIGFuIGFycmF5IG9mIGN1cnJlbnRseSBrbm93biB3cml0ZXJzIHRvIHNlbGVjdCBmcm9tLlxuICAgICAqIEByZXR1cm4ge3N0cmluZ30gbW9zdCBhcHByb3ByaWF0ZSB3cml0ZXIgb3IgYG51bGxgIGlmIGdpdmVuIGFycmF5IGlzIGVtcHR5LlxuICAgICAqL1xuICAgIExvYWRCYWxhbmNpbmdTdHJhdGVneS5wcm90b3R5cGUuc2VsZWN0V3JpdGVyID0gZnVuY3Rpb24gKGtub3duV3JpdGVycykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Fic3RyYWN0IGZ1bmN0aW9uJyk7XG4gICAgfTtcbiAgICByZXR1cm4gTG9hZEJhbGFuY2luZ1N0cmF0ZWd5O1xufSgpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IExvYWRCYWxhbmNpbmdTdHJhdGVneTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/load-balancing/load-balancing-strategy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/load-balancing/round-robin-array-index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/load-balancing/round-robin-array-index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar RoundRobinArrayIndex = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param {number} [initialOffset=0] the initial offset for round robin.\n     */\n    function RoundRobinArrayIndex(initialOffset) {\n        this._offset = initialOffset || 0;\n    }\n    /**\n     * Get next index for an array with given length.\n     * @param {number} arrayLength the array length.\n     * @return {number} index in the array.\n     */\n    RoundRobinArrayIndex.prototype.next = function (arrayLength) {\n        if (arrayLength === 0) {\n            return -1;\n        }\n        var nextOffset = this._offset;\n        this._offset += 1;\n        if (this._offset === Number.MAX_SAFE_INTEGER) {\n            this._offset = 0;\n        }\n        return nextOffset % arrayLength;\n    };\n    return RoundRobinArrayIndex;\n}());\nexports[\"default\"] = RoundRobinArrayIndex;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvbG9hZC1iYWxhbmNpbmcvcm91bmQtcm9iaW4tYXJyYXktaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGdCQUFnQixRQUFRO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmVvNGotbmV4dC1hcHAvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvbG9hZC1iYWxhbmNpbmcvcm91bmQtcm9iaW4tYXJyYXktaW5kZXguanM/YzAwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qKlxuICogQ29weXJpZ2h0IChjKSBcIk5lbzRqXCJcbiAqIE5lbzRqIFN3ZWRlbiBBQiBbaHR0cHM6Ly9uZW80ai5jb21dXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgUm91bmRSb2JpbkFycmF5SW5kZXggPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgLyoqXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtpbml0aWFsT2Zmc2V0PTBdIHRoZSBpbml0aWFsIG9mZnNldCBmb3Igcm91bmQgcm9iaW4uXG4gICAgICovXG4gICAgZnVuY3Rpb24gUm91bmRSb2JpbkFycmF5SW5kZXgoaW5pdGlhbE9mZnNldCkge1xuICAgICAgICB0aGlzLl9vZmZzZXQgPSBpbml0aWFsT2Zmc2V0IHx8IDA7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBuZXh0IGluZGV4IGZvciBhbiBhcnJheSB3aXRoIGdpdmVuIGxlbmd0aC5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gYXJyYXlMZW5ndGggdGhlIGFycmF5IGxlbmd0aC5cbiAgICAgKiBAcmV0dXJuIHtudW1iZXJ9IGluZGV4IGluIHRoZSBhcnJheS5cbiAgICAgKi9cbiAgICBSb3VuZFJvYmluQXJyYXlJbmRleC5wcm90b3R5cGUubmV4dCA9IGZ1bmN0aW9uIChhcnJheUxlbmd0aCkge1xuICAgICAgICBpZiAoYXJyYXlMZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbmV4dE9mZnNldCA9IHRoaXMuX29mZnNldDtcbiAgICAgICAgdGhpcy5fb2Zmc2V0ICs9IDE7XG4gICAgICAgIGlmICh0aGlzLl9vZmZzZXQgPT09IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSKSB7XG4gICAgICAgICAgICB0aGlzLl9vZmZzZXQgPSAwO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXh0T2Zmc2V0ICUgYXJyYXlMZW5ndGg7XG4gICAgfTtcbiAgICByZXR1cm4gUm91bmRSb2JpbkFycmF5SW5kZXg7XG59KCkpO1xuZXhwb3J0cy5kZWZhdWx0ID0gUm91bmRSb2JpbkFycmF5SW5kZXg7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/load-balancing/round-robin-array-index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/packstream/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/packstream/index.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.structure = exports.v2 = exports.v1 = void 0;\nvar v1 = __importStar(__webpack_require__(/*! ./packstream-v1 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/packstream/packstream-v1.js\"));\nexports.v1 = v1;\nvar v2 = __importStar(__webpack_require__(/*! ./packstream-v2 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/packstream/packstream-v2.js\"));\nexports.v2 = v2;\nvar structure = __importStar(__webpack_require__(/*! ./structure */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/packstream/structure.js\"));\nexports.structure = structure;\nexports[\"default\"] = v2;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvcGFja3N0cmVhbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwwQ0FBMEMsNEJBQTRCO0FBQ3RFLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxVQUFVLEdBQUcsVUFBVTtBQUMzQyxzQkFBc0IsbUJBQU8sQ0FBQywwR0FBaUI7QUFDL0MsVUFBVTtBQUNWLHNCQUFzQixtQkFBTyxDQUFDLDBHQUFpQjtBQUMvQyxVQUFVO0FBQ1YsNkJBQTZCLG1CQUFPLENBQUMsa0dBQWE7QUFDbEQsaUJBQWlCO0FBQ2pCLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmVvNGotbmV4dC1hcHAvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvcGFja3N0cmVhbS9pbmRleC5qcz8wZGRkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zdHJ1Y3R1cmUgPSBleHBvcnRzLnYyID0gZXhwb3J0cy52MSA9IHZvaWQgMDtcbnZhciB2MSA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9wYWNrc3RyZWFtLXYxXCIpKTtcbmV4cG9ydHMudjEgPSB2MTtcbnZhciB2MiA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9wYWNrc3RyZWFtLXYyXCIpKTtcbmV4cG9ydHMudjIgPSB2MjtcbnZhciBzdHJ1Y3R1cmUgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vc3RydWN0dXJlXCIpKTtcbmV4cG9ydHMuc3RydWN0dXJlID0gc3RydWN0dXJlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdjI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/packstream/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/packstream/packstream-v1.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/packstream/packstream-v1.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Unpacker = exports.Packer = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar channel_1 = __webpack_require__(/*! ../channel */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/channel/index.js\");\nvar lang_1 = __webpack_require__(/*! ../lang */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/lang/index.js\");\nvar structure_1 = __webpack_require__(/*! ./structure */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/packstream/structure.js\");\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\nvar TINY_STRING = 0x80;\nvar TINY_LIST = 0x90;\nvar TINY_MAP = 0xa0;\nvar TINY_STRUCT = 0xb0;\nvar NULL = 0xc0;\nvar FLOAT_64 = 0xc1;\nvar FALSE = 0xc2;\nvar TRUE = 0xc3;\nvar INT_8 = 0xc8;\nvar INT_16 = 0xc9;\nvar INT_32 = 0xca;\nvar INT_64 = 0xcb;\nvar STRING_8 = 0xd0;\nvar STRING_16 = 0xd1;\nvar STRING_32 = 0xd2;\nvar LIST_8 = 0xd4;\nvar LIST_16 = 0xd5;\nvar LIST_32 = 0xd6;\nvar BYTES_8 = 0xcc;\nvar BYTES_16 = 0xcd;\nvar BYTES_32 = 0xce;\nvar MAP_8 = 0xd8;\nvar MAP_16 = 0xd9;\nvar MAP_32 = 0xda;\nvar STRUCT_8 = 0xdc;\nvar STRUCT_16 = 0xdd;\n/**\n * Class to pack\n * @access private\n */\nvar Packer = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param {Chunker} channel the chunker backed by a network channel.\n     */\n    function Packer(channel) {\n        this._ch = channel;\n        this._byteArraysSupported = true;\n    }\n    /**\n     * Creates a packable function out of the provided value\n     * @param x the value to pack\n     * @returns Function\n     */\n    Packer.prototype.packable = function (x, dehydrateStruct) {\n        var _this = this;\n        if (dehydrateStruct === void 0) { dehydrateStruct = lang_1.functional.identity; }\n        try {\n            x = dehydrateStruct(x);\n        }\n        catch (ex) {\n            return function () { throw ex; };\n        }\n        if (x === null) {\n            return function () { return _this._ch.writeUInt8(NULL); };\n        }\n        else if (x === true) {\n            return function () { return _this._ch.writeUInt8(TRUE); };\n        }\n        else if (x === false) {\n            return function () { return _this._ch.writeUInt8(FALSE); };\n        }\n        else if (typeof x === 'number') {\n            return function () { return _this.packFloat(x); };\n        }\n        else if (typeof x === 'string') {\n            return function () { return _this.packString(x); };\n        }\n        else if (typeof x === 'bigint') {\n            return function () { return _this.packInteger((0, neo4j_driver_core_1.int)(x)); };\n        }\n        else if ((0, neo4j_driver_core_1.isInt)(x)) {\n            return function () { return _this.packInteger(x); };\n        }\n        else if (x instanceof Int8Array) {\n            return function () { return _this.packBytes(x); };\n        }\n        else if (x instanceof Array) {\n            return function () {\n                _this.packListHeader(x.length);\n                for (var i = 0; i < x.length; i++) {\n                    _this.packable(x[i] === undefined ? null : x[i], dehydrateStruct)();\n                }\n            };\n        }\n        else if (isIterable(x)) {\n            return this.packableIterable(x, dehydrateStruct);\n        }\n        else if (x instanceof structure_1.Structure) {\n            var packableFields_1 = [];\n            for (var i = 0; i < x.fields.length; i++) {\n                packableFields_1[i] = this.packable(x.fields[i], dehydrateStruct);\n            }\n            return function () { return _this.packStruct(x.signature, packableFields_1); };\n        }\n        else if (typeof x === 'object') {\n            return function () {\n                var keys = Object.keys(x);\n                var count = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (x[keys[i]] !== undefined) {\n                        count++;\n                    }\n                }\n                _this.packMapHeader(count);\n                for (var i = 0; i < keys.length; i++) {\n                    var key = keys[i];\n                    if (x[key] !== undefined) {\n                        _this.packString(key);\n                        _this.packable(x[key], dehydrateStruct)();\n                    }\n                }\n            };\n        }\n        else {\n            return this._nonPackableValue(\"Unable to pack the given value: \".concat(x));\n        }\n    };\n    Packer.prototype.packableIterable = function (iterable, dehydrateStruct) {\n        try {\n            var array = Array.from(iterable);\n            return this.packable(array, dehydrateStruct);\n        }\n        catch (e) {\n            // handle errors from iterable to array conversion\n            throw (0, neo4j_driver_core_1.newError)(\"Cannot pack given iterable, \".concat(e.message, \": \").concat(iterable));\n        }\n    };\n    /**\n     * Packs a struct\n     * @param signature the signature of the struct\n     * @param packableFields the fields of the struct, make sure you call `packable on all fields`\n     */\n    Packer.prototype.packStruct = function (signature, packableFields) {\n        packableFields = packableFields || [];\n        this.packStructHeader(packableFields.length, signature);\n        for (var i = 0; i < packableFields.length; i++) {\n            packableFields[i]();\n        }\n    };\n    Packer.prototype.packInteger = function (x) {\n        var high = x.high;\n        var low = x.low;\n        if (x.greaterThanOrEqual(-0x10) && x.lessThan(0x80)) {\n            this._ch.writeInt8(low);\n        }\n        else if (x.greaterThanOrEqual(-0x80) && x.lessThan(-0x10)) {\n            this._ch.writeUInt8(INT_8);\n            this._ch.writeInt8(low);\n        }\n        else if (x.greaterThanOrEqual(-0x8000) && x.lessThan(0x8000)) {\n            this._ch.writeUInt8(INT_16);\n            this._ch.writeInt16(low);\n        }\n        else if (x.greaterThanOrEqual(-0x80000000) && x.lessThan(0x80000000)) {\n            this._ch.writeUInt8(INT_32);\n            this._ch.writeInt32(low);\n        }\n        else {\n            this._ch.writeUInt8(INT_64);\n            this._ch.writeInt32(high);\n            this._ch.writeInt32(low);\n        }\n    };\n    Packer.prototype.packFloat = function (x) {\n        this._ch.writeUInt8(FLOAT_64);\n        this._ch.writeFloat64(x);\n    };\n    Packer.prototype.packString = function (x) {\n        var bytes = channel_1.utf8.encode(x);\n        var size = bytes.length;\n        if (size < 0x10) {\n            this._ch.writeUInt8(TINY_STRING | size);\n            this._ch.writeBytes(bytes);\n        }\n        else if (size < 0x100) {\n            this._ch.writeUInt8(STRING_8);\n            this._ch.writeUInt8(size);\n            this._ch.writeBytes(bytes);\n        }\n        else if (size < 0x10000) {\n            this._ch.writeUInt8(STRING_16);\n            this._ch.writeUInt8((size / 256) >> 0);\n            this._ch.writeUInt8(size % 256);\n            this._ch.writeBytes(bytes);\n        }\n        else if (size < 0x100000000) {\n            this._ch.writeUInt8(STRING_32);\n            this._ch.writeUInt8(((size / 16777216) >> 0) % 256);\n            this._ch.writeUInt8(((size / 65536) >> 0) % 256);\n            this._ch.writeUInt8(((size / 256) >> 0) % 256);\n            this._ch.writeUInt8(size % 256);\n            this._ch.writeBytes(bytes);\n        }\n        else {\n            throw (0, neo4j_driver_core_1.newError)('UTF-8 strings of size ' + size + ' are not supported');\n        }\n    };\n    Packer.prototype.packListHeader = function (size) {\n        if (size < 0x10) {\n            this._ch.writeUInt8(TINY_LIST | size);\n        }\n        else if (size < 0x100) {\n            this._ch.writeUInt8(LIST_8);\n            this._ch.writeUInt8(size);\n        }\n        else if (size < 0x10000) {\n            this._ch.writeUInt8(LIST_16);\n            this._ch.writeUInt8(((size / 256) >> 0) % 256);\n            this._ch.writeUInt8(size % 256);\n        }\n        else if (size < 0x100000000) {\n            this._ch.writeUInt8(LIST_32);\n            this._ch.writeUInt8(((size / 16777216) >> 0) % 256);\n            this._ch.writeUInt8(((size / 65536) >> 0) % 256);\n            this._ch.writeUInt8(((size / 256) >> 0) % 256);\n            this._ch.writeUInt8(size % 256);\n        }\n        else {\n            throw (0, neo4j_driver_core_1.newError)('Lists of size ' + size + ' are not supported');\n        }\n    };\n    Packer.prototype.packBytes = function (array) {\n        if (this._byteArraysSupported) {\n            this.packBytesHeader(array.length);\n            for (var i = 0; i < array.length; i++) {\n                this._ch.writeInt8(array[i]);\n            }\n        }\n        else {\n            throw (0, neo4j_driver_core_1.newError)('Byte arrays are not supported by the database this driver is connected to');\n        }\n    };\n    Packer.prototype.packBytesHeader = function (size) {\n        if (size < 0x100) {\n            this._ch.writeUInt8(BYTES_8);\n            this._ch.writeUInt8(size);\n        }\n        else if (size < 0x10000) {\n            this._ch.writeUInt8(BYTES_16);\n            this._ch.writeUInt8(((size / 256) >> 0) % 256);\n            this._ch.writeUInt8(size % 256);\n        }\n        else if (size < 0x100000000) {\n            this._ch.writeUInt8(BYTES_32);\n            this._ch.writeUInt8(((size / 16777216) >> 0) % 256);\n            this._ch.writeUInt8(((size / 65536) >> 0) % 256);\n            this._ch.writeUInt8(((size / 256) >> 0) % 256);\n            this._ch.writeUInt8(size % 256);\n        }\n        else {\n            throw (0, neo4j_driver_core_1.newError)('Byte arrays of size ' + size + ' are not supported');\n        }\n    };\n    Packer.prototype.packMapHeader = function (size) {\n        if (size < 0x10) {\n            this._ch.writeUInt8(TINY_MAP | size);\n        }\n        else if (size < 0x100) {\n            this._ch.writeUInt8(MAP_8);\n            this._ch.writeUInt8(size);\n        }\n        else if (size < 0x10000) {\n            this._ch.writeUInt8(MAP_16);\n            this._ch.writeUInt8((size / 256) >> 0);\n            this._ch.writeUInt8(size % 256);\n        }\n        else if (size < 0x100000000) {\n            this._ch.writeUInt8(MAP_32);\n            this._ch.writeUInt8(((size / 16777216) >> 0) % 256);\n            this._ch.writeUInt8(((size / 65536) >> 0) % 256);\n            this._ch.writeUInt8(((size / 256) >> 0) % 256);\n            this._ch.writeUInt8(size % 256);\n        }\n        else {\n            throw (0, neo4j_driver_core_1.newError)('Maps of size ' + size + ' are not supported');\n        }\n    };\n    Packer.prototype.packStructHeader = function (size, signature) {\n        if (size < 0x10) {\n            this._ch.writeUInt8(TINY_STRUCT | size);\n            this._ch.writeUInt8(signature);\n        }\n        else if (size < 0x100) {\n            this._ch.writeUInt8(STRUCT_8);\n            this._ch.writeUInt8(size);\n            this._ch.writeUInt8(signature);\n        }\n        else if (size < 0x10000) {\n            this._ch.writeUInt8(STRUCT_16);\n            this._ch.writeUInt8((size / 256) >> 0);\n            this._ch.writeUInt8(size % 256);\n        }\n        else {\n            throw (0, neo4j_driver_core_1.newError)('Structures of size ' + size + ' are not supported');\n        }\n    };\n    Packer.prototype.disableByteArrays = function () {\n        this._byteArraysSupported = false;\n    };\n    Packer.prototype._nonPackableValue = function (message) {\n        return function () {\n            throw (0, neo4j_driver_core_1.newError)(message, PROTOCOL_ERROR);\n        };\n    };\n    return Packer;\n}());\nexports.Packer = Packer;\n/**\n * Class to unpack\n * @access private\n */\nvar Unpacker = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param {boolean} disableLosslessIntegers if this unpacker should convert all received integers to native JS numbers.\n     * @param {boolean} useBigInt if this unpacker should convert all received integers to Bigint\n     */\n    function Unpacker(disableLosslessIntegers, useBigInt) {\n        if (disableLosslessIntegers === void 0) { disableLosslessIntegers = false; }\n        if (useBigInt === void 0) { useBigInt = false; }\n        this._disableLosslessIntegers = disableLosslessIntegers;\n        this._useBigInt = useBigInt;\n    }\n    Unpacker.prototype.unpack = function (buffer, hydrateStructure) {\n        if (hydrateStructure === void 0) { hydrateStructure = lang_1.functional.identity; }\n        var marker = buffer.readUInt8();\n        var markerHigh = marker & 0xf0;\n        var markerLow = marker & 0x0f;\n        if (marker === NULL) {\n            return null;\n        }\n        var boolean = this._unpackBoolean(marker);\n        if (boolean !== null) {\n            return boolean;\n        }\n        var numberOrInteger = this._unpackNumberOrInteger(marker, buffer);\n        if (numberOrInteger !== null) {\n            if ((0, neo4j_driver_core_1.isInt)(numberOrInteger)) {\n                if (this._useBigInt) {\n                    return numberOrInteger.toBigInt();\n                }\n                else if (this._disableLosslessIntegers) {\n                    return numberOrInteger.toNumberOrInfinity();\n                }\n            }\n            return numberOrInteger;\n        }\n        var string = this._unpackString(marker, markerHigh, markerLow, buffer);\n        if (string !== null) {\n            return string;\n        }\n        var list = this._unpackList(marker, markerHigh, markerLow, buffer, hydrateStructure);\n        if (list !== null) {\n            return list;\n        }\n        var byteArray = this._unpackByteArray(marker, buffer);\n        if (byteArray !== null) {\n            return byteArray;\n        }\n        var map = this._unpackMap(marker, markerHigh, markerLow, buffer, hydrateStructure);\n        if (map !== null) {\n            return map;\n        }\n        var struct = this._unpackStruct(marker, markerHigh, markerLow, buffer, hydrateStructure);\n        if (struct !== null) {\n            return struct;\n        }\n        throw (0, neo4j_driver_core_1.newError)('Unknown packed value with marker ' + marker.toString(16));\n    };\n    Unpacker.prototype.unpackInteger = function (buffer) {\n        var marker = buffer.readUInt8();\n        var result = this._unpackInteger(marker, buffer);\n        if (result == null) {\n            throw (0, neo4j_driver_core_1.newError)('Unable to unpack integer value with marker ' + marker.toString(16));\n        }\n        return result;\n    };\n    Unpacker.prototype._unpackBoolean = function (marker) {\n        if (marker === TRUE) {\n            return true;\n        }\n        else if (marker === FALSE) {\n            return false;\n        }\n        else {\n            return null;\n        }\n    };\n    Unpacker.prototype._unpackNumberOrInteger = function (marker, buffer) {\n        if (marker === FLOAT_64) {\n            return buffer.readFloat64();\n        }\n        else {\n            return this._unpackInteger(marker, buffer);\n        }\n    };\n    Unpacker.prototype._unpackInteger = function (marker, buffer) {\n        if (marker >= 0 && marker < 128) {\n            return (0, neo4j_driver_core_1.int)(marker);\n        }\n        else if (marker >= 240 && marker < 256) {\n            return (0, neo4j_driver_core_1.int)(marker - 256);\n        }\n        else if (marker === INT_8) {\n            return (0, neo4j_driver_core_1.int)(buffer.readInt8());\n        }\n        else if (marker === INT_16) {\n            return (0, neo4j_driver_core_1.int)(buffer.readInt16());\n        }\n        else if (marker === INT_32) {\n            var b = buffer.readInt32();\n            return (0, neo4j_driver_core_1.int)(b);\n        }\n        else if (marker === INT_64) {\n            var high = buffer.readInt32();\n            var low = buffer.readInt32();\n            return new neo4j_driver_core_1.Integer(low, high);\n        }\n        else {\n            return null;\n        }\n    };\n    Unpacker.prototype._unpackString = function (marker, markerHigh, markerLow, buffer) {\n        if (markerHigh === TINY_STRING) {\n            return channel_1.utf8.decode(buffer, markerLow);\n        }\n        else if (marker === STRING_8) {\n            return channel_1.utf8.decode(buffer, buffer.readUInt8());\n        }\n        else if (marker === STRING_16) {\n            return channel_1.utf8.decode(buffer, buffer.readUInt16());\n        }\n        else if (marker === STRING_32) {\n            return channel_1.utf8.decode(buffer, buffer.readUInt32());\n        }\n        else {\n            return null;\n        }\n    };\n    Unpacker.prototype._unpackList = function (marker, markerHigh, markerLow, buffer, hydrateStructure) {\n        if (markerHigh === TINY_LIST) {\n            return this._unpackListWithSize(markerLow, buffer, hydrateStructure);\n        }\n        else if (marker === LIST_8) {\n            return this._unpackListWithSize(buffer.readUInt8(), buffer, hydrateStructure);\n        }\n        else if (marker === LIST_16) {\n            return this._unpackListWithSize(buffer.readUInt16(), buffer, hydrateStructure);\n        }\n        else if (marker === LIST_32) {\n            return this._unpackListWithSize(buffer.readUInt32(), buffer, hydrateStructure);\n        }\n        else {\n            return null;\n        }\n    };\n    Unpacker.prototype._unpackListWithSize = function (size, buffer, hydrateStructure) {\n        var value = [];\n        for (var i = 0; i < size; i++) {\n            value.push(this.unpack(buffer, hydrateStructure));\n        }\n        return value;\n    };\n    Unpacker.prototype._unpackByteArray = function (marker, buffer) {\n        if (marker === BYTES_8) {\n            return this._unpackByteArrayWithSize(buffer.readUInt8(), buffer);\n        }\n        else if (marker === BYTES_16) {\n            return this._unpackByteArrayWithSize(buffer.readUInt16(), buffer);\n        }\n        else if (marker === BYTES_32) {\n            return this._unpackByteArrayWithSize(buffer.readUInt32(), buffer);\n        }\n        else {\n            return null;\n        }\n    };\n    Unpacker.prototype._unpackByteArrayWithSize = function (size, buffer) {\n        var value = new Int8Array(size);\n        for (var i = 0; i < size; i++) {\n            value[i] = buffer.readInt8();\n        }\n        return value;\n    };\n    Unpacker.prototype._unpackMap = function (marker, markerHigh, markerLow, buffer, hydrateStructure) {\n        if (markerHigh === TINY_MAP) {\n            return this._unpackMapWithSize(markerLow, buffer, hydrateStructure);\n        }\n        else if (marker === MAP_8) {\n            return this._unpackMapWithSize(buffer.readUInt8(), buffer, hydrateStructure);\n        }\n        else if (marker === MAP_16) {\n            return this._unpackMapWithSize(buffer.readUInt16(), buffer, hydrateStructure);\n        }\n        else if (marker === MAP_32) {\n            return this._unpackMapWithSize(buffer.readUInt32(), buffer, hydrateStructure);\n        }\n        else {\n            return null;\n        }\n    };\n    Unpacker.prototype._unpackMapWithSize = function (size, buffer, hydrateStructure) {\n        var value = {};\n        for (var i = 0; i < size; i++) {\n            var key = this.unpack(buffer, hydrateStructure);\n            value[key] = this.unpack(buffer, hydrateStructure);\n        }\n        return value;\n    };\n    Unpacker.prototype._unpackStruct = function (marker, markerHigh, markerLow, buffer, hydrateStructure) {\n        if (markerHigh === TINY_STRUCT) {\n            return this._unpackStructWithSize(markerLow, buffer, hydrateStructure);\n        }\n        else if (marker === STRUCT_8) {\n            return this._unpackStructWithSize(buffer.readUInt8(), buffer, hydrateStructure);\n        }\n        else if (marker === STRUCT_16) {\n            return this._unpackStructWithSize(buffer.readUInt16(), buffer, hydrateStructure);\n        }\n        else {\n            return null;\n        }\n    };\n    Unpacker.prototype._unpackStructWithSize = function (structSize, buffer, hydrateStructure) {\n        var signature = buffer.readUInt8();\n        var structure = new structure_1.Structure(signature, []);\n        for (var i = 0; i < structSize; i++) {\n            structure.fields.push(this.unpack(buffer, hydrateStructure));\n        }\n        return hydrateStructure(structure);\n    };\n    return Unpacker;\n}());\nexports.Unpacker = Unpacker;\nfunction isIterable(obj) {\n    if (obj == null) {\n        return false;\n    }\n    return typeof obj[Symbol.iterator] === 'function';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/packstream/packstream-v1.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/packstream/packstream-v2.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/packstream/packstream-v2.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Unpacker = exports.Packer = void 0;\nvar v1 = __importStar(__webpack_require__(/*! ./packstream-v1 */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/packstream/packstream-v1.js\"));\nvar Packer = /** @class */ (function (_super) {\n    __extends(Packer, _super);\n    function Packer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Packer.prototype.disableByteArrays = function () {\n        throw new Error('Bolt V2 should always support byte arrays');\n    };\n    return Packer;\n}(v1.Packer));\nexports.Packer = Packer;\nvar Unpacker = /** @class */ (function (_super) {\n    __extends(Unpacker, _super);\n    /**\n     * @constructor\n     * @param {boolean} disableLosslessIntegers if this unpacker should convert all received integers to native JS numbers.\n     * @param {boolean} useBigInt if this unpacker should convert all received integers to Bigint\n     */\n    function Unpacker(disableLosslessIntegers, useBigInt) {\n        if (disableLosslessIntegers === void 0) { disableLosslessIntegers = false; }\n        if (useBigInt === void 0) { useBigInt = false; }\n        return _super.call(this, disableLosslessIntegers, useBigInt) || this;\n    }\n    return Unpacker;\n}(v1.Unpacker));\nexports.Unpacker = Unpacker;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvcGFja3N0cmVhbS9wYWNrc3RyZWFtLXYyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ3ZGLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQixHQUFHLGNBQWM7QUFDakMsc0JBQXNCLG1CQUFPLENBQUMsMEdBQWlCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFNBQVM7QUFDeEIsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQSxrREFBa0Q7QUFDbEQsb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxnQkFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9wYWNrc3RyZWFtL3BhY2tzdHJlYW0tdjIuanM/MjUyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qKlxuICogQ29weXJpZ2h0IChjKSBcIk5lbzRqXCJcbiAqIE5lbzRqIFN3ZWRlbiBBQiBbaHR0cHM6Ly9uZW80ai5jb21dXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVucGFja2VyID0gZXhwb3J0cy5QYWNrZXIgPSB2b2lkIDA7XG52YXIgdjEgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vcGFja3N0cmVhbS12MVwiKSk7XG52YXIgUGFja2VyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhQYWNrZXIsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gUGFja2VyKCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuICAgIFBhY2tlci5wcm90b3R5cGUuZGlzYWJsZUJ5dGVBcnJheXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQm9sdCBWMiBzaG91bGQgYWx3YXlzIHN1cHBvcnQgYnl0ZSBhcnJheXMnKTtcbiAgICB9O1xuICAgIHJldHVybiBQYWNrZXI7XG59KHYxLlBhY2tlcikpO1xuZXhwb3J0cy5QYWNrZXIgPSBQYWNrZXI7XG52YXIgVW5wYWNrZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFVucGFja2VyLCBfc3VwZXIpO1xuICAgIC8qKlxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gZGlzYWJsZUxvc3NsZXNzSW50ZWdlcnMgaWYgdGhpcyB1bnBhY2tlciBzaG91bGQgY29udmVydCBhbGwgcmVjZWl2ZWQgaW50ZWdlcnMgdG8gbmF0aXZlIEpTIG51bWJlcnMuXG4gICAgICogQHBhcmFtIHtib29sZWFufSB1c2VCaWdJbnQgaWYgdGhpcyB1bnBhY2tlciBzaG91bGQgY29udmVydCBhbGwgcmVjZWl2ZWQgaW50ZWdlcnMgdG8gQmlnaW50XG4gICAgICovXG4gICAgZnVuY3Rpb24gVW5wYWNrZXIoZGlzYWJsZUxvc3NsZXNzSW50ZWdlcnMsIHVzZUJpZ0ludCkge1xuICAgICAgICBpZiAoZGlzYWJsZUxvc3NsZXNzSW50ZWdlcnMgPT09IHZvaWQgMCkgeyBkaXNhYmxlTG9zc2xlc3NJbnRlZ2VycyA9IGZhbHNlOyB9XG4gICAgICAgIGlmICh1c2VCaWdJbnQgPT09IHZvaWQgMCkgeyB1c2VCaWdJbnQgPSBmYWxzZTsgfVxuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgZGlzYWJsZUxvc3NsZXNzSW50ZWdlcnMsIHVzZUJpZ0ludCkgfHwgdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIFVucGFja2VyO1xufSh2MS5VbnBhY2tlcikpO1xuZXhwb3J0cy5VbnBhY2tlciA9IFVucGFja2VyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/packstream/packstream-v2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/packstream/structure.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/packstream/structure.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.verifyStructSize = exports.Structure = void 0;\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\n/**\n * A Structure have a signature and fields.\n */\nvar Structure = /** @class */ (function () {\n    /**\n     * Create new instance\n     */\n    function Structure(signature, fields) {\n        this.signature = signature;\n        this.fields = fields;\n    }\n    Object.defineProperty(Structure.prototype, \"size\", {\n        get: function () {\n            return this.fields.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Structure.prototype.toString = function () {\n        var fieldStr = '';\n        for (var i = 0; i < this.fields.length; i++) {\n            if (i > 0) {\n                fieldStr += ', ';\n            }\n            fieldStr += this.fields[i];\n        }\n        return 'Structure(' + this.signature + ', [' + fieldStr + '])';\n    };\n    return Structure;\n}());\nexports.Structure = Structure;\nfunction verifyStructSize(structName, expectedSize, actualSize) {\n    if (expectedSize !== actualSize) {\n        throw (0, neo4j_driver_core_1.newError)(\"Wrong struct size for \".concat(structName, \", expected \").concat(expectedSize, \" but was \").concat(actualSize), PROTOCOL_ERROR);\n    }\n}\nexports.verifyStructSize = verifyStructSize;\nexports[\"default\"] = Structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvcGFja3N0cmVhbS9zdHJ1Y3R1cmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0IsR0FBRyxpQkFBaUI7QUFDNUMsMEJBQTBCLG1CQUFPLENBQUMsOEVBQW1CO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSx3QkFBd0Isd0JBQXdCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEIsa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9wYWNrc3RyZWFtL3N0cnVjdHVyZS5qcz9iNTg4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudmVyaWZ5U3RydWN0U2l6ZSA9IGV4cG9ydHMuU3RydWN0dXJlID0gdm9pZCAwO1xudmFyIG5lbzRqX2RyaXZlcl9jb3JlXzEgPSByZXF1aXJlKFwibmVvNGotZHJpdmVyLWNvcmVcIik7XG52YXIgUFJPVE9DT0xfRVJST1IgPSBuZW80al9kcml2ZXJfY29yZV8xLmVycm9yLlBST1RPQ09MX0VSUk9SO1xuLyoqXG4gKiBBIFN0cnVjdHVyZSBoYXZlIGEgc2lnbmF0dXJlIGFuZCBmaWVsZHMuXG4gKi9cbnZhciBTdHJ1Y3R1cmUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIG5ldyBpbnN0YW5jZVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIFN0cnVjdHVyZShzaWduYXR1cmUsIGZpZWxkcykge1xuICAgICAgICB0aGlzLnNpZ25hdHVyZSA9IHNpZ25hdHVyZTtcbiAgICAgICAgdGhpcy5maWVsZHMgPSBmaWVsZHM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTdHJ1Y3R1cmUucHJvdG90eXBlLCBcInNpemVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmZpZWxkcy5sZW5ndGg7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBTdHJ1Y3R1cmUucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZmllbGRTdHIgPSAnJztcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmZpZWxkcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGkgPiAwKSB7XG4gICAgICAgICAgICAgICAgZmllbGRTdHIgKz0gJywgJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZpZWxkU3RyICs9IHRoaXMuZmllbGRzW2ldO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAnU3RydWN0dXJlKCcgKyB0aGlzLnNpZ25hdHVyZSArICcsIFsnICsgZmllbGRTdHIgKyAnXSknO1xuICAgIH07XG4gICAgcmV0dXJuIFN0cnVjdHVyZTtcbn0oKSk7XG5leHBvcnRzLlN0cnVjdHVyZSA9IFN0cnVjdHVyZTtcbmZ1bmN0aW9uIHZlcmlmeVN0cnVjdFNpemUoc3RydWN0TmFtZSwgZXhwZWN0ZWRTaXplLCBhY3R1YWxTaXplKSB7XG4gICAgaWYgKGV4cGVjdGVkU2l6ZSAhPT0gYWN0dWFsU2l6ZSkge1xuICAgICAgICB0aHJvdyAoMCwgbmVvNGpfZHJpdmVyX2NvcmVfMS5uZXdFcnJvcikoXCJXcm9uZyBzdHJ1Y3Qgc2l6ZSBmb3IgXCIuY29uY2F0KHN0cnVjdE5hbWUsIFwiLCBleHBlY3RlZCBcIikuY29uY2F0KGV4cGVjdGVkU2l6ZSwgXCIgYnV0IHdhcyBcIikuY29uY2F0KGFjdHVhbFNpemUpLCBQUk9UT0NPTF9FUlJPUik7XG4gICAgfVxufVxuZXhwb3J0cy52ZXJpZnlTdHJ1Y3RTaXplID0gdmVyaWZ5U3RydWN0U2l6ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IFN0cnVjdHVyZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/packstream/structure.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/pool/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/pool/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DEFAULT_MAX_SIZE = exports.DEFAULT_ACQUISITION_TIMEOUT = exports.PoolConfig = exports.Pool = void 0;\nvar pool_config_1 = __importStar(__webpack_require__(/*! ./pool-config */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/pool/pool-config.js\"));\nexports.PoolConfig = pool_config_1.default;\nObject.defineProperty(exports, \"DEFAULT_ACQUISITION_TIMEOUT\", ({ enumerable: true, get: function () { return pool_config_1.DEFAULT_ACQUISITION_TIMEOUT; } }));\nObject.defineProperty(exports, \"DEFAULT_MAX_SIZE\", ({ enumerable: true, get: function () { return pool_config_1.DEFAULT_MAX_SIZE; } }));\nvar pool_1 = __importDefault(__webpack_require__(/*! ./pool */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/pool/pool.js\"));\nexports.Pool = pool_1.default;\nexports[\"default\"] = pool_1.default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvcG9vbC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwwQ0FBMEMsNEJBQTRCO0FBQ3RFLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QixHQUFHLG1DQUFtQyxHQUFHLGtCQUFrQixHQUFHLFlBQVk7QUFDbEcsaUNBQWlDLG1CQUFPLENBQUMsZ0dBQWU7QUFDeEQsa0JBQWtCO0FBQ2xCLCtEQUE4RCxFQUFFLHFDQUFxQyxxREFBcUQsRUFBQztBQUMzSixvREFBbUQsRUFBRSxxQ0FBcUMsMENBQTBDLEVBQUM7QUFDckksNkJBQTZCLG1CQUFPLENBQUMsa0ZBQVE7QUFDN0MsWUFBWTtBQUNaLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmVvNGotbmV4dC1hcHAvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvcG9vbC9pbmRleC5qcz9iZGM0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFwiTmVvNGpcIlxuICogTmVvNGogU3dlZGVuIEFCIFtodHRwczovL25lbzRqLmNvbV1cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5ERUZBVUxUX01BWF9TSVpFID0gZXhwb3J0cy5ERUZBVUxUX0FDUVVJU0lUSU9OX1RJTUVPVVQgPSBleHBvcnRzLlBvb2xDb25maWcgPSBleHBvcnRzLlBvb2wgPSB2b2lkIDA7XG52YXIgcG9vbF9jb25maWdfMSA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9wb29sLWNvbmZpZ1wiKSk7XG5leHBvcnRzLlBvb2xDb25maWcgPSBwb29sX2NvbmZpZ18xLmRlZmF1bHQ7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJERUZBVUxUX0FDUVVJU0lUSU9OX1RJTUVPVVRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHBvb2xfY29uZmlnXzEuREVGQVVMVF9BQ1FVSVNJVElPTl9USU1FT1VUOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiREVGQVVMVF9NQVhfU0laRVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcG9vbF9jb25maWdfMS5ERUZBVUxUX01BWF9TSVpFOyB9IH0pO1xudmFyIHBvb2xfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9wb29sXCIpKTtcbmV4cG9ydHMuUG9vbCA9IHBvb2xfMS5kZWZhdWx0O1xuZXhwb3J0cy5kZWZhdWx0ID0gcG9vbF8xLmRlZmF1bHQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/pool/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/pool/pool-config.js":
/*!***************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/pool/pool-config.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DEFAULT_ACQUISITION_TIMEOUT = exports.DEFAULT_MAX_SIZE = void 0;\nvar DEFAULT_MAX_SIZE = 100;\nexports.DEFAULT_MAX_SIZE = DEFAULT_MAX_SIZE;\nvar DEFAULT_ACQUISITION_TIMEOUT = 60 * 1000; // 60 seconds\nexports.DEFAULT_ACQUISITION_TIMEOUT = DEFAULT_ACQUISITION_TIMEOUT;\nvar PoolConfig = /** @class */ (function () {\n    function PoolConfig(maxSize, acquisitionTimeout) {\n        this.maxSize = valueOrDefault(maxSize, DEFAULT_MAX_SIZE);\n        this.acquisitionTimeout = valueOrDefault(acquisitionTimeout, DEFAULT_ACQUISITION_TIMEOUT);\n    }\n    PoolConfig.defaultConfig = function () {\n        return new PoolConfig(DEFAULT_MAX_SIZE, DEFAULT_ACQUISITION_TIMEOUT);\n    };\n    PoolConfig.fromDriverConfig = function (config) {\n        var maxSizeConfigured = isConfigured(config.maxConnectionPoolSize);\n        var maxSize = maxSizeConfigured\n            ? config.maxConnectionPoolSize\n            : DEFAULT_MAX_SIZE;\n        var acquisitionTimeoutConfigured = isConfigured(config.connectionAcquisitionTimeout);\n        var acquisitionTimeout = acquisitionTimeoutConfigured\n            ? config.connectionAcquisitionTimeout\n            : DEFAULT_ACQUISITION_TIMEOUT;\n        return new PoolConfig(maxSize, acquisitionTimeout);\n    };\n    return PoolConfig;\n}());\nexports[\"default\"] = PoolConfig;\nfunction valueOrDefault(value, defaultValue) {\n    return value === 0 || value ? value : defaultValue;\n}\nfunction isConfigured(value) {\n    return value === 0 || value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvcG9vbC9wb29sLWNvbmZpZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1DQUFtQyxHQUFHLHdCQUF3QjtBQUM5RDtBQUNBLHdCQUF3QjtBQUN4Qiw2Q0FBNkM7QUFDN0MsbUNBQW1DO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW80ai1uZXh0LWFwcC8uL25vZGVfbW9kdWxlcy9uZW80ai1kcml2ZXItYm9sdC1jb25uZWN0aW9uL2xpYi9wb29sL3Bvb2wtY29uZmlnLmpzP2VhMTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIENvcHlyaWdodCAoYykgXCJOZW80alwiXG4gKiBOZW80aiBTd2VkZW4gQUIgW2h0dHBzOi8vbmVvNGouY29tXVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5ERUZBVUxUX0FDUVVJU0lUSU9OX1RJTUVPVVQgPSBleHBvcnRzLkRFRkFVTFRfTUFYX1NJWkUgPSB2b2lkIDA7XG52YXIgREVGQVVMVF9NQVhfU0laRSA9IDEwMDtcbmV4cG9ydHMuREVGQVVMVF9NQVhfU0laRSA9IERFRkFVTFRfTUFYX1NJWkU7XG52YXIgREVGQVVMVF9BQ1FVSVNJVElPTl9USU1FT1VUID0gNjAgKiAxMDAwOyAvLyA2MCBzZWNvbmRzXG5leHBvcnRzLkRFRkFVTFRfQUNRVUlTSVRJT05fVElNRU9VVCA9IERFRkFVTFRfQUNRVUlTSVRJT05fVElNRU9VVDtcbnZhciBQb29sQ29uZmlnID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFBvb2xDb25maWcobWF4U2l6ZSwgYWNxdWlzaXRpb25UaW1lb3V0KSB7XG4gICAgICAgIHRoaXMubWF4U2l6ZSA9IHZhbHVlT3JEZWZhdWx0KG1heFNpemUsIERFRkFVTFRfTUFYX1NJWkUpO1xuICAgICAgICB0aGlzLmFjcXVpc2l0aW9uVGltZW91dCA9IHZhbHVlT3JEZWZhdWx0KGFjcXVpc2l0aW9uVGltZW91dCwgREVGQVVMVF9BQ1FVSVNJVElPTl9USU1FT1VUKTtcbiAgICB9XG4gICAgUG9vbENvbmZpZy5kZWZhdWx0Q29uZmlnID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gbmV3IFBvb2xDb25maWcoREVGQVVMVF9NQVhfU0laRSwgREVGQVVMVF9BQ1FVSVNJVElPTl9USU1FT1VUKTtcbiAgICB9O1xuICAgIFBvb2xDb25maWcuZnJvbURyaXZlckNvbmZpZyA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICAgICAgdmFyIG1heFNpemVDb25maWd1cmVkID0gaXNDb25maWd1cmVkKGNvbmZpZy5tYXhDb25uZWN0aW9uUG9vbFNpemUpO1xuICAgICAgICB2YXIgbWF4U2l6ZSA9IG1heFNpemVDb25maWd1cmVkXG4gICAgICAgICAgICA/IGNvbmZpZy5tYXhDb25uZWN0aW9uUG9vbFNpemVcbiAgICAgICAgICAgIDogREVGQVVMVF9NQVhfU0laRTtcbiAgICAgICAgdmFyIGFjcXVpc2l0aW9uVGltZW91dENvbmZpZ3VyZWQgPSBpc0NvbmZpZ3VyZWQoY29uZmlnLmNvbm5lY3Rpb25BY3F1aXNpdGlvblRpbWVvdXQpO1xuICAgICAgICB2YXIgYWNxdWlzaXRpb25UaW1lb3V0ID0gYWNxdWlzaXRpb25UaW1lb3V0Q29uZmlndXJlZFxuICAgICAgICAgICAgPyBjb25maWcuY29ubmVjdGlvbkFjcXVpc2l0aW9uVGltZW91dFxuICAgICAgICAgICAgOiBERUZBVUxUX0FDUVVJU0lUSU9OX1RJTUVPVVQ7XG4gICAgICAgIHJldHVybiBuZXcgUG9vbENvbmZpZyhtYXhTaXplLCBhY3F1aXNpdGlvblRpbWVvdXQpO1xuICAgIH07XG4gICAgcmV0dXJuIFBvb2xDb25maWc7XG59KCkpO1xuZXhwb3J0cy5kZWZhdWx0ID0gUG9vbENvbmZpZztcbmZ1bmN0aW9uIHZhbHVlT3JEZWZhdWx0KHZhbHVlLCBkZWZhdWx0VmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09IDAgfHwgdmFsdWUgPyB2YWx1ZSA6IGRlZmF1bHRWYWx1ZTtcbn1cbmZ1bmN0aW9uIGlzQ29uZmlndXJlZCh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSA9PT0gMCB8fCB2YWx1ZTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/pool/pool-config.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/pool/pool.js":
/*!********************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/pool/pool.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar pool_config_1 = __importDefault(__webpack_require__(/*! ./pool-config */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/pool/pool-config.js\"));\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar Logger = neo4j_driver_core_1.internal.logger.Logger;\nvar Pool = /** @class */ (function () {\n    /**\n     * @param {function(acquisitionContext: object, address: ServerAddress, function(address: ServerAddress, resource: object): Promise<object>): Promise<object>} create\n     *                an allocation function that creates a promise with a new resource. It's given an address for which to\n     *                allocate the connection and a function that will return the resource to the pool if invoked, which is\n     *                meant to be called on .dispose or .close or whatever mechanism the resource uses to finalize.\n     * @param {function(acquisitionContext: object, resource: object): boolean} validateOnAcquire\n     *                called at various times when an instance is acquired\n     *                If this returns false, the resource will be evicted\n     * @param {function(resource: object): boolean} validateOnRelease\n     *                called at various times when an instance is released\n     *                If this returns false, the resource will be evicted\n     * @param {function(resource: object): Promise<void>} destroy\n     *                called with the resource when it is evicted from this pool\n     * @param {function(resource: object, observer: { onError }): void} installIdleObserver\n     *                called when the resource is released back to pool\n     * @param {function(resource: object): void} removeIdleObserver\n     *                called when the resource is acquired from the pool\n     * @param {PoolConfig} config configuration for the new driver.\n     * @param {Logger} log the driver logger.\n     */\n    function Pool(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.create, create = _c === void 0 ? function (acquisitionContext, address, release) { return Promise.resolve(); } : _c, _d = _b.destroy, destroy = _d === void 0 ? function (conn) { return Promise.resolve(); } : _d, _e = _b.validateOnAcquire, validateOnAcquire = _e === void 0 ? function (acquisitionContext, conn) { return true; } : _e, _f = _b.validateOnRelease, validateOnRelease = _f === void 0 ? function (conn) { return true; } : _f, _g = _b.installIdleObserver, installIdleObserver = _g === void 0 ? function (conn, observer) { } : _g, _h = _b.removeIdleObserver, removeIdleObserver = _h === void 0 ? function (conn) { } : _h, _j = _b.config, config = _j === void 0 ? pool_config_1.default.defaultConfig() : _j, _k = _b.log, log = _k === void 0 ? Logger.noOp() : _k;\n        this._create = create;\n        this._destroy = destroy;\n        this._validateOnAcquire = validateOnAcquire;\n        this._validateOnRelease = validateOnRelease;\n        this._installIdleObserver = installIdleObserver;\n        this._removeIdleObserver = removeIdleObserver;\n        this._maxSize = config.maxSize;\n        this._acquisitionTimeout = config.acquisitionTimeout;\n        this._pools = {};\n        this._pendingCreates = {};\n        this._acquireRequests = {};\n        this._activeResourceCounts = {};\n        this._release = this._release.bind(this);\n        this._log = log;\n        this._closed = false;\n    }\n    /**\n     * Acquire and idle resource fom the pool or create a new one.\n     * @param {object} acquisitionContext the acquisition context used for create and validateOnAcquire connection\n     * @param {ServerAddress} address the address for which we're acquiring.\n     * @param {object} config the config\n     * @param {boolean} config.requireNew Indicate it requires a new resource\n     * @return {Promise<Object>} resource that is ready to use.\n     */\n    Pool.prototype.acquire = function (acquisitionContext, address, config) {\n        var _this = this;\n        var key = address.asKey();\n        // We're out of resources and will try to acquire later on when an existing resource is released.\n        var allRequests = this._acquireRequests;\n        var requests = allRequests[key];\n        if (!requests) {\n            allRequests[key] = [];\n        }\n        return new Promise(function (resolve, reject) {\n            var request = null;\n            var timeoutId = setTimeout(function () {\n                // acquisition timeout fired\n                // remove request from the queue of pending requests, if it's still there\n                // request might've been taken out by the release operation\n                var pendingRequests = allRequests[key];\n                if (pendingRequests) {\n                    allRequests[key] = pendingRequests.filter(function (item) { return item !== request; });\n                }\n                if (request.isCompleted()) {\n                    // request already resolved/rejected by the release operation; nothing to do\n                }\n                else {\n                    // request is still pending and needs to be failed\n                    var activeCount = _this.activeResourceCount(address);\n                    var idleCount = _this.has(address) ? _this._pools[key].length : 0;\n                    request.reject((0, neo4j_driver_core_1.newError)(\"Connection acquisition timed out in \".concat(_this._acquisitionTimeout, \" ms. Pool status: Active conn count = \").concat(activeCount, \", Idle conn count = \").concat(idleCount, \".\")));\n                }\n            }, _this._acquisitionTimeout);\n            request = new PendingRequest(key, acquisitionContext, config, resolve, reject, timeoutId, _this._log);\n            allRequests[key].push(request);\n            _this._processPendingAcquireRequests(address);\n        });\n    };\n    /**\n     * Destroy all idle resources for the given address.\n     * @param {ServerAddress} address the address of the server to purge its pool.\n     * @returns {Promise<void>} A promise that is resolved when the resources are purged\n     */\n    Pool.prototype.purge = function (address) {\n        return this._purgeKey(address.asKey());\n    };\n    Pool.prototype.apply = function (address, resourceConsumer) {\n        var key = address.asKey();\n        if (key in this._pools) {\n            this._pools[key].apply(resourceConsumer);\n        }\n    };\n    /**\n     * Destroy all idle resources in this pool.\n     * @returns {Promise<void>} A promise that is resolved when the resources are purged\n     */\n    Pool.prototype.close = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this._closed = true;\n                        return [4 /*yield*/, Promise.all(Object.keys(this._pools).map(function (key) { return _this._purgeKey(key); }))];\n                    case 1: \n                    /**\n                     * The lack of Promise consuming was making the driver do not close properly in the scenario\n                     * captured at result.test.js:it('should handle missing onCompleted'). The test was timing out\n                     * because while wainting for the driver close.\n                     *\n                     * Consuming the Promise.all or by calling then or by awaiting in the result inside this method solved\n                     * the issue somehow.\n                     *\n                     * PS: the return of this method was already awaited at PooledConnectionProvider.close, but the await bellow\n                     * seems to be need also.\n                     */\n                    return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Keep the idle resources for the provided addresses and purge the rest.\n     * @returns {Promise<void>} A promise that is resolved when the other resources are purged\n     */\n    Pool.prototype.keepAll = function (addresses) {\n        var _this = this;\n        var keysToKeep = addresses.map(function (a) { return a.asKey(); });\n        var keysPresent = Object.keys(this._pools);\n        var keysToPurge = keysPresent.filter(function (k) { return keysToKeep.indexOf(k) === -1; });\n        return Promise.all(keysToPurge.map(function (key) { return _this._purgeKey(key); }));\n    };\n    /**\n     * Check if this pool contains resources for the given address.\n     * @param {ServerAddress} address the address of the server to check.\n     * @return {boolean} `true` when pool contains entries for the given key, <code>false</code> otherwise.\n     */\n    Pool.prototype.has = function (address) {\n        return address.asKey() in this._pools;\n    };\n    /**\n     * Get count of active (checked out of the pool) resources for the given key.\n     * @param {ServerAddress} address the address of the server to check.\n     * @return {number} count of resources acquired by clients.\n     */\n    Pool.prototype.activeResourceCount = function (address) {\n        return this._activeResourceCounts[address.asKey()] || 0;\n    };\n    Pool.prototype._getOrInitializePoolFor = function (key) {\n        var pool = this._pools[key];\n        if (!pool) {\n            pool = new SingleAddressPool();\n            this._pools[key] = pool;\n            this._pendingCreates[key] = 0;\n        }\n        return pool;\n    };\n    Pool.prototype._acquire = function (acquisitionContext, address, requireNew) {\n        return __awaiter(this, void 0, void 0, function () {\n            var key, pool, resource_1, numConnections, resource, numConnections, resource_2;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this._closed) {\n                            throw (0, neo4j_driver_core_1.newError)('Pool is closed, it is no more able to serve requests.');\n                        }\n                        key = address.asKey();\n                        pool = this._getOrInitializePoolFor(key);\n                        if (!!requireNew) return [3 /*break*/, 6];\n                        _a.label = 1;\n                    case 1:\n                        if (!pool.length) return [3 /*break*/, 6];\n                        resource_1 = pool.pop();\n                        if (this._removeIdleObserver) {\n                            this._removeIdleObserver(resource_1);\n                        }\n                        return [4 /*yield*/, this._validateOnAcquire(acquisitionContext, resource_1)];\n                    case 2:\n                        if (!_a.sent()) return [3 /*break*/, 3];\n                        // idle resource is valid and can be acquired\n                        resourceAcquired(key, this._activeResourceCounts);\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug(\"\".concat(resource_1, \" acquired from the pool \").concat(key));\n                        }\n                        return [2 /*return*/, { resource: resource_1, pool: pool }];\n                    case 3:\n                        pool.removeInUse(resource_1);\n                        return [4 /*yield*/, this._destroy(resource_1)];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [3 /*break*/, 1];\n                    case 6:\n                        // Ensure requested max pool size\n                        if (this._maxSize > 0) {\n                            numConnections = this.activeResourceCount(address) + this._pendingCreates[key];\n                            if (numConnections >= this._maxSize) {\n                                // Will put this request in queue instead since the pool is full\n                                return [2 /*return*/, { resource: null, pool: pool }];\n                            }\n                        }\n                        // there exist no idle valid resources, create a new one for acquisition\n                        // Keep track of how many pending creates there are to avoid making too many connections.\n                        this._pendingCreates[key] = this._pendingCreates[key] + 1;\n                        _a.label = 7;\n                    case 7:\n                        _a.trys.push([7, , 11, 12]);\n                        numConnections = this.activeResourceCount(address) + pool.length;\n                        if (!(numConnections >= this._maxSize && requireNew)) return [3 /*break*/, 9];\n                        resource_2 = pool.pop();\n                        if (this._removeIdleObserver) {\n                            this._removeIdleObserver(resource_2);\n                        }\n                        pool.removeInUse(resource_2);\n                        return [4 /*yield*/, this._destroy(resource_2)];\n                    case 8:\n                        _a.sent();\n                        _a.label = 9;\n                    case 9: return [4 /*yield*/, this._create(acquisitionContext, address, function (address, resource) { return _this._release(address, resource, pool); })];\n                    case 10:\n                        // Invoke callback that creates actual connection\n                        resource = _a.sent();\n                        pool.pushInUse(resource);\n                        resourceAcquired(key, this._activeResourceCounts);\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug(\"\".concat(resource, \" created for the pool \").concat(key));\n                        }\n                        return [3 /*break*/, 12];\n                    case 11:\n                        this._pendingCreates[key] = this._pendingCreates[key] - 1;\n                        return [7 /*endfinally*/];\n                    case 12: return [2 /*return*/, { resource: resource, pool: pool }];\n                }\n            });\n        });\n    };\n    Pool.prototype._release = function (address, resource, pool) {\n        return __awaiter(this, void 0, void 0, function () {\n            var key;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        key = address.asKey();\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, , 9, 10]);\n                        if (!pool.isActive()) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this._validateOnRelease(resource)];\n                    case 2:\n                        if (!!(_a.sent())) return [3 /*break*/, 4];\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug(\"\".concat(resource, \" destroyed and can't be released to the pool \").concat(key, \" because it is not functional\"));\n                        }\n                        pool.removeInUse(resource);\n                        return [4 /*yield*/, this._destroy(resource)];\n                    case 3:\n                        _a.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        if (this._installIdleObserver) {\n                            this._installIdleObserver(resource, {\n                                onError: function (error) {\n                                    _this._log.debug(\"Idle connection \".concat(resource, \" destroyed because of error: \").concat(error));\n                                    var pool = _this._pools[key];\n                                    if (pool) {\n                                        _this._pools[key] = pool.filter(function (r) { return r !== resource; });\n                                        pool.removeInUse(resource);\n                                    }\n                                    // let's not care about background clean-ups due to errors but just trigger the destroy\n                                    // process for the resource, we especially catch any errors and ignore them to avoid\n                                    // unhandled promise rejection warnings\n                                    _this._destroy(resource).catch(function () { });\n                                }\n                            });\n                        }\n                        pool.push(resource);\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug(\"\".concat(resource, \" released to the pool \").concat(key));\n                        }\n                        _a.label = 5;\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        // key has been purged, don't put it back, just destroy the resource\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug(\"\".concat(resource, \" destroyed and can't be released to the pool \").concat(key, \" because pool has been purged\"));\n                        }\n                        pool.removeInUse(resource);\n                        return [4 /*yield*/, this._destroy(resource)];\n                    case 7:\n                        _a.sent();\n                        _a.label = 8;\n                    case 8: return [3 /*break*/, 10];\n                    case 9:\n                        resourceReleased(key, this._activeResourceCounts);\n                        this._processPendingAcquireRequests(address);\n                        return [7 /*endfinally*/];\n                    case 10: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Pool.prototype._purgeKey = function (key) {\n        return __awaiter(this, void 0, void 0, function () {\n            var pool, destructionList, resource;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        pool = this._pools[key];\n                        destructionList = [];\n                        if (!pool) return [3 /*break*/, 2];\n                        while (pool.length) {\n                            resource = pool.pop();\n                            if (this._removeIdleObserver) {\n                                this._removeIdleObserver(resource);\n                            }\n                            destructionList.push(this._destroy(resource));\n                        }\n                        pool.close();\n                        delete this._pools[key];\n                        return [4 /*yield*/, Promise.all(destructionList)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Pool.prototype._processPendingAcquireRequests = function (address) {\n        var _this = this;\n        var key = address.asKey();\n        var requests = this._acquireRequests[key];\n        if (requests) {\n            var pendingRequest_1 = requests.shift(); // pop a pending acquire request\n            if (pendingRequest_1) {\n                this._acquire(pendingRequest_1.context, address, pendingRequest_1.requireNew)\n                    .catch(function (error) {\n                    // failed to acquire/create a new connection to resolve the pending acquire request\n                    // propagate the error by failing the pending request\n                    pendingRequest_1.reject(error);\n                    return { resource: null };\n                })\n                    .then(function (_a) {\n                    var resource = _a.resource, pool = _a.pool;\n                    if (resource) {\n                        // managed to acquire a valid resource from the pool\n                        if (pendingRequest_1.isCompleted()) {\n                            // request has been completed, most likely failed by a timeout\n                            // return the acquired resource back to the pool\n                            _this._release(address, resource, pool);\n                        }\n                        else {\n                            // request is still pending and can be resolved with the newly acquired resource\n                            pendingRequest_1.resolve(resource); // resolve the pending request with the acquired resource\n                        }\n                    }\n                    else {\n                        // failed to acquire a valid resource from the pool\n                        // return the pending request back to the pool\n                        if (!pendingRequest_1.isCompleted()) {\n                            if (!_this._acquireRequests[key]) {\n                                _this._acquireRequests[key] = [];\n                            }\n                            _this._acquireRequests[key].unshift(pendingRequest_1);\n                        }\n                    }\n                });\n            }\n            else {\n                delete this._acquireRequests[key];\n            }\n        }\n    };\n    return Pool;\n}());\n/**\n * Increment active (checked out of the pool) resource counter.\n * @param {string} key the resource group identifier (server address for connections).\n * @param {Object.<string, number>} activeResourceCounts the object holding active counts per key.\n */\nfunction resourceAcquired(key, activeResourceCounts) {\n    var currentCount = activeResourceCounts[key] || 0;\n    activeResourceCounts[key] = currentCount + 1;\n}\n/**\n * Decrement active (checked out of the pool) resource counter.\n * @param {string} key the resource group identifier (server address for connections).\n * @param {Object.<string, number>} activeResourceCounts the object holding active counts per key.\n */\nfunction resourceReleased(key, activeResourceCounts) {\n    var currentCount = activeResourceCounts[key] || 0;\n    var nextCount = currentCount - 1;\n    if (nextCount > 0) {\n        activeResourceCounts[key] = nextCount;\n    }\n    else {\n        delete activeResourceCounts[key];\n    }\n}\nvar PendingRequest = /** @class */ (function () {\n    function PendingRequest(key, context, config, resolve, reject, timeoutId, log) {\n        this._key = key;\n        this._context = context;\n        this._resolve = resolve;\n        this._reject = reject;\n        this._timeoutId = timeoutId;\n        this._log = log;\n        this._completed = false;\n        this._config = config || {};\n    }\n    Object.defineProperty(PendingRequest.prototype, \"context\", {\n        get: function () {\n            return this._context;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PendingRequest.prototype, \"requireNew\", {\n        get: function () {\n            return this._config.requireNew || false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PendingRequest.prototype.isCompleted = function () {\n        return this._completed;\n    };\n    PendingRequest.prototype.resolve = function (resource) {\n        if (this._completed) {\n            return;\n        }\n        this._completed = true;\n        clearTimeout(this._timeoutId);\n        if (this._log.isDebugEnabled()) {\n            this._log.debug(\"\".concat(resource, \" acquired from the pool \").concat(this._key));\n        }\n        this._resolve(resource);\n    };\n    PendingRequest.prototype.reject = function (error) {\n        if (this._completed) {\n            return;\n        }\n        this._completed = true;\n        clearTimeout(this._timeoutId);\n        this._reject(error);\n    };\n    return PendingRequest;\n}());\nvar SingleAddressPool = /** @class */ (function () {\n    function SingleAddressPool() {\n        this._active = true;\n        this._elements = [];\n        this._elementsInUse = new Set();\n    }\n    SingleAddressPool.prototype.isActive = function () {\n        return this._active;\n    };\n    SingleAddressPool.prototype.close = function () {\n        this._active = false;\n        this._elements = [];\n        this._elementsInUse = new Set();\n    };\n    SingleAddressPool.prototype.filter = function (predicate) {\n        this._elements = this._elements.filter(predicate);\n        return this;\n    };\n    SingleAddressPool.prototype.apply = function (resourceConsumer) {\n        this._elements.forEach(resourceConsumer);\n        this._elementsInUse.forEach(resourceConsumer);\n    };\n    Object.defineProperty(SingleAddressPool.prototype, \"length\", {\n        get: function () {\n            return this._elements.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SingleAddressPool.prototype.pop = function () {\n        var element = this._elements.pop();\n        this._elementsInUse.add(element);\n        return element;\n    };\n    SingleAddressPool.prototype.push = function (element) {\n        this._elementsInUse.delete(element);\n        return this._elements.push(element);\n    };\n    SingleAddressPool.prototype.pushInUse = function (element) {\n        this._elementsInUse.add(element);\n    };\n    SingleAddressPool.prototype.removeInUse = function (element) {\n        this._elementsInUse.delete(element);\n    };\n    return SingleAddressPool;\n}());\nexports[\"default\"] = Pool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/pool/pool.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/rediscovery/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/rediscovery/index.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RoutingTable = exports.Rediscovery = void 0;\nvar rediscovery_1 = __importDefault(__webpack_require__(/*! ./rediscovery */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/rediscovery/rediscovery.js\"));\nexports.Rediscovery = rediscovery_1.default;\nvar routing_table_1 = __importDefault(__webpack_require__(/*! ./routing-table */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/rediscovery/routing-table.js\"));\nexports.RoutingTable = routing_table_1.default;\nexports[\"default\"] = rediscovery_1.default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvcmVkaXNjb3ZlcnkvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQixHQUFHLG1CQUFtQjtBQUMxQyxvQ0FBb0MsbUJBQU8sQ0FBQyx1R0FBZTtBQUMzRCxtQkFBbUI7QUFDbkIsc0NBQXNDLG1CQUFPLENBQUMsMkdBQWlCO0FBQy9ELG9CQUFvQjtBQUNwQixrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL25lbzRqLW5leHQtYXBwLy4vbm9kZV9tb2R1bGVzL25lbzRqLWRyaXZlci1ib2x0LWNvbm5lY3Rpb24vbGliL3JlZGlzY292ZXJ5L2luZGV4LmpzPzkzNmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIENvcHlyaWdodCAoYykgXCJOZW80alwiXG4gKiBOZW80aiBTd2VkZW4gQUIgW2h0dHBzOi8vbmVvNGouY29tXVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Sb3V0aW5nVGFibGUgPSBleHBvcnRzLlJlZGlzY292ZXJ5ID0gdm9pZCAwO1xudmFyIHJlZGlzY292ZXJ5XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vcmVkaXNjb3ZlcnlcIikpO1xuZXhwb3J0cy5SZWRpc2NvdmVyeSA9IHJlZGlzY292ZXJ5XzEuZGVmYXVsdDtcbnZhciByb3V0aW5nX3RhYmxlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vcm91dGluZy10YWJsZVwiKSk7XG5leHBvcnRzLlJvdXRpbmdUYWJsZSA9IHJvdXRpbmdfdGFibGVfMS5kZWZhdWx0O1xuZXhwb3J0cy5kZWZhdWx0ID0gcmVkaXNjb3ZlcnlfMS5kZWZhdWx0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/rediscovery/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/rediscovery/rediscovery.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/rediscovery/rediscovery.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar routing_table_1 = __importDefault(__webpack_require__(/*! ./routing-table */ \"(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/rediscovery/routing-table.js\"));\n// eslint-disable-next-line no-unused-vars\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar Rediscovery = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param {object} routingContext\n     */\n    function Rediscovery(routingContext) {\n        this._routingContext = routingContext;\n    }\n    /**\n     * Try to fetch new routing table from the given router.\n     * @param {Session} session the session to use.\n     * @param {string} database the database for which to lookup routing table.\n     * @param {ServerAddress} routerAddress the URL of the router.\n     * @param {string} impersonatedUser The impersonated user\n     * @return {Promise<RoutingTable>} promise resolved with new routing table or null when connection error happened.\n     */\n    Rediscovery.prototype.lookupRoutingTableOnRouter = function (session, database, routerAddress, impersonatedUser) {\n        var _this = this;\n        return session._acquireConnection(function (connection) {\n            return _this._requestRawRoutingTable(connection, session, database, routerAddress, impersonatedUser).then(function (rawRoutingTable) {\n                if (rawRoutingTable.isNull) {\n                    return null;\n                }\n                return routing_table_1.default.fromRawRoutingTable(database, routerAddress, rawRoutingTable);\n            });\n        });\n    };\n    Rediscovery.prototype._requestRawRoutingTable = function (connection, session, database, routerAddress, impersonatedUser) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            connection.protocol().requestRoutingInformation({\n                routingContext: _this._routingContext,\n                databaseName: database,\n                impersonatedUser: impersonatedUser,\n                sessionContext: {\n                    bookmarks: session._lastBookmarks,\n                    mode: session._mode,\n                    database: session._database,\n                    afterComplete: session._onComplete\n                },\n                onCompleted: resolve,\n                onError: reject\n            });\n        });\n    };\n    return Rediscovery;\n}());\nexports[\"default\"] = Rediscovery;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvcmVkaXNjb3ZlcnkvcmVkaXNjb3ZlcnkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxtQkFBTyxDQUFDLDJHQUFpQjtBQUMvRDtBQUNBLDBCQUEwQixtQkFBTyxDQUFDLDhFQUFtQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCLGVBQWUsUUFBUTtBQUN2QixlQUFlLGVBQWU7QUFDOUIsZUFBZSxRQUFRO0FBQ3ZCLGdCQUFnQix1QkFBdUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmVvNGotbmV4dC1hcHAvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvcmVkaXNjb3ZlcnkvcmVkaXNjb3ZlcnkuanM/MzE2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qKlxuICogQ29weXJpZ2h0IChjKSBcIk5lbzRqXCJcbiAqIE5lbzRqIFN3ZWRlbiBBQiBbaHR0cHM6Ly9uZW80ai5jb21dXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgcm91dGluZ190YWJsZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3JvdXRpbmctdGFibGVcIikpO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG52YXIgbmVvNGpfZHJpdmVyX2NvcmVfMSA9IHJlcXVpcmUoXCJuZW80ai1kcml2ZXItY29yZVwiKTtcbnZhciBSZWRpc2NvdmVyeSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICAvKipcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gcm91dGluZ0NvbnRleHRcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBSZWRpc2NvdmVyeShyb3V0aW5nQ29udGV4dCkge1xuICAgICAgICB0aGlzLl9yb3V0aW5nQ29udGV4dCA9IHJvdXRpbmdDb250ZXh0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUcnkgdG8gZmV0Y2ggbmV3IHJvdXRpbmcgdGFibGUgZnJvbSB0aGUgZ2l2ZW4gcm91dGVyLlxuICAgICAqIEBwYXJhbSB7U2Vzc2lvbn0gc2Vzc2lvbiB0aGUgc2Vzc2lvbiB0byB1c2UuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGFiYXNlIHRoZSBkYXRhYmFzZSBmb3Igd2hpY2ggdG8gbG9va3VwIHJvdXRpbmcgdGFibGUuXG4gICAgICogQHBhcmFtIHtTZXJ2ZXJBZGRyZXNzfSByb3V0ZXJBZGRyZXNzIHRoZSBVUkwgb2YgdGhlIHJvdXRlci5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gaW1wZXJzb25hdGVkVXNlciBUaGUgaW1wZXJzb25hdGVkIHVzZXJcbiAgICAgKiBAcmV0dXJuIHtQcm9taXNlPFJvdXRpbmdUYWJsZT59IHByb21pc2UgcmVzb2x2ZWQgd2l0aCBuZXcgcm91dGluZyB0YWJsZSBvciBudWxsIHdoZW4gY29ubmVjdGlvbiBlcnJvciBoYXBwZW5lZC5cbiAgICAgKi9cbiAgICBSZWRpc2NvdmVyeS5wcm90b3R5cGUubG9va3VwUm91dGluZ1RhYmxlT25Sb3V0ZXIgPSBmdW5jdGlvbiAoc2Vzc2lvbiwgZGF0YWJhc2UsIHJvdXRlckFkZHJlc3MsIGltcGVyc29uYXRlZFVzZXIpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgcmV0dXJuIHNlc3Npb24uX2FjcXVpcmVDb25uZWN0aW9uKGZ1bmN0aW9uIChjb25uZWN0aW9uKSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMuX3JlcXVlc3RSYXdSb3V0aW5nVGFibGUoY29ubmVjdGlvbiwgc2Vzc2lvbiwgZGF0YWJhc2UsIHJvdXRlckFkZHJlc3MsIGltcGVyc29uYXRlZFVzZXIpLnRoZW4oZnVuY3Rpb24gKHJhd1JvdXRpbmdUYWJsZSkge1xuICAgICAgICAgICAgICAgIGlmIChyYXdSb3V0aW5nVGFibGUuaXNOdWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gcm91dGluZ190YWJsZV8xLmRlZmF1bHQuZnJvbVJhd1JvdXRpbmdUYWJsZShkYXRhYmFzZSwgcm91dGVyQWRkcmVzcywgcmF3Um91dGluZ1RhYmxlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIFJlZGlzY292ZXJ5LnByb3RvdHlwZS5fcmVxdWVzdFJhd1JvdXRpbmdUYWJsZSA9IGZ1bmN0aW9uIChjb25uZWN0aW9uLCBzZXNzaW9uLCBkYXRhYmFzZSwgcm91dGVyQWRkcmVzcywgaW1wZXJzb25hdGVkVXNlcikge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICAgICAgY29ubmVjdGlvbi5wcm90b2NvbCgpLnJlcXVlc3RSb3V0aW5nSW5mb3JtYXRpb24oe1xuICAgICAgICAgICAgICAgIHJvdXRpbmdDb250ZXh0OiBfdGhpcy5fcm91dGluZ0NvbnRleHQsXG4gICAgICAgICAgICAgICAgZGF0YWJhc2VOYW1lOiBkYXRhYmFzZSxcbiAgICAgICAgICAgICAgICBpbXBlcnNvbmF0ZWRVc2VyOiBpbXBlcnNvbmF0ZWRVc2VyLFxuICAgICAgICAgICAgICAgIHNlc3Npb25Db250ZXh0OiB7XG4gICAgICAgICAgICAgICAgICAgIGJvb2ttYXJrczogc2Vzc2lvbi5fbGFzdEJvb2ttYXJrcyxcbiAgICAgICAgICAgICAgICAgICAgbW9kZTogc2Vzc2lvbi5fbW9kZSxcbiAgICAgICAgICAgICAgICAgICAgZGF0YWJhc2U6IHNlc3Npb24uX2RhdGFiYXNlLFxuICAgICAgICAgICAgICAgICAgICBhZnRlckNvbXBsZXRlOiBzZXNzaW9uLl9vbkNvbXBsZXRlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBvbkNvbXBsZXRlZDogcmVzb2x2ZSxcbiAgICAgICAgICAgICAgICBvbkVycm9yOiByZWplY3RcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiBSZWRpc2NvdmVyeTtcbn0oKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBSZWRpc2NvdmVyeTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/rediscovery/rediscovery.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/rediscovery/routing-table.js":
/*!************************************************************************************!*\
  !*** ./node_modules/neo4j-driver-bolt-connection/lib/rediscovery/routing-table.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createValidRoutingTable = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar neo4j_driver_core_1 = __webpack_require__(/*! neo4j-driver-core */ \"(rsc)/./node_modules/neo4j-driver-core/lib/index.js\");\nvar _a = neo4j_driver_core_1.internal.constants, WRITE = _a.ACCESS_MODE_WRITE, READ = _a.ACCESS_MODE_READ, ServerAddress = neo4j_driver_core_1.internal.serverAddress.ServerAddress;\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\nvar MIN_ROUTERS = 1;\n/**\n * The routing table object used to determine the role of the servers in the driver.\n */\nvar RoutingTable = /** @class */ (function () {\n    function RoutingTable(_a) {\n        var _b = _a === void 0 ? {} : _a, database = _b.database, routers = _b.routers, readers = _b.readers, writers = _b.writers, expirationTime = _b.expirationTime, ttl = _b.ttl;\n        this.database = database || null;\n        this.databaseName = database || 'default database';\n        this.routers = routers || [];\n        this.readers = readers || [];\n        this.writers = writers || [];\n        this.expirationTime = expirationTime || (0, neo4j_driver_core_1.int)(0);\n        this.ttl = ttl;\n    }\n    /**\n     * Create a valid routing table from a raw object\n     *\n     * @param {string} database the database name. It is used for logging purposes\n     * @param {ServerAddress} routerAddress The router address, it is used for loggin purposes\n     * @param {RawRoutingTable} rawRoutingTable Method used to get the raw routing table to be processed\n     * @param {RoutingTable} The valid Routing Table\n     */\n    RoutingTable.fromRawRoutingTable = function (database, routerAddress, rawRoutingTable) {\n        return createValidRoutingTable(database, routerAddress, rawRoutingTable);\n    };\n    RoutingTable.prototype.forget = function (address) {\n        // Don't remove it from the set of routers, since that might mean we lose our ability to re-discover,\n        // just remove it from the set of readers and writers, so that we don't use it for actual work without\n        // performing discovery first.\n        this.readers = removeFromArray(this.readers, address);\n        this.writers = removeFromArray(this.writers, address);\n    };\n    RoutingTable.prototype.forgetRouter = function (address) {\n        this.routers = removeFromArray(this.routers, address);\n    };\n    RoutingTable.prototype.forgetWriter = function (address) {\n        this.writers = removeFromArray(this.writers, address);\n    };\n    /**\n     * Check if this routing table is fresh to perform the required operation.\n     * @param {string} accessMode the type of operation. Allowed values are {@link READ} and {@link WRITE}.\n     * @return {boolean} `true` when this table contains servers to serve the required operation, `false` otherwise.\n     */\n    RoutingTable.prototype.isStaleFor = function (accessMode) {\n        return (this.expirationTime.lessThan(Date.now()) ||\n            this.routers.length < MIN_ROUTERS ||\n            (accessMode === READ && this.readers.length === 0) ||\n            (accessMode === WRITE && this.writers.length === 0));\n    };\n    /**\n     * Check if this routing table is expired for specified amount of duration\n     *\n     * @param {Integer} duration amount of duration in milliseconds to check for expiration\n     * @returns {boolean}\n     */\n    RoutingTable.prototype.isExpiredFor = function (duration) {\n        return this.expirationTime.add(duration).lessThan(Date.now());\n    };\n    RoutingTable.prototype.allServers = function () {\n        return __spreadArray(__spreadArray(__spreadArray([], __read(this.routers), false), __read(this.readers), false), __read(this.writers), false);\n    };\n    RoutingTable.prototype.toString = function () {\n        return ('RoutingTable[' +\n            \"database=\".concat(this.databaseName, \", \") +\n            \"expirationTime=\".concat(this.expirationTime, \", \") +\n            \"currentTime=\".concat(Date.now(), \", \") +\n            \"routers=[\".concat(this.routers, \"], \") +\n            \"readers=[\".concat(this.readers, \"], \") +\n            \"writers=[\".concat(this.writers, \"]]\"));\n    };\n    return RoutingTable;\n}());\nexports[\"default\"] = RoutingTable;\n/**\n * Remove all occurrences of the element in the array.\n * @param {Array} array the array to filter.\n * @param {Object} element the element to remove.\n * @return {Array} new filtered array.\n */\nfunction removeFromArray(array, element) {\n    return array.filter(function (item) { return item.asKey() !== element.asKey(); });\n}\n/**\n * Create a valid routing table from a raw object\n *\n * @param {string} db the database name. It is used for logging purposes\n * @param {ServerAddress} routerAddress The router address, it is used for loggin purposes\n * @param {RawRoutingTable} rawRoutingTable Method used to get the raw routing table to be processed\n * @param {RoutingTable} The valid Routing Table\n */\nfunction createValidRoutingTable(database, routerAddress, rawRoutingTable) {\n    var ttl = rawRoutingTable.ttl;\n    var expirationTime = calculateExpirationTime(rawRoutingTable, routerAddress);\n    var _a = parseServers(rawRoutingTable, routerAddress), routers = _a.routers, readers = _a.readers, writers = _a.writers;\n    assertNonEmpty(routers, 'routers', routerAddress);\n    assertNonEmpty(readers, 'readers', routerAddress);\n    return new RoutingTable({\n        database: database || rawRoutingTable.db,\n        routers: routers,\n        readers: readers,\n        writers: writers,\n        expirationTime: expirationTime,\n        ttl: ttl\n    });\n}\nexports.createValidRoutingTable = createValidRoutingTable;\n/**\n * Parse server from the RawRoutingTable.\n *\n * @param {RawRoutingTable} rawRoutingTable the raw routing table\n * @param {string} routerAddress the router address\n * @returns {Object} The object with the list of routers, readers and writers\n */\nfunction parseServers(rawRoutingTable, routerAddress) {\n    try {\n        var routers_1 = [];\n        var readers_1 = [];\n        var writers_1 = [];\n        rawRoutingTable.servers.forEach(function (server) {\n            var role = server.role;\n            var addresses = server.addresses;\n            if (role === 'ROUTE') {\n                routers_1 = parseArray(addresses).map(function (address) {\n                    return ServerAddress.fromUrl(address);\n                });\n            }\n            else if (role === 'WRITE') {\n                writers_1 = parseArray(addresses).map(function (address) {\n                    return ServerAddress.fromUrl(address);\n                });\n            }\n            else if (role === 'READ') {\n                readers_1 = parseArray(addresses).map(function (address) {\n                    return ServerAddress.fromUrl(address);\n                });\n            }\n        });\n        return {\n            routers: routers_1,\n            readers: readers_1,\n            writers: writers_1\n        };\n    }\n    catch (error) {\n        throw (0, neo4j_driver_core_1.newError)(\"Unable to parse servers entry from router \".concat(routerAddress, \" from addresses:\\n\").concat(neo4j_driver_core_1.json.stringify(rawRoutingTable.servers), \"\\nError message: \").concat(error.message), PROTOCOL_ERROR);\n    }\n}\n/**\n * Call the expiration time using the ttls from the raw routing table and return it\n *\n * @param {RawRoutingTable} rawRoutingTable the routing table\n * @param {string} routerAddress the router address\n * @returns {number} the ttl\n */\nfunction calculateExpirationTime(rawRoutingTable, routerAddress) {\n    try {\n        var now = (0, neo4j_driver_core_1.int)(Date.now());\n        var expires = (0, neo4j_driver_core_1.int)(rawRoutingTable.ttl)\n            .multiply(1000)\n            .add(now);\n        // if the server uses a really big expire time like Long.MAX_VALUE this may have overflowed\n        if (expires.lessThan(now)) {\n            return neo4j_driver_core_1.Integer.MAX_VALUE;\n        }\n        return expires;\n    }\n    catch (error) {\n        throw (0, neo4j_driver_core_1.newError)(\"Unable to parse TTL entry from router \".concat(routerAddress, \" from raw routing table:\\n\").concat(neo4j_driver_core_1.json.stringify(rawRoutingTable), \"\\nError message: \").concat(error.message), PROTOCOL_ERROR);\n    }\n}\n/**\n * Assert if serverAddressesArray is not empty, throws and PROTOCOL_ERROR otherwise\n *\n * @param {string[]} serverAddressesArray array of addresses\n * @param {string} serversName the server name\n * @param {string} routerAddress the router address\n */\nfunction assertNonEmpty(serverAddressesArray, serversName, routerAddress) {\n    if (serverAddressesArray.length === 0) {\n        throw (0, neo4j_driver_core_1.newError)('Received no ' + serversName + ' from router ' + routerAddress, PROTOCOL_ERROR);\n    }\n}\nfunction parseArray(addresses) {\n    if (!Array.isArray(addresses)) {\n        throw new TypeError('Array expected but got: ' + addresses);\n    }\n    return Array.from(addresses);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmVvNGotZHJpdmVyLWJvbHQtY29ubmVjdGlvbi9saWIvcmVkaXNjb3Zlcnkvcm91dGluZy10YWJsZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLE1BQU07QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RUFBNkUsT0FBTztBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsbUJBQU8sQ0FBQyw4RUFBbUI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsZUFBZTtBQUM5QixlQUFlLGlCQUFpQjtBQUNoQyxlQUFlLGNBQWM7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVEsc0RBQXNELFlBQVksS0FBSyxZQUFZO0FBQzFHLGdCQUFnQixTQUFTO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFlO0FBQ2Y7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLFFBQVE7QUFDbkIsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQSwwQ0FBMEMsMENBQTBDO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixXQUFXLGlCQUFpQjtBQUM1QixXQUFXLGNBQWM7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQSxXQUFXLGlCQUFpQjtBQUM1QixXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsaUJBQWlCO0FBQzVCLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL25lbzRqLW5leHQtYXBwLy4vbm9kZV9tb2R1bGVzL25lbzRqLWRyaXZlci1ib2x0LWNvbm5lY3Rpb24vbGliL3JlZGlzY292ZXJ5L3JvdXRpbmctdGFibGUuanM/OGMwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX3JlYWQgPSAodGhpcyAmJiB0aGlzLl9fcmVhZCkgfHwgZnVuY3Rpb24gKG8sIG4pIHtcbiAgICB2YXIgbSA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvW1N5bWJvbC5pdGVyYXRvcl07XG4gICAgaWYgKCFtKSByZXR1cm4gbztcbiAgICB2YXIgaSA9IG0uY2FsbChvKSwgciwgYXIgPSBbXSwgZTtcbiAgICB0cnkge1xuICAgICAgICB3aGlsZSAoKG4gPT09IHZvaWQgMCB8fCBuLS0gPiAwKSAmJiAhKHIgPSBpLm5leHQoKSkuZG9uZSkgYXIucHVzaChyLnZhbHVlKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7IGUgPSB7IGVycm9yOiBlcnJvciB9OyB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAociAmJiAhci5kb25lICYmIChtID0gaVtcInJldHVyblwiXSkpIG0uY2FsbChpKTtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHsgaWYgKGUpIHRocm93IGUuZXJyb3I7IH1cbiAgICB9XG4gICAgcmV0dXJuIGFyO1xufTtcbnZhciBfX3NwcmVhZEFycmF5ID0gKHRoaXMgJiYgdGhpcy5fX3NwcmVhZEFycmF5KSB8fCBmdW5jdGlvbiAodG8sIGZyb20sIHBhY2spIHtcbiAgICBpZiAocGFjayB8fCBhcmd1bWVudHMubGVuZ3RoID09PSAyKSBmb3IgKHZhciBpID0gMCwgbCA9IGZyb20ubGVuZ3RoLCBhcjsgaSA8IGw7IGkrKykge1xuICAgICAgICBpZiAoYXIgfHwgIShpIGluIGZyb20pKSB7XG4gICAgICAgICAgICBpZiAoIWFyKSBhciA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGZyb20sIDAsIGkpO1xuICAgICAgICAgICAgYXJbaV0gPSBmcm9tW2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0by5jb25jYXQoYXIgfHwgQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZnJvbSkpO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlVmFsaWRSb3V0aW5nVGFibGUgPSB2b2lkIDA7XG4vKipcbiAqIENvcHlyaWdodCAoYykgXCJOZW80alwiXG4gKiBOZW80aiBTd2VkZW4gQUIgW2h0dHBzOi8vbmVvNGouY29tXVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIG5lbzRqX2RyaXZlcl9jb3JlXzEgPSByZXF1aXJlKFwibmVvNGotZHJpdmVyLWNvcmVcIik7XG52YXIgX2EgPSBuZW80al9kcml2ZXJfY29yZV8xLmludGVybmFsLmNvbnN0YW50cywgV1JJVEUgPSBfYS5BQ0NFU1NfTU9ERV9XUklURSwgUkVBRCA9IF9hLkFDQ0VTU19NT0RFX1JFQUQsIFNlcnZlckFkZHJlc3MgPSBuZW80al9kcml2ZXJfY29yZV8xLmludGVybmFsLnNlcnZlckFkZHJlc3MuU2VydmVyQWRkcmVzcztcbnZhciBQUk9UT0NPTF9FUlJPUiA9IG5lbzRqX2RyaXZlcl9jb3JlXzEuZXJyb3IuUFJPVE9DT0xfRVJST1I7XG52YXIgTUlOX1JPVVRFUlMgPSAxO1xuLyoqXG4gKiBUaGUgcm91dGluZyB0YWJsZSBvYmplY3QgdXNlZCB0byBkZXRlcm1pbmUgdGhlIHJvbGUgb2YgdGhlIHNlcnZlcnMgaW4gdGhlIGRyaXZlci5cbiAqL1xudmFyIFJvdXRpbmdUYWJsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBSb3V0aW5nVGFibGUoX2EpIHtcbiAgICAgICAgdmFyIF9iID0gX2EgPT09IHZvaWQgMCA/IHt9IDogX2EsIGRhdGFiYXNlID0gX2IuZGF0YWJhc2UsIHJvdXRlcnMgPSBfYi5yb3V0ZXJzLCByZWFkZXJzID0gX2IucmVhZGVycywgd3JpdGVycyA9IF9iLndyaXRlcnMsIGV4cGlyYXRpb25UaW1lID0gX2IuZXhwaXJhdGlvblRpbWUsIHR0bCA9IF9iLnR0bDtcbiAgICAgICAgdGhpcy5kYXRhYmFzZSA9IGRhdGFiYXNlIHx8IG51bGw7XG4gICAgICAgIHRoaXMuZGF0YWJhc2VOYW1lID0gZGF0YWJhc2UgfHwgJ2RlZmF1bHQgZGF0YWJhc2UnO1xuICAgICAgICB0aGlzLnJvdXRlcnMgPSByb3V0ZXJzIHx8IFtdO1xuICAgICAgICB0aGlzLnJlYWRlcnMgPSByZWFkZXJzIHx8IFtdO1xuICAgICAgICB0aGlzLndyaXRlcnMgPSB3cml0ZXJzIHx8IFtdO1xuICAgICAgICB0aGlzLmV4cGlyYXRpb25UaW1lID0gZXhwaXJhdGlvblRpbWUgfHwgKDAsIG5lbzRqX2RyaXZlcl9jb3JlXzEuaW50KSgwKTtcbiAgICAgICAgdGhpcy50dGwgPSB0dGw7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIHZhbGlkIHJvdXRpbmcgdGFibGUgZnJvbSBhIHJhdyBvYmplY3RcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhYmFzZSB0aGUgZGF0YWJhc2UgbmFtZS4gSXQgaXMgdXNlZCBmb3IgbG9nZ2luZyBwdXJwb3Nlc1xuICAgICAqIEBwYXJhbSB7U2VydmVyQWRkcmVzc30gcm91dGVyQWRkcmVzcyBUaGUgcm91dGVyIGFkZHJlc3MsIGl0IGlzIHVzZWQgZm9yIGxvZ2dpbiBwdXJwb3Nlc1xuICAgICAqIEBwYXJhbSB7UmF3Um91dGluZ1RhYmxlfSByYXdSb3V0aW5nVGFibGUgTWV0aG9kIHVzZWQgdG8gZ2V0IHRoZSByYXcgcm91dGluZyB0YWJsZSB0byBiZSBwcm9jZXNzZWRcbiAgICAgKiBAcGFyYW0ge1JvdXRpbmdUYWJsZX0gVGhlIHZhbGlkIFJvdXRpbmcgVGFibGVcbiAgICAgKi9cbiAgICBSb3V0aW5nVGFibGUuZnJvbVJhd1JvdXRpbmdUYWJsZSA9IGZ1bmN0aW9uIChkYXRhYmFzZSwgcm91dGVyQWRkcmVzcywgcmF3Um91dGluZ1RhYmxlKSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVWYWxpZFJvdXRpbmdUYWJsZShkYXRhYmFzZSwgcm91dGVyQWRkcmVzcywgcmF3Um91dGluZ1RhYmxlKTtcbiAgICB9O1xuICAgIFJvdXRpbmdUYWJsZS5wcm90b3R5cGUuZm9yZ2V0ID0gZnVuY3Rpb24gKGFkZHJlc3MpIHtcbiAgICAgICAgLy8gRG9uJ3QgcmVtb3ZlIGl0IGZyb20gdGhlIHNldCBvZiByb3V0ZXJzLCBzaW5jZSB0aGF0IG1pZ2h0IG1lYW4gd2UgbG9zZSBvdXIgYWJpbGl0eSB0byByZS1kaXNjb3ZlcixcbiAgICAgICAgLy8ganVzdCByZW1vdmUgaXQgZnJvbSB0aGUgc2V0IG9mIHJlYWRlcnMgYW5kIHdyaXRlcnMsIHNvIHRoYXQgd2UgZG9uJ3QgdXNlIGl0IGZvciBhY3R1YWwgd29yayB3aXRob3V0XG4gICAgICAgIC8vIHBlcmZvcm1pbmcgZGlzY292ZXJ5IGZpcnN0LlxuICAgICAgICB0aGlzLnJlYWRlcnMgPSByZW1vdmVGcm9tQXJyYXkodGhpcy5yZWFkZXJzLCBhZGRyZXNzKTtcbiAgICAgICAgdGhpcy53cml0ZXJzID0gcmVtb3ZlRnJvbUFycmF5KHRoaXMud3JpdGVycywgYWRkcmVzcyk7XG4gICAgfTtcbiAgICBSb3V0aW5nVGFibGUucHJvdG90eXBlLmZvcmdldFJvdXRlciA9IGZ1bmN0aW9uIChhZGRyZXNzKSB7XG4gICAgICAgIHRoaXMucm91dGVycyA9IHJlbW92ZUZyb21BcnJheSh0aGlzLnJvdXRlcnMsIGFkZHJlc3MpO1xuICAgIH07XG4gICAgUm91dGluZ1RhYmxlLnByb3RvdHlwZS5mb3JnZXRXcml0ZXIgPSBmdW5jdGlvbiAoYWRkcmVzcykge1xuICAgICAgICB0aGlzLndyaXRlcnMgPSByZW1vdmVGcm9tQXJyYXkodGhpcy53cml0ZXJzLCBhZGRyZXNzKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIENoZWNrIGlmIHRoaXMgcm91dGluZyB0YWJsZSBpcyBmcmVzaCB0byBwZXJmb3JtIHRoZSByZXF1aXJlZCBvcGVyYXRpb24uXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGFjY2Vzc01vZGUgdGhlIHR5cGUgb2Ygb3BlcmF0aW9uLiBBbGxvd2VkIHZhbHVlcyBhcmUge0BsaW5rIFJFQUR9IGFuZCB7QGxpbmsgV1JJVEV9LlxuICAgICAqIEByZXR1cm4ge2Jvb2xlYW59IGB0cnVlYCB3aGVuIHRoaXMgdGFibGUgY29udGFpbnMgc2VydmVycyB0byBzZXJ2ZSB0aGUgcmVxdWlyZWQgb3BlcmF0aW9uLCBgZmFsc2VgIG90aGVyd2lzZS5cbiAgICAgKi9cbiAgICBSb3V0aW5nVGFibGUucHJvdG90eXBlLmlzU3RhbGVGb3IgPSBmdW5jdGlvbiAoYWNjZXNzTW9kZSkge1xuICAgICAgICByZXR1cm4gKHRoaXMuZXhwaXJhdGlvblRpbWUubGVzc1RoYW4oRGF0ZS5ub3coKSkgfHxcbiAgICAgICAgICAgIHRoaXMucm91dGVycy5sZW5ndGggPCBNSU5fUk9VVEVSUyB8fFxuICAgICAgICAgICAgKGFjY2Vzc01vZGUgPT09IFJFQUQgJiYgdGhpcy5yZWFkZXJzLmxlbmd0aCA9PT0gMCkgfHxcbiAgICAgICAgICAgIChhY2Nlc3NNb2RlID09PSBXUklURSAmJiB0aGlzLndyaXRlcnMubGVuZ3RoID09PSAwKSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBDaGVjayBpZiB0aGlzIHJvdXRpbmcgdGFibGUgaXMgZXhwaXJlZCBmb3Igc3BlY2lmaWVkIGFtb3VudCBvZiBkdXJhdGlvblxuICAgICAqXG4gICAgICogQHBhcmFtIHtJbnRlZ2VyfSBkdXJhdGlvbiBhbW91bnQgb2YgZHVyYXRpb24gaW4gbWlsbGlzZWNvbmRzIHRvIGNoZWNrIGZvciBleHBpcmF0aW9uXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAgICovXG4gICAgUm91dGluZ1RhYmxlLnByb3RvdHlwZS5pc0V4cGlyZWRGb3IgPSBmdW5jdGlvbiAoZHVyYXRpb24pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXhwaXJhdGlvblRpbWUuYWRkKGR1cmF0aW9uKS5sZXNzVGhhbihEYXRlLm5vdygpKTtcbiAgICB9O1xuICAgIFJvdXRpbmdUYWJsZS5wcm90b3R5cGUuYWxsU2VydmVycyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF9fc3ByZWFkQXJyYXkoX19zcHJlYWRBcnJheShfX3NwcmVhZEFycmF5KFtdLCBfX3JlYWQodGhpcy5yb3V0ZXJzKSwgZmFsc2UpLCBfX3JlYWQodGhpcy5yZWFkZXJzKSwgZmFsc2UpLCBfX3JlYWQodGhpcy53cml0ZXJzKSwgZmFsc2UpO1xuICAgIH07XG4gICAgUm91dGluZ1RhYmxlLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICgnUm91dGluZ1RhYmxlWycgK1xuICAgICAgICAgICAgXCJkYXRhYmFzZT1cIi5jb25jYXQodGhpcy5kYXRhYmFzZU5hbWUsIFwiLCBcIikgK1xuICAgICAgICAgICAgXCJleHBpcmF0aW9uVGltZT1cIi5jb25jYXQodGhpcy5leHBpcmF0aW9uVGltZSwgXCIsIFwiKSArXG4gICAgICAgICAgICBcImN1cnJlbnRUaW1lPVwiLmNvbmNhdChEYXRlLm5vdygpLCBcIiwgXCIpICtcbiAgICAgICAgICAgIFwicm91dGVycz1bXCIuY29uY2F0KHRoaXMucm91dGVycywgXCJdLCBcIikgK1xuICAgICAgICAgICAgXCJyZWFkZXJzPVtcIi5jb25jYXQodGhpcy5yZWFkZXJzLCBcIl0sIFwiKSArXG4gICAgICAgICAgICBcIndyaXRlcnM9W1wiLmNvbmNhdCh0aGlzLndyaXRlcnMsIFwiXV1cIikpO1xuICAgIH07XG4gICAgcmV0dXJuIFJvdXRpbmdUYWJsZTtcbn0oKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBSb3V0aW5nVGFibGU7XG4vKipcbiAqIFJlbW92ZSBhbGwgb2NjdXJyZW5jZXMgb2YgdGhlIGVsZW1lbnQgaW4gdGhlIGFycmF5LlxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgdGhlIGFycmF5IHRvIGZpbHRlci5cbiAqIEBwYXJhbSB7T2JqZWN0fSBlbGVtZW50IHRoZSBlbGVtZW50IHRvIHJlbW92ZS5cbiAqIEByZXR1cm4ge0FycmF5fSBuZXcgZmlsdGVyZWQgYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIHJlbW92ZUZyb21BcnJheShhcnJheSwgZWxlbWVudCkge1xuICAgIHJldHVybiBhcnJheS5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsgcmV0dXJuIGl0ZW0uYXNLZXkoKSAhPT0gZWxlbWVudC5hc0tleSgpOyB9KTtcbn1cbi8qKlxuICogQ3JlYXRlIGEgdmFsaWQgcm91dGluZyB0YWJsZSBmcm9tIGEgcmF3IG9iamVjdFxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBkYiB0aGUgZGF0YWJhc2UgbmFtZS4gSXQgaXMgdXNlZCBmb3IgbG9nZ2luZyBwdXJwb3Nlc1xuICogQHBhcmFtIHtTZXJ2ZXJBZGRyZXNzfSByb3V0ZXJBZGRyZXNzIFRoZSByb3V0ZXIgYWRkcmVzcywgaXQgaXMgdXNlZCBmb3IgbG9nZ2luIHB1cnBvc2VzXG4gKiBAcGFyYW0ge1Jhd1JvdXRpbmdUYWJsZX0gcmF3Um91dGluZ1RhYmxlIE1ldGhvZCB1c2VkIHRvIGdldCB0aGUgcmF3IHJvdXRpbmcgdGFibGUgdG8gYmUgcHJvY2Vzc2VkXG4gKiBAcGFyYW0ge1JvdXRpbmdUYWJsZX0gVGhlIHZhbGlkIFJvdXRpbmcgVGFibGVcbiAqL1xuZnVuY3Rpb24gY3JlYXRlVmFsaWRSb3V0aW5nVGFibGUoZGF0YWJhc2UsIHJvdXRlckFkZHJlc3MsIHJhd1JvdXRpbmdUYWJsZSkge1xuICAgIHZhciB0dGwgPSByYXdSb3V0aW5nVGFibGUudHRsO1xuICAgIHZhciBleHBpcmF0aW9uVGltZSA9IGNhbGN1bGF0ZUV4cGlyYXRpb25UaW1lKHJhd1JvdXRpbmdUYWJsZSwgcm91dGVyQWRkcmVzcyk7XG4gICAgdmFyIF9hID0gcGFyc2VTZXJ2ZXJzKHJhd1JvdXRpbmdUYWJsZSwgcm91dGVyQWRkcmVzcyksIHJvdXRlcnMgPSBfYS5yb3V0ZXJzLCByZWFkZXJzID0gX2EucmVhZGVycywgd3JpdGVycyA9IF9hLndyaXRlcnM7XG4gICAgYXNzZXJ0Tm9uRW1wdHkocm91dGVycywgJ3JvdXRlcnMnLCByb3V0ZXJBZGRyZXNzKTtcbiAgICBhc3NlcnROb25FbXB0eShyZWFkZXJzLCAncmVhZGVycycsIHJvdXRlckFkZHJlc3MpO1xuICAgIHJldHVybiBuZXcgUm91dGluZ1RhYmxlKHtcbiAgICAgICAgZGF0YWJhc2U6IGRhdGFiYXNlIHx8IHJhd1JvdXRpbmdUYWJsZS5kYixcbiAgICAgICAgcm91dGVyczogcm91dGVycyxcbiAgICAgICAgcmVhZGVyczogcmVhZGVycyxcbiAgICAgICAgd3JpdGVyczogd3JpdGVycyxcbiAgICAgICAgZXhwaXJhdGlvblRpbWU6IGV4cGlyYXRpb25UaW1lLFxuICAgICAgICB0dGw6IHR0bFxuICAgIH0pO1xufVxuZXhwb3J0cy5jcmVhdGVWYWxpZFJvdXRpbmdUYWJsZSA9IGNyZWF0ZVZhbGlkUm91dGluZ1RhYmxlO1xuLyoqXG4gKiBQYXJzZSBzZXJ2ZXIgZnJvbSB0aGUgUmF3Um91dGluZ1RhYmxlLlxuICpcbiAqIEBwYXJhbSB7UmF3Um91dGluZ1RhYmxlfSByYXdSb3V0aW5nVGFibGUgdGhlIHJhdyByb3V0aW5nIHRhYmxlXG4gKiBAcGFyYW0ge3N0cmluZ30gcm91dGVyQWRkcmVzcyB0aGUgcm91dGVyIGFkZHJlc3NcbiAqIEByZXR1cm5zIHtPYmplY3R9IFRoZSBvYmplY3Qgd2l0aCB0aGUgbGlzdCBvZiByb3V0ZXJzLCByZWFkZXJzIGFuZCB3cml0ZXJzXG4gKi9cbmZ1bmN0aW9uIHBhcnNlU2VydmVycyhyYXdSb3V0aW5nVGFibGUsIHJvdXRlckFkZHJlc3MpIHtcbiAgICB0cnkge1xuICAgICAgICB2YXIgcm91dGVyc18xID0gW107XG4gICAgICAgIHZhciByZWFkZXJzXzEgPSBbXTtcbiAgICAgICAgdmFyIHdyaXRlcnNfMSA9IFtdO1xuICAgICAgICByYXdSb3V0aW5nVGFibGUuc2VydmVycy5mb3JFYWNoKGZ1bmN0aW9uIChzZXJ2ZXIpIHtcbiAgICAgICAgICAgIHZhciByb2xlID0gc2VydmVyLnJvbGU7XG4gICAgICAgICAgICB2YXIgYWRkcmVzc2VzID0gc2VydmVyLmFkZHJlc3NlcztcbiAgICAgICAgICAgIGlmIChyb2xlID09PSAnUk9VVEUnKSB7XG4gICAgICAgICAgICAgICAgcm91dGVyc18xID0gcGFyc2VBcnJheShhZGRyZXNzZXMpLm1hcChmdW5jdGlvbiAoYWRkcmVzcykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gU2VydmVyQWRkcmVzcy5mcm9tVXJsKGFkZHJlc3MpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAocm9sZSA9PT0gJ1dSSVRFJykge1xuICAgICAgICAgICAgICAgIHdyaXRlcnNfMSA9IHBhcnNlQXJyYXkoYWRkcmVzc2VzKS5tYXAoZnVuY3Rpb24gKGFkZHJlc3MpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFNlcnZlckFkZHJlc3MuZnJvbVVybChhZGRyZXNzKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHJvbGUgPT09ICdSRUFEJykge1xuICAgICAgICAgICAgICAgIHJlYWRlcnNfMSA9IHBhcnNlQXJyYXkoYWRkcmVzc2VzKS5tYXAoZnVuY3Rpb24gKGFkZHJlc3MpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFNlcnZlckFkZHJlc3MuZnJvbVVybChhZGRyZXNzKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICByb3V0ZXJzOiByb3V0ZXJzXzEsXG4gICAgICAgICAgICByZWFkZXJzOiByZWFkZXJzXzEsXG4gICAgICAgICAgICB3cml0ZXJzOiB3cml0ZXJzXzFcbiAgICAgICAgfTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHRocm93ICgwLCBuZW80al9kcml2ZXJfY29yZV8xLm5ld0Vycm9yKShcIlVuYWJsZSB0byBwYXJzZSBzZXJ2ZXJzIGVudHJ5IGZyb20gcm91dGVyIFwiLmNvbmNhdChyb3V0ZXJBZGRyZXNzLCBcIiBmcm9tIGFkZHJlc3NlczpcXG5cIikuY29uY2F0KG5lbzRqX2RyaXZlcl9jb3JlXzEuanNvbi5zdHJpbmdpZnkocmF3Um91dGluZ1RhYmxlLnNlcnZlcnMpLCBcIlxcbkVycm9yIG1lc3NhZ2U6IFwiKS5jb25jYXQoZXJyb3IubWVzc2FnZSksIFBST1RPQ09MX0VSUk9SKTtcbiAgICB9XG59XG4vKipcbiAqIENhbGwgdGhlIGV4cGlyYXRpb24gdGltZSB1c2luZyB0aGUgdHRscyBmcm9tIHRoZSByYXcgcm91dGluZyB0YWJsZSBhbmQgcmV0dXJuIGl0XG4gKlxuICogQHBhcmFtIHtSYXdSb3V0aW5nVGFibGV9IHJhd1JvdXRpbmdUYWJsZSB0aGUgcm91dGluZyB0YWJsZVxuICogQHBhcmFtIHtzdHJpbmd9IHJvdXRlckFkZHJlc3MgdGhlIHJvdXRlciBhZGRyZXNzXG4gKiBAcmV0dXJucyB7bnVtYmVyfSB0aGUgdHRsXG4gKi9cbmZ1bmN0aW9uIGNhbGN1bGF0ZUV4cGlyYXRpb25UaW1lKHJhd1JvdXRpbmdUYWJsZSwgcm91dGVyQWRkcmVzcykge1xuICAgIHRyeSB7XG4gICAgICAgIHZhciBub3cgPSAoMCwgbmVvNGpfZHJpdmVyX2NvcmVfMS5pbnQpKERhdGUubm93KCkpO1xuICAgICAgICB2YXIgZXhwaXJlcyA9ICgwLCBuZW80al9kcml2ZXJfY29yZV8xLmludCkocmF3Um91dGluZ1RhYmxlLnR0bClcbiAgICAgICAgICAgIC5tdWx0aXBseSgxMDAwKVxuICAgICAgICAgICAgLmFkZChub3cpO1xuICAgICAgICAvLyBpZiB0aGUgc2VydmVyIHVzZXMgYSByZWFsbHkgYmlnIGV4cGlyZSB0aW1lIGxpa2UgTG9uZy5NQVhfVkFMVUUgdGhpcyBtYXkgaGF2ZSBvdmVyZmxvd2VkXG4gICAgICAgIGlmIChleHBpcmVzLmxlc3NUaGFuKG5vdykpIHtcbiAgICAgICAgICAgIHJldHVybiBuZW80al9kcml2ZXJfY29yZV8xLkludGVnZXIuTUFYX1ZBTFVFO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBleHBpcmVzO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgdGhyb3cgKDAsIG5lbzRqX2RyaXZlcl9jb3JlXzEubmV3RXJyb3IpKFwiVW5hYmxlIHRvIHBhcnNlIFRUTCBlbnRyeSBmcm9tIHJvdXRlciBcIi5jb25jYXQocm91dGVyQWRkcmVzcywgXCIgZnJvbSByYXcgcm91dGluZyB0YWJsZTpcXG5cIikuY29uY2F0KG5lbzRqX2RyaXZlcl9jb3JlXzEuanNvbi5zdHJpbmdpZnkocmF3Um91dGluZ1RhYmxlKSwgXCJcXG5FcnJvciBtZXNzYWdlOiBcIikuY29uY2F0KGVycm9yLm1lc3NhZ2UpLCBQUk9UT0NPTF9FUlJPUik7XG4gICAgfVxufVxuLyoqXG4gKiBBc3NlcnQgaWYgc2VydmVyQWRkcmVzc2VzQXJyYXkgaXMgbm90IGVtcHR5LCB0aHJvd3MgYW5kIFBST1RPQ09MX0VSUk9SIG90aGVyd2lzZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nW119IHNlcnZlckFkZHJlc3Nlc0FycmF5IGFycmF5IG9mIGFkZHJlc3Nlc1xuICogQHBhcmFtIHtzdHJpbmd9IHNlcnZlcnNOYW1lIHRoZSBzZXJ2ZXIgbmFtZVxuICogQHBhcmFtIHtzdHJpbmd9IHJvdXRlckFkZHJlc3MgdGhlIHJvdXRlciBhZGRyZXNzXG4gKi9cbmZ1bmN0aW9uIGFzc2VydE5vbkVtcHR5KHNlcnZlckFkZHJlc3Nlc0FycmF5LCBzZXJ2ZXJzTmFtZSwgcm91dGVyQWRkcmVzcykge1xuICAgIGlmIChzZXJ2ZXJBZGRyZXNzZXNBcnJheS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgdGhyb3cgKDAsIG5lbzRqX2RyaXZlcl9jb3JlXzEubmV3RXJyb3IpKCdSZWNlaXZlZCBubyAnICsgc2VydmVyc05hbWUgKyAnIGZyb20gcm91dGVyICcgKyByb3V0ZXJBZGRyZXNzLCBQUk9UT0NPTF9FUlJPUik7XG4gICAgfVxufVxuZnVuY3Rpb24gcGFyc2VBcnJheShhZGRyZXNzZXMpIHtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoYWRkcmVzc2VzKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcnJheSBleHBlY3RlZCBidXQgZ290OiAnICsgYWRkcmVzc2VzKTtcbiAgICB9XG4gICAgcmV0dXJuIEFycmF5LmZyb20oYWRkcmVzc2VzKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/neo4j-driver-bolt-connection/lib/rediscovery/routing-table.js\n");

/***/ })

};
;